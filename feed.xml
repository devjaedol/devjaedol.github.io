<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="https://kimjaehyun.co.kr/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kimjaehyun.co.kr/" rel="alternate" type="text/html" /><updated>2022-01-29T03:06:46-06:00</updated><id>https://kimjaehyun.co.kr/feed.xml</id><title type="html">꿰보노트</title><subtitle>프로그래밍과 소프트웨어 정보 및 클라우드 개발에 대한 정보를 공유하는 블로그 입니다. 꿰보노트 / 꿰보Note / 꿰어야 보배</subtitle><author><name>devjaedol</name></author><entry><title type="html">NodeJS 기초 정리 - 모듈화</title><link href="https://kimjaehyun.co.kr/nodejs/NodeJS_summary_module/" rel="alternate" type="text/html" title="NodeJS 기초 정리 - 모듈화" /><published>2022-01-22T00:00:00-06:00</published><updated>2022-01-22T00:00:00-06:00</updated><id>https://kimjaehyun.co.kr/nodejs/NodeJS_summary_module</id><content type="html" xml:base="https://kimjaehyun.co.kr/nodejs/NodeJS_summary_module/"><![CDATA[<h2 id="모듈-분리-방법">모듈 분리 방법</h2>
<p>별도 파일을 분리하여 모듈화 함</p>

<h3 id="함수-분리">함수 분리</h3>
<p>exports.함수명 = 함수</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">#</span> <span class="nx">main</span><span class="p">.</span><span class="nx">js</span>
<span class="kd">var</span> <span class="nx">module</span> <span class="o">=</span> <span class="nx">reqire</span><span class="p">(</span><span class="dl">"</span><span class="s2">./fn</span><span class="dl">"</span><span class="p">)</span>
<span class="nx">module</span><span class="p">.</span><span class="nx">함수명1</span><span class="p">();</span>
<span class="nx">module</span><span class="p">.</span><span class="nx">함수명2</span><span class="p">();</span>
<span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="nx">module</span><span class="p">.</span><span class="nx">함수명3</span><span class="p">();</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>

<span class="err">#</span> <span class="nx">fn</span><span class="p">.</span><span class="nx">js</span>
<span class="nx">exports</span><span class="p">.</span><span class="nx">함수명1</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
<span class="err">#</span><span class="p">....</span>
<span class="p">}</span>
<span class="nx">exports</span><span class="p">.</span><span class="nx">함수명2</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
<span class="err">#</span><span class="p">....</span>
<span class="p">}</span>
<span class="nx">exports</span><span class="p">.</span><span class="nx">함수명3</span> <span class="o">=</span> <span class="p">{</span><span class="na">id</span><span class="p">:</span><span class="mi">123</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span><span class="dl">'</span><span class="s1">홍길동</span><span class="dl">'</span><span class="p">};</span>
</code></pre></div></div>

<h3 id="객체-분리1">객체 분리(1)</h3>
<p>module.exports = 객체</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">#</span> <span class="nx">main</span><span class="p">.</span><span class="nx">js</span>
<span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="nx">reqire</span><span class="p">(</span><span class="dl">"</span><span class="s2">./obj</span><span class="dl">"</span><span class="p">)</span>
<span class="nx">obj</span><span class="p">.</span><span class="nx">fn1</span><span class="p">();</span>
<span class="nx">obj</span><span class="p">.</span><span class="nx">fn2</span><span class="p">();</span>


<span class="err">#</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">js</span>
<span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{};</span>
<span class="nx">obj</span><span class="p">.</span><span class="nx">fn1</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
<span class="err">#</span><span class="p">....</span>
<span class="p">};</span>

<span class="nx">obj</span><span class="p">.</span><span class="nx">fn2</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
<span class="err">#</span><span class="p">....</span>
<span class="p">};</span>
<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">;</span> <span class="err">#</span><span class="nx">객체를</span> <span class="nx">할당함</span>
</code></pre></div></div>

<h3 id="객체-분리2">객체 분리(2)</h3>
<p>module.exports = 함수</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">#</span> <span class="nx">main</span><span class="p">.</span><span class="nx">js</span>
<span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="nx">reqire</span><span class="p">(</span><span class="dl">"</span><span class="s2">./obj</span><span class="dl">"</span><span class="p">)</span>
<span class="nx">obj</span><span class="p">().</span><span class="nx">id</span><span class="p">;</span>
<span class="nx">obj</span><span class="p">().</span><span class="nx">name</span><span class="p">;</span>


<span class="err">#</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">js</span>
<span class="kd">var</span> <span class="nx">obj</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
    <span class="k">return</span> <span class="p">{</span><span class="na">id</span><span class="p">:</span><span class="mi">123</span><span class="p">,</span> <span class="na">name</span><span class="p">:</span><span class="dl">'</span><span class="s1">홍길동</span><span class="dl">'</span><span class="p">};</span>
<span class="p">};</span>

<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">;</span> <span class="err">#</span><span class="nx">함수를</span> <span class="nx">할당함</span>
</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="nodejs" /><category term="nodejs" /><summary type="html"><![CDATA[모듈 분리 방법 별도 파일을 분리하여 모듈화 함]]></summary></entry><entry><title type="html">[2강] GitHub blog 만들기(GitHub 설정 및 도메인 연결)</title><link href="https://kimjaehyun.co.kr/etc/jekyll-git-blog_(2)/" rel="alternate" type="text/html" title="[2강] GitHub blog 만들기(GitHub 설정 및 도메인 연결)" /><published>2021-10-24T00:00:00-05:00</published><updated>2021-10-24T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/etc/jekyll-git-blog_(2)</id><content type="html" xml:base="https://kimjaehyun.co.kr/etc/jekyll-git-blog_(2)/"><![CDATA[<p>GitHub에 Jekyll을 통해서 만들어진 HTML 결과물을 배포해 보겠습니다.</p>

<h2 id="github-계정-생성-및-저장소-생성">GitHub 계정 생성 및 저장소 생성</h2>
<p><a href="https://github.com/" target="_blank">https://github.com/</a> 에 Account를 생성 합니다. <br />
Account 로그인 후에 Create a new Repository 를 선택하여, 다음 이름 규칙으로 저장소를 생성합니다. <br />
<img src="\assets\images_post\jekyll\jekyll-github-blog-02_1.png" alt="jekyll-github-blog-02_1" /></p>

<blockquote>
  <p><strong>계정명</strong>.github.io</p>
</blockquote>

<p>제 계정명은 devjaedol 입니다. <br />
저장소 이름은  devjaedol.github.io 로 작성 합니다. <br />
저장소는  Public으로 설정하고 생성 합니다.</p>

<h2 id="git-저장소에-소스-commit-및-구조-설명">Git 저장소에 소스 Commit 및 구조 설명</h2>

<p>1강에서 작업한 D:\jekyll-blog 에 내용을 생성한 git repository에 다음과 같이 위치 시킵니다.
bundle exec jekyll serve 명령어를 통해 서버를 실행 시키면, 
설정된 jekyll 내용대로 html 이 D:\jekyll-blog_site 에 생성됩니다.
위 두가지 설정을 생성한 repository에 2개의 branch를 생성하여 위치 시킵니다.</p>

<p>GitHub 저장소 구조</p>
<ul>
  <li>계정명.github.io
    <ul>
      <li>master   : jekyll를 통해 컴파일된 HTML이 배치됨
        <ul>
          <li>( D:\jekyll-blog_site 이하 내용 )</li>
        </ul>
      </li>
      <li>source   : jekyll 설정 소스가 배치됨
        <ul>
          <li>( D:\jekyll-blog 이하 내용 )</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>source branch의 jekyll 소스를 Travis-CI를 통해 자동 빌드하여 master brach로 자동화 처리를 다음 편에서 진행 합니다. <br />
즉, master에 _site의 내용은 자동으로 업데이트 되나, 지금은 구동되는 구조를 이해하기 위해서 다음과 같이 진행 해보겠습니다.</p>

<p>D:\jekyll-blog_site 에서 cmd 창에 다음 명령어를 입력 합니다. <br />
위 작업을 하기 위해서는 git 설치와 git접속 인증 설정 등이 되어 있어야 합니다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git init
git commit -m "first site commit"
git remote add origin https://github.com/계정명/계정명.github.io.git
git branch -M master
git push -u origin master
</code></pre></div></div>

<p>git push가 완료된 후 브라우저를 통해서   <br />
https://계정명.github.io 으로 접속 해 봅니다. <br />
로컬 기동 화면과 같은 화면이 해당 계정명으로 출력 됩니다. <br />
(아래에서 주소가 다름 참고)</p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_13.png" alt="jekyll-github-blog-01_1" /></p>

<h2 id="doamin-연결">Doamin 연결</h2>

<p>연결할 도메인의 DNS를 github로 설정을 변경 합니다.   <br />
<img src="\assets\images_post\jekyll\jekyll-github-blog-02_3.png" alt="jekyll-github-blog-02_3" /></p>
<ul>
  <li>DNS 설정 값
    <ul>
      <li>A Type
        <ul>
          <li>185.199.108.153</li>
          <li>185.199.109.153</li>
          <li>185.199.110.153</li>
          <li>185.199.111.153</li>
        </ul>
      </li>
      <li>CNAME Type
        <ul>
          <li>devjaedol.github.io</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>개인 도메인을 GitHub에 연결하려면, 연결할 Repository에 접근 합니다.  <br />
settings &gt;  Pages  &gt; Cusom domain 에 도메인을 입력 후 저장 합니다.</p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-02_2.png" alt="jekyll-github-blog-02_2" /></p>

<p>DNS 등이 정상적으로 되었다면, 에러 없이 Save가 됩니다만, DNS오류 등이 발생하면 해당 내용이 출력 됩니다.</p>]]></content><author><name>devjaedol</name></author><category term="etc" /><category term="jekyll" /><category term="githug" /><category term="blog" /><category term="github blog" /><category term="minimal-mistakes" /><summary type="html"><![CDATA[GitHub에 Jekyll을 통해서 만들어진 HTML 결과물을 배포해 보겠습니다.]]></summary></entry><entry><title type="html">electron 설치 패키지 셋팅</title><link href="https://kimjaehyun.co.kr/nodejs/electron_default_setup/" rel="alternate" type="text/html" title="electron 설치 패키지 셋팅" /><published>2021-10-24T00:00:00-05:00</published><updated>2021-10-24T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/nodejs/electron_default_setup</id><content type="html" xml:base="https://kimjaehyun.co.kr/nodejs/electron_default_setup/"><![CDATA[<p><strong>Build cross-platform desktop apps with JavaScript, HTML, and CSS</strong>  <br />
최근 설치형 Application 개발에 클로스 플랫폼 지원과 Javascript로 개발을 지원하는 electron의 설치형 패키지 기본 구조를 정리 합니다.</p>

<p>아래 제품들이 Electron을 통해 개발된 SW Package 입니다.</p>
<ul>
  <li>Visual Studio Code</li>
  <li>Facebook Messenger</li>
  <li>Microsoft Teams</li>
</ul>

<p>기본적으로 Nodejs를 설치 합니다.
<a href="https://nodejs.org/ko/download/" target="_blank">https://nodejs.org/ko/download/</a></p>

<p>특정 디렉토리에 노드프로젝트를 설치 합니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">npm</span> <span class="nx">init</span> 
<span class="c1">// index.js -&gt; main.js로 변경한다.</span>
<span class="c1">// 관련 패키지 설치</span>
<span class="nx">npm</span> <span class="nx">install</span> <span class="o">--</span><span class="nx">save</span> <span class="nx">electron</span>
<span class="nx">npm</span> <span class="nx">install</span> <span class="o">--</span><span class="nx">save</span> <span class="nx">electron</span><span class="o">-</span><span class="nx">builder</span>
<span class="nx">npm</span> <span class="nx">install</span> <span class="o">--</span><span class="nx">save</span><span class="o">--</span><span class="nx">dev</span> <span class="nx">electron</span><span class="o">-</span><span class="nx">log</span>
<span class="nx">npm</span> <span class="nx">install</span> <span class="o">--</span><span class="nx">save</span><span class="o">--</span><span class="nx">dev</span> <span class="nx">electron</span><span class="o">-</span><span class="nx">updater</span>
</code></pre></div></div>

<p>package json</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"test_electron"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1.0.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
    </span><span class="nl">"main"</span><span class="p">:</span><span class="w"> </span><span class="s2">"main.js"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"scripts"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"electron ."</span><span class="p">,</span><span class="w">
        </span><span class="nl">"test"</span><span class="p">:</span><span class="w"> </span><span class="s2">"echo </span><span class="se">\"</span><span class="s2">Error: no test specified</span><span class="se">\"</span><span class="s2"> &amp;&amp; exit 1"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"deploy"</span><span class="p">:</span><span class="w"> </span><span class="s2">"electron-builder --win --x64 --ia32"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"keywords"</span><span class="p">:</span><span class="w"> </span><span class="p">[],</span><span class="w">
    </span><span class="nl">"author"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
    </span><span class="nl">"license"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ISC"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"devDependencies"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"electron"</span><span class="p">:</span><span class="w"> </span><span class="s2">"8.0.0"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"electron-builder"</span><span class="p">:</span><span class="w"> </span><span class="s2">"22.3.2"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"dependencies"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"electron-log"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^4.4.1"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"electron-updater"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^4.3.9"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"systeminformation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^5.9.7"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"build"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"productName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"HelloElectron"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"appId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"com.electron.hello"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"asar"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
        </span><span class="nl">"npmArgs"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
            </span><span class="s2">"--production"</span><span class="w">
        </span><span class="p">],</span><span class="w">
        </span><span class="nl">"protocols"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"helloElectron"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"schemes"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"helloelectron"</span><span class="w">
            </span><span class="p">]</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="nl">"win"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"requestedExecutionLevel"</span><span class="p">:</span><span class="w"> </span><span class="s2">"requireAdministrator"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"target"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"zip"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"nsis"</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="nl">"icon"</span><span class="p">:</span><span class="w"> </span><span class="s2">"./resources/installer/default.ico"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="nl">"nsis"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"oneClick"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
            </span><span class="nl">"allowToChangeInstallationDirectory"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="nl">"directories"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"buildResources"</span><span class="p">:</span><span class="w"> </span><span class="s2">"./resources/installer/"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"output"</span><span class="p">:</span><span class="w"> </span><span class="s2">"./dist/"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"app"</span><span class="p">:</span><span class="w"> </span><span class="s2">"."</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>main.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// app모듈과, BrowserWindow 모듈 할당</span>
<span class="kd">const</span> <span class="p">{</span><span class="nx">Menu</span><span class="p">,</span> <span class="nx">app</span><span class="p">,</span> <span class="nx">BrowserWindow</span><span class="p">,</span> <span class="nx">ipcMain</span><span class="p">,</span> <span class="nx">Tray</span><span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">electron</span><span class="dl">'</span><span class="p">);</span>


<span class="c1">//자동 업데이트를 위해서</span>
<span class="kd">const</span> <span class="p">{</span> <span class="nx">autoUpdater</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">electron-updater</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">log</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">electron-log</span><span class="dl">'</span><span class="p">);</span>


<span class="nx">autoUpdater</span><span class="p">.</span><span class="nx">logger</span> <span class="o">=</span> <span class="nx">log</span><span class="p">;</span>
<span class="nx">autoUpdater</span><span class="p">.</span><span class="nx">logger</span><span class="p">.</span><span class="nx">transports</span><span class="p">.</span><span class="nx">file</span><span class="p">.</span><span class="nx">level</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">info</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">App starting...</span><span class="dl">'</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">process.platform : </span><span class="dl">"</span><span class="o">+</span><span class="nx">process</span><span class="p">.</span><span class="nx">platform</span><span class="p">);</span>        <span class="c1">//process.platform : win32      darwin</span>

<span class="kd">let</span> <span class="nx">win</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">tray</span><span class="p">;</span>

<span class="cm">/** 메인 창 생성 */</span>
<span class="kd">function</span> <span class="nx">createMainWindow</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">win</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">BrowserWindow</span><span class="p">(</span>
        <span class="p">{</span>
            <span class="na">width</span> <span class="p">:</span> <span class="mi">800</span>
            <span class="p">,</span> <span class="na">minWidth</span><span class="p">:</span><span class="mi">330</span>
            <span class="p">,</span> <span class="na">height</span> <span class="p">:</span><span class="mi">500</span>
            <span class="p">,</span> <span class="na">minHeight</span><span class="p">:</span> <span class="mi">450</span>
            <span class="p">,</span> <span class="na">show</span><span class="p">:</span> <span class="kc">false</span>
            <span class="c1">//, icon: __dirname + '/resources/installer/Icon.ico'</span>
            <span class="p">,</span> <span class="na">webPreferences</span> <span class="p">:</span>  <span class="p">{</span> 
                                    <span class="na">defaultFontSize</span> <span class="p">:</span> <span class="mi">14</span><span class="p">,</span>
                                    <span class="na">nodeIntegration</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>  <span class="c1">// true로 설정, Uncaught ReferenceError: require is not defined</span>
                                    <span class="na">contextIsolation</span> <span class="p">:</span> <span class="kc">false</span>
                                <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">);</span>

    <span class="c1">// 창이 ready 상태가되면 보여주기</span>
    <span class="nx">win</span><span class="p">.</span><span class="nx">once</span><span class="p">(</span><span class="dl">'</span><span class="s1">ready-to-show</span><span class="dl">'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
        <span class="nx">win</span><span class="p">.</span><span class="nx">show</span><span class="p">();</span>
    <span class="p">});</span>

    <span class="c1">// 윈도우 창에 로드 할 html 페이지</span>
    <span class="nx">win</span><span class="p">.</span><span class="nx">loadURL</span><span class="p">(</span><span class="s2">`file://</span><span class="p">${</span><span class="nx">__dirname</span><span class="p">}</span><span class="s2">/index.html`</span><span class="p">);</span> <span class="c1">//작은 따옴표가 아닌  back stick 기호(tab키 위)</span>
    <span class="c1">//__dirname : node.js 전역변수이며, 현재 실행중인 코드의 파일 경로를 나타냄</span>

    <span class="c1">//tray icon</span>
    <span class="nx">initTrayIconMenu</span><span class="p">();</span>

    <span class="c1">//Event 처리</span>
    <span class="c1">//비동기 호출</span>
    <span class="nx">ipcMain</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">asyncEventKey</span><span class="dl">'</span><span class="p">,(</span><span class="nx">event</span><span class="p">,</span> <span class="nx">argument</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Async &gt; RECV</span><span class="dl">"</span><span class="p">);</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">argument</span><span class="p">);</span>

        <span class="nx">win</span><span class="p">.</span><span class="nx">setFullScreen</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>

        <span class="nx">setTimeout</span><span class="p">(()</span><span class="o">=&gt;</span><span class="p">{</span>
            <span class="nx">event</span><span class="p">.</span><span class="nx">sender</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="dl">'</span><span class="s1">asyncEventKeyCb</span><span class="dl">'</span><span class="p">,{</span><span class="na">result</span><span class="p">:</span><span class="dl">'</span><span class="s1">success</span><span class="dl">'</span><span class="p">});</span> <span class="c1">// 비동기 메시지를 전송한다.</span>
        <span class="p">},</span><span class="mi">5000</span><span class="p">);</span>
    <span class="p">});</span>

    <span class="c1">//동기 호출</span>
    <span class="nx">ipcMain</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">syncEventKey</span><span class="dl">'</span><span class="p">,(</span><span class="nx">event</span><span class="p">,</span> <span class="nx">argument</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Sync &gt; RECV</span><span class="dl">"</span><span class="p">);</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">argument</span><span class="p">);</span>

        <span class="nx">win</span><span class="p">.</span><span class="nx">setFullScreen</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>

        <span class="nx">setTimeout</span><span class="p">(()</span><span class="o">=&gt;</span><span class="p">{</span>
            <span class="nx">event</span><span class="p">.</span><span class="nx">returnValue</span> <span class="o">=</span> <span class="p">{</span><span class="na">result</span><span class="p">:</span><span class="dl">'</span><span class="s1">success</span><span class="dl">'</span><span class="p">}</span> <span class="c1">// 동기 메시지를 전송한다.</span>
        <span class="p">},</span><span class="mi">5000</span><span class="p">);</span>
    <span class="p">});</span>

    <span class="c1">//개발자 도구 오픈</span>
    <span class="nx">win</span><span class="p">.</span><span class="nx">webContents</span><span class="p">.</span><span class="nx">openDevTools</span><span class="p">();</span>
<span class="p">}</span><span class="c1">// end fn</span>

<span class="c1">// Tray생성</span>
<span class="kd">function</span> <span class="nx">initTrayIconMenu</span><span class="p">(){</span>
    <span class="nx">tray</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Tray</span><span class="p">(</span><span class="dl">'</span><span class="s1">./resources/installer/default.ico</span><span class="dl">'</span><span class="p">);</span> 
    <span class="kd">const</span> <span class="nx">myMenu</span> <span class="o">=</span> <span class="nx">Menu</span><span class="p">.</span><span class="nx">buildFromTemplate</span><span class="p">([</span>
      <span class="p">{</span><span class="na">label</span><span class="p">:</span> <span class="dl">'</span><span class="s1">1번</span><span class="dl">'</span><span class="p">,</span> <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">normal</span><span class="dl">'</span><span class="p">,</span> <span class="na">checked</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span> <span class="na">click</span><span class="p">:</span> <span class="p">()</span><span class="o">=&gt;</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">1번클릭!</span><span class="dl">'</span><span class="p">)}</span> <span class="p">},</span>  <span class="c1">//checked는 기본선택입니다.</span>
      <span class="p">{</span><span class="na">label</span><span class="p">:</span> <span class="dl">'</span><span class="s1">2번</span><span class="dl">'</span><span class="p">,</span> <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">normal</span><span class="dl">'</span><span class="p">,</span> <span class="na">click</span><span class="p">:</span> <span class="p">()</span><span class="o">=&gt;</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">2번클릭!</span><span class="dl">'</span><span class="p">)}},</span>
      <span class="p">{</span><span class="na">label</span><span class="p">:</span> <span class="dl">'</span><span class="s1">3번</span><span class="dl">'</span><span class="p">,</span> <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">normal</span><span class="dl">'</span><span class="p">,</span> <span class="na">click</span><span class="p">:</span> <span class="p">()</span><span class="o">=&gt;</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">3번클릭!</span><span class="dl">'</span><span class="p">)}}</span>
    <span class="p">])</span>
    <span class="nx">tray</span><span class="p">.</span><span class="nx">setToolTip</span><span class="p">(</span><span class="dl">'</span><span class="s1">트레이 아이콘!</span><span class="dl">'</span><span class="p">)</span>
    <span class="nx">tray</span><span class="p">.</span><span class="nx">setContextMenu</span><span class="p">(</span><span class="nx">myMenu</span><span class="p">)</span>
<span class="p">}</span>

<span class="nx">app</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">ready</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span><span class="p">{</span>
    <span class="nx">createMainWindow</span><span class="p">();</span>
    <span class="c1">//autoUpdater.checkForUpdates(); //업데이트 체크 필요시 해당 위치에서 진행</span>
<span class="p">});</span>

<span class="nx">app</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">window-all-closed</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">app</span><span class="p">.</span><span class="nx">quit</span><span class="p">();</span>
    <span class="nx">tray</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span>
<span class="p">});</span>

<span class="cm">/* autoUpdater 구현시 =====================================*/</span>
<span class="nx">autoUpdater</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">checking-for-update</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">업데이트 확인 중...</span><span class="dl">'</span><span class="p">);</span>
<span class="p">});</span>
<span class="nx">autoUpdater</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">update-available</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">info</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">업데이트가 가능합니다.</span><span class="dl">'</span><span class="p">);</span>
<span class="p">});</span>
<span class="nx">autoUpdater</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">update-not-available</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">info</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">현재 최신버전입니다.</span><span class="dl">'</span><span class="p">);</span>
<span class="p">});</span>
<span class="nx">autoUpdater</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">error</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">에러가 발생하였습니다. 에러내용 : </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">err</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">autoUpdater</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">download-progress</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">progressObj</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">log_message</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">다운로드 속도: </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">progressObj</span><span class="p">.</span><span class="nx">bytesPerSecond</span><span class="p">;</span>
    <span class="nx">log_message</span> <span class="o">=</span> <span class="nx">log_message</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> - 현재 </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">progressObj</span><span class="p">.</span><span class="nx">percent</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">%</span><span class="dl">'</span><span class="p">;</span>
    <span class="nx">log_message</span> <span class="o">=</span> <span class="nx">log_message</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> (</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">progressObj</span><span class="p">.</span><span class="nx">transferred</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">/</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">progressObj</span><span class="p">.</span><span class="nx">total</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">)</span><span class="dl">'</span><span class="p">;</span>
    <span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="nx">log_message</span><span class="p">);</span>
<span class="p">})</span>
<span class="nx">autoUpdater</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">update-downloaded</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">info</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">업데이트가 완료되었습니다.</span><span class="dl">'</span><span class="p">);</span>
    <span class="kd">const</span> <span class="nx">option</span> <span class="o">=</span> <span class="p">{</span>
        <span class="na">type</span><span class="p">:</span> <span class="dl">"</span><span class="s2">question</span><span class="dl">"</span><span class="p">,</span>
        <span class="na">buttons</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">업데이트</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">취소</span><span class="dl">"</span><span class="p">],</span>
        <span class="na">defaultId</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
        <span class="na">title</span><span class="p">:</span> <span class="dl">"</span><span class="s2">electron-updater</span><span class="dl">"</span><span class="p">,</span>
        <span class="na">message</span><span class="p">:</span> <span class="dl">"</span><span class="s2">업데이트가 있습니다. 프로그램을 업데이트 하시겠습니까?</span><span class="dl">"</span><span class="p">,</span>
    <span class="p">};</span>
    <span class="kd">let</span> <span class="nx">btnIndex</span> <span class="o">=</span> <span class="nx">dialog</span><span class="p">.</span><span class="nx">showMessageBoxSync</span><span class="p">(</span><span class="nx">updateWin</span><span class="p">,</span> <span class="nx">option</span><span class="p">);</span>

    <span class="k">if</span><span class="p">(</span><span class="nx">btnIndex</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">autoUpdater</span><span class="p">.</span><span class="nx">quitAndInstall</span><span class="p">();</span>
    <span class="p">}</span>    
<span class="p">});</span>
</code></pre></div></div>

<p>index.html</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"en"</span><span class="nt">&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;title&gt;</span> Electron<span class="nt">&lt;/title&gt;</span>
    
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;h1&gt;</span> Electron!<span class="nt">&lt;/h1&gt;</span>

    <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">'btnAsync'</span><span class="nt">&gt;</span>Async send<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">'btnSync'</span><span class="nt">&gt;</span>Sync send<span class="nt">&lt;/button&gt;</span>

    <span class="nt">&lt;hr&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">'btnNewWin1'</span><span class="nt">&gt;</span>window 1<span class="nt">&lt;/button&gt;</span>

    <span class="nt">&lt;hr&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">'btnClose'</span><span class="nt">&gt;</span>Close<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span> <span class="na">src=</span><span class="s">"./render.js"</span><span class="nt">&gt;&lt;/script&gt;</span>

<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>

</code></pre></div></div>

<p>화면측 기능을 담당하는 Script 파일  <br />
render.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="p">{</span><span class="nx">ipcRenderer</span><span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">electron</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">btnAsync</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">btnAsync</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">btnSync</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">btnSync</span><span class="dl">"</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">c_data</span> <span class="o">=</span>  <span class="p">{</span><span class="na">customdata1</span><span class="p">:</span><span class="mi">1000</span><span class="p">,</span><span class="na">customdata2</span><span class="p">:</span><span class="dl">'</span><span class="s1">string</span><span class="dl">'</span><span class="p">};</span>

<span class="nx">btnAsync</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">click</span><span class="dl">'</span><span class="p">,()</span><span class="o">=&gt;</span><span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">비동기 화면에서 보냄&gt;</span><span class="dl">"</span><span class="p">);</span>
    <span class="nx">ipcRenderer</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="dl">'</span><span class="s1">asyncEventKey</span><span class="dl">'</span><span class="p">,</span> <span class="nx">c_data</span><span class="p">);</span>

<span class="p">});</span>
<span class="nx">btnSync</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">click</span><span class="dl">'</span><span class="p">,()</span><span class="o">=&gt;</span><span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">동기 화면에서 보냄&gt;</span><span class="dl">"</span><span class="p">);</span>
    <span class="kd">let</span> <span class="nx">reVal</span> <span class="o">=</span> <span class="nx">ipcRenderer</span><span class="p">.</span><span class="nx">sendSync</span><span class="p">(</span><span class="dl">'</span><span class="s1">syncEventKey</span><span class="dl">'</span><span class="p">,</span> <span class="nx">c_data</span><span class="p">);</span>    
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">동기 결과&gt;</span><span class="dl">"</span><span class="p">);</span>    
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">reVal</span><span class="p">);</span>
<span class="p">});</span>


<span class="nx">ipcRenderer</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">asyncEventKeyCb</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">event</span><span class="p">,</span> <span class="nx">arg</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">비동기 결과&gt;</span><span class="dl">"</span><span class="p">);</span>    
    <span class="c1">//console.log(JSON.stringify(event, null, 2));</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">arg</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="mi">2</span><span class="p">));</span>
<span class="p">})</span>


<span class="c1">///////////////////////////////////////////////////////</span>
<span class="kd">const</span> <span class="nx">electron</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">electron</span><span class="dl">'</span><span class="p">)</span>
<span class="kd">const</span> <span class="nx">btnWin1</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">btnNewWin1</span><span class="dl">"</span><span class="p">);</span>

<span class="nx">btnWin1</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">click</span><span class="dl">'</span><span class="p">,()</span><span class="o">=&gt;</span><span class="p">{</span>
    <span class="kd">const</span> <span class="nx">BrowserWindow</span> <span class="o">=</span> <span class="nx">electron</span><span class="p">.</span><span class="nx">remote</span><span class="p">.</span><span class="nx">BrowserWindow</span><span class="p">;</span>
    <span class="kd">const</span> <span class="nx">win</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">BrowserWindow</span><span class="p">({</span>
        <span class="na">height</span><span class="p">:</span> <span class="mi">1080</span><span class="p">,</span>
        <span class="na">width</span><span class="p">:</span> <span class="mi">1920</span><span class="p">,</span>
        <span class="na">show</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
        <span class="na">y</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span>
        <span class="na">x</span><span class="p">:</span><span class="o">-</span><span class="mi">959</span><span class="p">,</span>    <span class="c1">//</span>
        <span class="c1">//alwaysOnTop : true,</span>
        <span class="na">fullscreen</span> <span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
        <span class="na">movable</span> <span class="p">:</span> <span class="kc">true</span><span class="p">,</span>  
        <span class="na">frame</span> <span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
        <span class="c1">//autoHideMenuBar : true</span>
    <span class="p">});</span>
    <span class="nx">win</span><span class="p">.</span><span class="nx">loadURL</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://www.naver.com</span><span class="dl">'</span><span class="p">);</span>
    <span class="nx">win</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">close</span><span class="dl">'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="nx">win</span> <span class="o">=</span> <span class="kc">null</span> <span class="p">});</span>
    <span class="nx">win</span><span class="p">.</span><span class="nx">once</span><span class="p">(</span><span class="dl">'</span><span class="s1">ready-to-show</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="nx">win</span><span class="p">.</span><span class="nx">show</span><span class="p">();</span>
    <span class="p">});</span>
<span class="p">});</span>
</code></pre></div></div>

<p>실행하기</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>D:\workspace_VS\test_electron&gt;npm start

&gt; test_electron@1.0.0 start D:\workspace_VS\test_electron
&gt; electron .


21:43:48.094 &gt; App starting...
process.platform : win32
(electron) The default value of app.allowRendererProcessReuse is deprecated, it is currently "false".  It will change to be "true" in Electron 9.  For more information please check https://github.com/electron/electron/issues/18397

</code></pre></div></div>

<p><img src="\assets\images_post\nodejs\2021-10-24-electron_01.png" alt="2021-10-24-electron_01.png" /></p>

<p>패키지 빌드 하기</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>D:\workspace_VS\test_electron&gt;npm run deploy

&gt; test_electron@1.0.0 deploy D:\workspace_VS\test_electron
&gt; electron-builder --win --x64 --ia32

  • electron-builder  version=22.3.2 os=10.0.18363
  • loaded configuration  file=package.json ("build" field)
  • Specified application directory equals to project dir — superfluous or wrong configuration  appDirectory=.
  • description is missed in the package.json  appPackageFile=D:\workspace_VS\test_electron\package.json
  • writing effective config  file=dist\builder-effective-config.yaml
  • packaging       platform=win32 arch=x64 electron=8.0.0 appOutDir=dist\win-unpacked
  • downloading     url=https://github.com/electron-userland/electron-builder-binaries/releases/download/winCodeSign-2.5.0/winCodeSign-2.5.0.7z size=5.6 MB parts=1  
  • downloaded      url=https://github.com/electron-userland/electron-builder-binaries/releases/download/winCodeSign-2.5.0/winCodeSign-2.5.0.7z duration=4.44s       
  • building        target=zip arch=x64 file=dist\HelloElectron-1.0.0-win.zip
  • packaging       platform=win32 arch=ia32 electron=8.0.0 appOutDir=dist\win-ia32-unpacked
  • building        target=zip arch=ia32 file=dist\HelloElectron-1.0.0-ia32-win.zip
  • building        target=nsis file=dist\HelloElectron Setup 1.0.0.exe archs=x64, ia32 oneClick=false perMachine=false
  • downloading     url=https://github.com/electron-userland/electron-builder-binaries/releases/download/nsis-3.0.4.1/nsis-3.0.4.1.7z size=1.3 MB parts=1
  • downloaded      url=https://github.com/electron-userland/electron-builder-binaries/releases/download/nsis-3.0.4.1/nsis-3.0.4.1.7z duration=3.058s
  • building block map  blockMapFile=dist\HelloElectron Setup 1.0.0.exe.blockmap

</code></pre></div></div>
<p>패키지 완료 후 dist 폴더에 해당 설치 파일이 생성 됩니다.</p>

<p><img src="\assets\images_post\nodejs\2021-10-24-electron_02.png" alt="2021-10-24-electron_02.png" /></p>]]></content><author><name>devjaedol</name></author><category term="nodejs" /><category term="nodejs" /><category term="electron" /><category term="install package" /><summary type="html"><![CDATA[Build cross-platform desktop apps with JavaScript, HTML, and CSS 최근 설치형 Application 개발에 클로스 플랫폼 지원과 Javascript로 개발을 지원하는 electron의 설치형 패키지 기본 구조를 정리 합니다.]]></summary></entry><entry><title type="html">[1강] GitHub blog 만들기(jekyll 기본 설정)</title><link href="https://kimjaehyun.co.kr/etc/jekyll-git-blog_(1)/" rel="alternate" type="text/html" title="[1강] GitHub blog 만들기(jekyll 기본 설정)" /><published>2021-10-24T00:00:00-05:00</published><updated>2021-10-24T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/etc/jekyll-git-blog_(1)</id><content type="html" xml:base="https://kimjaehyun.co.kr/etc/jekyll-git-blog_(1)/"><![CDATA[<p>jekyll을 통해서 GitHub blog를 만들어 보겠습니다.   <br />
작업을 위한 필요 지식 수준은 GitHub에 저장소를 만들고 소스를 등록 및 업데이트 할수 있는 지식 수준이 필요합니다. <br />
최대한 단순하고 간략하게만 정리하도록 하겠습니다.</p>

<h2 id="jekyll-장단점-소개">Jekyll 장단점 소개</h2>

<p>jekyll을 통해서 Git blog를 운용시 다른 플랫폼이 제공하는 블로그에 비해서 장단점이 명확히 다릅니다.</p>

<p>장점으로는</p>

<ul>
  <li>Custmize. ( HTML 기반으로 모든 변경이 가능합니다.)</li>
  <li>다양한 Template ( 수많은 템플릿 중에 선택적으로 설치하여 사용이 가능합니다.)</li>
  <li>GitHub의 공간을 사용하므로, 별도의 호스팅 비용이 필요하지 않습니다.</li>
</ul>

<p>단점으로는</p>

<ul>
  <li>플랫폼이 제공하는 블로그에 비하면 강력하게 불편 합니다.</li>
  <li>손이 많이 갑니다.(Tistory처럼 단순히 글만 쓰면 되는 정도의 수준이 넘습니다.)</li>
  <li>HTML 등의 기초 홈페이지 관리에 대한 기본 지식이 필요합니다.</li>
  <li>로컬에서 뭔가 서버 개발 작업하듯이 설치와 설정을 꽤 많이 해야됩니다.</li>
</ul>

<p>이제 부터 간단히 블로그 생성 방법을 정리해 보겠습니다.</p>

<h2 id="ruby-설치">Ruby 설치.</h2>

<p>Jekyll은 Ruby를 통해서 구동됩니다.
설치 버전 Ruby+Devkit 2.6.6-1 (x64)</p>

<blockquote>
  <p><a href="https://rubyinstaller.org/downloads/archives/" title="루비 설치" target="_blank">Ruby 다운로드</a></p>
</blockquote>

<p>설치를 진행 합니다</p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_1.png" alt="jekyll-github-blog-01_1" /></p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_2.png" alt="jekyll-github-blog-01_2" /></p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_3.png" alt="jekyll-github-blog-01_3" /></p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_4.png" alt="jekyll-github-blog-01_4" /></p>

<p>설치가 완료되면 다음과 같은 콘솔이 출력됩니다.</p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_5.png" alt="jekyll-github-blog-01_5" /></p>

<p>Which components shall be installed? If unsure press ENTER [1,3]</p>

<p>1 - MSYS2 base installation 을 선택 합니다.</p>

<p>Which components shall be installed? If unsure press ENTER[]</p>

<p>Enter를 입력 합니다.</p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_7.png" alt="jekyll-github-blog-01_7" /></p>

<h2 id="bundler-를-설치">bundler 를 설치</h2>

<p>CMD 창에 아래와 같이 명령어를 입력 합니다.</p>

<blockquote>
  <p>gem install bundler</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>C:\&gt;gem install bundler
    Fetching bundler-2.2.29.gem
    Successfully installed bundler-2.2.29g
    Parsing documentation for bundler-2.2.29
    Installing ri documentation for bundler-2.2.29
    Done installing documentation for bundler after 4 seconds
    1 gem installed
</code></pre></div></div>
<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_8.png" alt="jekyll-github-blog-01_8" /></p>

<h2 id="blog-설치-디렉토리-생성">Blog 설치 디렉토리 생성</h2>

<p>블로그 홈 서버를 실행할 작업 임시 경로를 선정하십시요.</p>

<p>저는 아래 경로에 임시로 작업을 진행 합니다.</p>

<p>D:\jekyll-blog</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>c:\&gt;d:
d:\&gt;mkdir jekyll-blog
d:\&gt;cd jekyll-blog
d:\jekyll-blog&gt;
</code></pre></div></div>

<h2 id="테마-설치">테마 설치</h2>

<p>Jekyll 의 강력한 장점 중 하나가  다양한 테마 입니다.</p>

<p>아래 사이트 들은 Jekyll 테마를 모아놓은 사이트 입니다.</p>

<p>이곳에서 원하는 테마를 선택 하십시요.</p>

<ul>
  <li><a href="https://jekyll-themes.com/free/" target="_blank">https://jekyll-themes.com/free/</a></li>
  <li><a href="http://themes.jekyllrc.org" target="_blank">http://themes.jekyllrc.org</a></li>
  <li><a href="http://jekyllthemes.org" target="_blank">http://jekyllthemes.org</a></li>
  <li><a href="https://jekyllthemes.io/free" target="_blank">https://jekyllthemes.io/free</a></li>
  <li><a href="https://jekyllthemes.dev/" target="_blank">https://jekyllthemes.dev/</a></li>
  <li><a href="https://drjekyllthemes.github.io/new" target="_blank">https://drjekyllthemes.github.io/new</a></li>
</ul>

<p>저는 Minimal Mistakes Jekyll theme 라는 테마를 통해서 홈페이지를 꾸미고 있습니다.</p>

<p>본 테마는 꽤 인기있는 테마로 심플함이 최대 장점이라서 적용 했습니다.</p>

<ul>
  <li><a href="https://jekyllthemes.io/theme/minimal-mistakes" target="_blank">https://jekyllthemes.io/theme/minimal-mistakes</a></li>
  <li><a href="https://mmistakes.github.io/minimal-mistakes/docs/quick-start-guide/" target="_blank">데모사이트 -Guick start guide</a></li>
</ul>

<p>우선 해당 git에서 소스를 zip 형태로 다운 받습니다.</p>

<p><a href="https://github.com/mmistakes/minimal-mistakes" target="_blank">https://github.com/mmistakes/minimal-mistakes</a></p>

<p>다운로드한  Zip파일을 생성한 D:\jekyll-blog 에 풀어 놓습니다.</p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_9.png" alt="jekyll-github-blog-01_9" /></p>

<h2 id="bundle-설치">bundle 설치</h2>

<p>임시로 작업 폴더(테마가 다운된 경로)에서 번들 설치를 위한 다음 명령어를 입력 합니다.</p>

<blockquote>
  <p>bundle install</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>d:\jekyll-blog&gt;bundle install
</code></pre></div></div>

<p>테마와 관련된 bundle이 모두 설치 됩니다.</p>

<p>유사 기능으로는 npm install, pip install 과 같이 관련 패키지 모두 자동화로 설치해주신다고 보면 됩니다.</p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_10.png" alt="jekyll-github-blog-01_10" /></p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_11.png" alt="jekyll-github-blog-01_11" /></p>

<h2 id="로컬-서비-시작">로컬 서비 시작</h2>

<p>테마가 다운된 경로에서 서비스를 시작 합니다</p>

<blockquote>
  <p>bundle exec jekyll serve</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>d:\jekyll-blog&gt;bundle exec jekyll serve
</code></pre></div></div>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_12.png" alt="jekyll-github-blog-01_12" /></p>

<p>테마에 적용된 내용이 html로 생성되며, 잠시 뒤 http://127.0.0.1:4000 메세지와 함께 서비스가 기동된 것을 알수 있습니다.</p>

<h2 id="브라우저-접속을-통한-blog-서비스-확인">브라우저 접속을 통한 Blog 서비스 확인</h2>

<p>서버 기동 후 http://127.0.0.1:4000 에 접속해보면, 아래와 같은 기초 페이지가 생성되어 보여 집니다.</p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_13.png" alt="jekyll-github-blog-01_13" /></p>

<h2 id="첫번째-포트스-작성">첫번째 포트스 작성</h2>
<p>jekyll의 포트스는 markdown을 기본으로 지원 합니다.</p>

<p>아래 파일을 만듭니다.</p>
<blockquote>
  <p>d:\jekyll-blog_posts\2021-10-24-myfirstpost.md</p>
</blockquote>

<p>모든 포스트의 위치는 _posts 폴더 밑 입니다. <br />
파일 내용은 아래와 같이 입력 합니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
title: 첫번째 포스트 입니다.
tags: 
    - 첫포스트
---

안녕하세요.   
첫번째 포스트 입니다.

</code></pre></div></div>

<p>브라우저를 통해서 새로고침하면, 첫 포스트가 계시되어 있습니다. <br />
markdown 작성법은 <a href="https://kimjaehyun.co.kr/etc/markdown/" target="_blank">마크 다운 문법</a>에서 확인 하시기 바랍니다.</p>

<p>minimal-mistakes 에는 다양한 샘플 포스트 작성법을 제공 하고 있습니다.  <br />
<a href="https://mmistakes.github.io/minimal-mistakes/year-archive/" target="_blank">포스트 샘플</a>
에서 참고 바랍니다.</p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_29.png" alt="jekyll-github-blog-01_29" /></p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_30.png" alt="jekyll-github-blog-01_30" /></p>

<h2 id="트러블슈팅">트러블슈팅</h2>

<p>bundel 작업중 아래와 같은 에러가 발생 할 경우가 있습니다.</p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_27.png" alt="jekyll-github-blog-01_27" /></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    Please add the following to your Gemfile to avoid polling for changes:
    gem 'wdm', '&gt;= 0.1.0' if Gem.win_platform?
</code></pre></div></div>

<p>위 메세지가 나오면, 프로젝트 폴더에 Gemfile을 메모장으로 편집 합니다.
아래 메세지를 해당 파일 마지막에 추가 합니다. <br />
gem ‘wdm’, ‘&gt;= 0.1.0’</p>

<p><img src="\assets\images_post\jekyll\jekyll-github-blog-01_28.png" alt="jekyll-github-blog-01_28" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>source "https://rubygems.org"
gem 'wdm', '&gt;= 0.1.0'
gemspec
</code></pre></div></div>

<p>다시 bundle install 을 통해서 변경사항을 재설치 합니다.</p>
<blockquote>
  <p>bundle install</p>
</blockquote>]]></content><author><name>devjaedol</name></author><category term="etc" /><category term="jekyll" /><category term="githug" /><category term="blog" /><category term="github blog" /><category term="minimal-mistakes" /><summary type="html"><![CDATA[jekyll을 통해서 GitHub blog를 만들어 보겠습니다. 작업을 위한 필요 지식 수준은 GitHub에 저장소를 만들고 소스를 등록 및 업데이트 할수 있는 지식 수준이 필요합니다. 최대한 단순하고 간략하게만 정리하도록 하겠습니다.]]></summary></entry><entry><title type="html">ES6(ECMAScript6)등 간략 정리</title><link href="https://kimjaehyun.co.kr/javascript/JS-ES6_Summary/" rel="alternate" type="text/html" title="ES6(ECMAScript6)등 간략 정리" /><published>2021-10-20T00:00:00-05:00</published><updated>2021-10-20T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/javascript/JS-ES6_Summary</id><content type="html" xml:base="https://kimjaehyun.co.kr/javascript/JS-ES6_Summary/"><![CDATA[<p>ES6 문법을 간략히 정리해 보겠습니다.</p>

<p>특별한 설명이 필요없는 보시면 아실듯한…</p>

<h2 id="es6-features2016">ES6 Features(2016)</h2>
<ul>
  <li>JavaScript Exponentiation (**)</li>
  <li>JavaScript Exponentiation assignment (**=)</li>
  <li>JavaScript Array.prototype.includes</li>
</ul>

<h2 id="es6-features2017">ES6 Features(2017)</h2>
<ul>
  <li>JavaScript String padding</li>
  <li>JavaScript Object.entries</li>
  <li>JavaScript Object.values</li>
  <li>JavaScript async functions</li>
  <li>JavaScript shared memory</li>
</ul>

<h2 id="es6-features2018">ES6 Features(2018)</h2>
<ul>
  <li>Asynchronous Iteration</li>
  <li>Promise Finally</li>
  <li>Object Rest Properties</li>
  <li>New RegExp Features</li>
</ul>

<h2 id="let--const">let  const</h2>

<p>let : { } 구역내에서 유효한 변수, 재할당 가능함.</p>

<p>const 수정이 불가능한 변수.</p>

<h2 id="arrow-function-단축-지원">Arrow Function 단축 지원</h2>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//ES5</span>
<span class="kd">function</span> <span class="nx">echo</span><span class="p">(</span><span class="nx">str</span><span class="p">){</span>
	<span class="k">return</span> <span class="nx">str</span><span class="o">+</span><span class="dl">"</span><span class="s2"> : </span><span class="dl">"</span><span class="o">+</span> <span class="nx">str</span>
<span class="p">}</span>

<span class="c1">//ES6</span>
<span class="kd">const</span> <span class="nx">echo</span> <span class="o">=</span> <span class="p">(</span><span class="nx">str</span><span class="p">)</span><span class="o">=&gt;</span> <span class="nx">str</span><span class="o">+</span><span class="dl">"</span><span class="s2"> : </span><span class="dl">"</span><span class="o">+</span> <span class="nx">str</span><span class="p">;</span>

</code></pre></div></div>

<h2 id="function-기본값-지원">Function 기본값 지원</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">echo</span> <span class="o">=</span> <span class="p">(</span><span class="nx">str</span><span class="o">=</span><span class="dl">'</span><span class="s1">야호</span><span class="dl">'</span><span class="p">)</span><span class="o">=&gt;</span> <span class="nx">str</span><span class="o">+</span><span class="dl">"</span><span class="s2"> : </span><span class="dl">"</span><span class="o">+</span> <span class="nx">str</span><span class="p">;</span>
<span class="nx">echo</span><span class="p">();</span>
<span class="dl">'</span><span class="s1">야호 : 야호</span><span class="dl">'</span>

<span class="p">()</span><span class="o">=&gt;</span><span class="p">{}</span>
<span class="nx">v1</span><span class="o">=&gt;</span><span class="p">{}</span>
<span class="p">(</span><span class="nx">v1</span><span class="p">,</span><span class="nx">v2</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{}</span>

<span class="p">()</span><span class="o">=&gt;</span><span class="nx">reval</span>
<span class="nx">v1</span><span class="o">=&gt;</span><span class="nx">reval</span>
<span class="p">(</span><span class="nx">v1</span><span class="p">,</span><span class="nx">v2</span><span class="p">)</span><span class="o">=&gt;</span><span class="nx">reval</span>

</code></pre></div></div>

<h2 id="string-비교-startswith-endswith-includes">String 비교 startsWith(), endsWith(), includes</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">str</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">ABCDEFGHIJK</span><span class="dl">'</span><span class="p">;;</span>
<span class="nx">str</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="dl">'</span><span class="s1">CDE</span><span class="dl">'</span><span class="p">);</span>	<span class="c1">//true</span>
<span class="nx">str</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="dl">'</span><span class="s1">ABCD</span><span class="dl">'</span><span class="p">);</span>	<span class="c1">//true</span>
<span class="nx">str</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="dl">'</span><span class="s1">IJK</span><span class="dl">'</span><span class="p">);</span>	<span class="c1">//true</span>
</code></pre></div></div>

<h2 id="템플릿-리터럴">템플릿 리터럴</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">name</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">홍길동</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`안녕하세요 저는 </span><span class="p">${</span><span class="nx">name</span><span class="p">}</span><span class="s2"> 입니다.`</span><span class="p">);</span>
</code></pre></div></div>

<h2 id="object-destructuring">Object Destructuring</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">car</span> <span class="o">=</span> <span class="p">{</span>
	<span class="na">name</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">sonata</span><span class="dl">'</span><span class="p">,</span>
	<span class="na">price</span> <span class="p">:</span> <span class="mi">10000</span><span class="p">,</span>
	<span class="na">type</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">sedan</span><span class="dl">'</span>
<span class="p">};</span>

<span class="kd">let</span> <span class="p">{</span><span class="nx">name</span><span class="p">,</span> <span class="nx">price</span><span class="p">}</span> <span class="o">=</span> <span class="nx">car</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">name</span><span class="p">);</span>		<span class="c1">// sedan</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">price</span><span class="p">);</span>		<span class="c1">// 10000</span>
</code></pre></div></div>

<h2 id="destructuring">Destructuring</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">old_data</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">A</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">B</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">C</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">D</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">E</span><span class="dl">"</span><span class="p">];</span>
<span class="kd">let</span> <span class="p">[</span><span class="nx">v1</span><span class="p">,,,</span><span class="nx">v2</span><span class="p">]</span> <span class="o">=</span> <span class="nx">old_data</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">v1</span><span class="p">);</span>	<span class="c1">//A</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">v2</span><span class="p">);</span>	<span class="c1">//D</span>
</code></pre></div></div>

<h2 id="for-in">for-in</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[</span><span class="dl">'</span><span class="s1">A</span><span class="dl">'</span><span class="p">,</span><span class="dl">'</span><span class="s1">B</span><span class="dl">'</span><span class="p">,</span><span class="dl">'</span><span class="s1">C</span><span class="dl">'</span><span class="p">,</span><span class="dl">'</span><span class="s1">D</span><span class="dl">'</span><span class="p">];</span>
<span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">val</span> <span class="k">of</span> <span class="nx">arr</span><span class="p">){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">val</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="spread-orperator">Spread orperator</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">old_val</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">];</span>
<span class="kd">let</span> <span class="nx">new_val</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,...</span><span class="nx">old_val</span><span class="p">,</span><span class="mi">6</span><span class="p">];</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">new_val</span><span class="p">);</span>	<span class="c1">// [0, 1, 2, 3, 4, 5, 6]</span>

<span class="kd">function</span> <span class="nx">totalSum</span><span class="p">(</span> <span class="nx">v1</span><span class="p">,</span> <span class="nx">v2</span><span class="p">,</span> <span class="nx">v3</span><span class="p">,</span> <span class="nx">v4</span><span class="p">,</span> <span class="nx">v5</span><span class="p">){</span>
    <span class="k">return</span> <span class="nx">v1</span> <span class="o">+</span> <span class="nx">v2</span> <span class="o">+</span> <span class="nx">v3</span> <span class="o">+</span> <span class="nx">v4</span> <span class="o">+</span> <span class="nx">v5</span><span class="p">;</span>
<span class="p">}</span>
<span class="nx">totalSum</span><span class="p">(...</span><span class="nx">old_val</span><span class="p">);</span>	<span class="c1">//15</span>

</code></pre></div></div>

<h2 id="arrayfrom">Array.from</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">prices</span><span class="p">(){</span>
    <span class="kd">let</span> <span class="nx">data</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span>
	<span class="c1">//console.log(data);</span>
    <span class="k">return</span> <span class="nx">data</span><span class="p">;</span>
<span class="p">}</span>
<span class="nx">prices</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">);</span>	<span class="c1">//배열로 변환되어 반환됨 [1, 2, 3, 4, 5]</span>
</code></pre></div></div>

<h2 id="arraymap">Array.map()</h2>

<h2 id="arrayfilter">Array.Filter()</h2>

<h2 id="spread-operator">spread operator</h2>

<h2 id="set-has">set has</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">set_data</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Set</span><span class="p">();</span>
<span class="nx">set_data</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">"</span><span class="s2">A</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">set_data</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">"</span><span class="s2">B</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">set_data</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">"</span><span class="s2">C</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">set_data</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">"</span><span class="s2">D</span><span class="dl">"</span><span class="p">);</span>

<span class="c1">//ES5 C를 포함 여부를 판단하려면</span>
<span class="nx">set_data</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">val</span><span class="p">){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">val</span><span class="p">);</span> <span class="c1">//비교 로직을 통해서 판단함.</span>
<span class="p">});</span>

<span class="c1">//ES6</span>
<span class="nx">set_data</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="dl">"</span><span class="s2">C</span><span class="dl">"</span><span class="p">);</span>	<span class="c1">//true</span>
<span class="nx">set_data</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="dl">"</span><span class="s2">F</span><span class="dl">"</span><span class="p">);</span>	<span class="c1">//false</span>
</code></pre></div></div>

<h2 id="weakset">WeakSet</h2>

<h2 id="export-import">export import</h2>

<p>sub.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">export</span> <span class="k">default</span> <span class="kd">function</span> <span class="nx">testFn</span><span class="p">(</span><span class="nx">v1</span><span class="p">){</span>
    <span class="k">return</span> <span class="nx">v1</span> <span class="o">*</span> <span class="nx">v1</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>main.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">testFn</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./sub.js</span><span class="dl">'</span>

<span class="c1">//fn여러개인 경우</span>
<span class="k">import</span> <span class="p">{</span><span class="nx">fnName1</span><span class="p">,</span> <span class="nx">fnName2</span><span class="p">,</span> <span class="nx">fnName3</span><span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./sub.js</span><span class="dl">'</span>

</code></pre></div></div>

<h2 id="promises">Promises</h2>

<h2 id="class-constructor">Class constructor</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">Car</span> <span class="p">{</span>
    <span class="kd">constructor</span><span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="nx">price</span><span class="p">){</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">price</span> <span class="o">=</span> <span class="nx">price</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">const</span> <span class="nx">mycar</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Car</span><span class="p">(</span><span class="dl">'</span><span class="s1">sonata</span><span class="dl">'</span><span class="p">,</span> <span class="mi">10000</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">mycar</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>	<span class="c1">// sonata</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">mycar</span><span class="p">.</span><span class="nx">price</span><span class="p">);</span>	<span class="c1">// 10000</span>
</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="javascript" /><category term="ES6" /><category term="ES5" /><category term="ECMAScript6" /><summary type="html"><![CDATA[ES6 문법을 간략히 정리해 보겠습니다.]]></summary></entry><entry><title type="html">Python 기초</title><link href="https://kimjaehyun.co.kr/python/python_study_02/" rel="alternate" type="text/html" title="Python 기초" /><published>2021-10-19T00:00:00-05:00</published><updated>2021-10-19T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_study_02</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_study_02/"><![CDATA[<p>파이썬 공부를 스피드 있게 해봅시다.  <br />
파이썬 IDLE를 실행 합니다.     <br />
설명이 필요 없는 프로그램 공부의 기본을 Start!!!!  <br />
<a href="https://docs.python.org/ko/3/tutorial/index.html" target="_blank">Python 공식 자습서</a></p>

<h2 id="기본-실습-하기">기본 실습 하기</h2>
<blockquote>
  <p>100 + 50  <br />
print(‘Hello world’)  <br />
“string”*5</p>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Python</span> <span class="mf">3.10</span><span class="p">.</span><span class="mi">0</span> <span class="p">(</span><span class="n">tags</span><span class="o">/</span><span class="n">v3</span><span class="p">.</span><span class="mf">10.0</span><span class="p">:</span><span class="n">b494f59</span><span class="p">,</span> <span class="n">Oct</span>  <span class="mi">4</span> <span class="mi">2021</span><span class="p">,</span> <span class="mi">19</span><span class="p">:</span><span class="mi">00</span><span class="p">:</span><span class="mi">18</span><span class="p">)</span> <span class="p">[</span><span class="n">MSC</span> <span class="n">v</span><span class="p">.</span><span class="mi">1929</span> <span class="mi">64</span> <span class="n">bit</span> <span class="p">(</span><span class="n">AMD64</span><span class="p">)]</span> <span class="n">on</span> <span class="n">win32</span>
<span class="n">Type</span> <span class="s">"help"</span><span class="p">,</span> <span class="s">"copyright"</span><span class="p">,</span> <span class="s">"credits"</span> <span class="ow">or</span> <span class="s">"license()"</span> <span class="k">for</span> <span class="n">more</span> <span class="n">information</span><span class="p">.</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">100</span><span class="o">+</span><span class="mi">50</span>
<span class="mi">150</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">'Hello world'</span><span class="p">)</span>
<span class="n">Hello</span> <span class="n">world</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">"string"</span><span class="o">*</span><span class="mi">5</span>
<span class="s">'stringstringstringstringstring'</span>
</code></pre></div></div>

<h2 id="자료형">자료형</h2>
<p>프로그래밍에 기초로 자료형 부터 보시죠.  <br />
Python에 주요 자료형 입니다.</p>

<ul>
  <li>수치 자료형
    <ul>
      <li>int</li>
      <li>float</li>
      <li>complex</li>
    </ul>
  </li>
  <li>불 자료형
    <ul>
      <li>bool</li>
    </ul>
  </li>
  <li>군집 자료형
    <ul>
      <li>list</li>
      <li>tuple</li>
      <li>dict</li>
      <li>set</li>
    </ul>
  </li>
  <li>문자 자료형
    <ul>
      <li>str</li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># int
# type( xxx ) 은 자료형을 출력 합니다.
</span>
<span class="n">a</span> <span class="o">=</span> <span class="mi">1</span>
<span class="nb">type</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="c1">#&lt;class 'int'&gt;
</span>
<span class="n">b</span> <span class="o">=</span> <span class="mf">5.7</span>
<span class="nb">type</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="c1">#&lt;class 'float'&gt;
</span>
<span class="n">c</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">+</span> <span class="mf">1j</span>
<span class="nb">type</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="c1">#&lt;class 'complex'&gt;
</span>
<span class="n">d</span> <span class="o">=</span> <span class="bp">True</span>
<span class="nb">type</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
<span class="c1">#&lt;class 'bool'&gt;
</span>
<span class="n">e</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]</span>
<span class="nb">type</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
<span class="c1">#&lt;class 'list'&gt;     #(순서 O, 중복 O, 변경 O)
</span>
<span class="n">f</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span>
<span class="nb">type</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
<span class="c1">#&lt;class 'tuple'&gt;    #(순서 O, 중복 O, 변경 X)
</span>
<span class="n">g</span> <span class="o">=</span> <span class="p">{</span><span class="s">"java"</span><span class="p">:</span><span class="mi">10</span><span class="p">,</span> <span class="s">"python"</span><span class="p">:</span><span class="mi">5</span><span class="p">,</span> <span class="s">"C"</span><span class="p">:</span><span class="mi">3</span><span class="p">}</span>
<span class="nb">type</span><span class="p">(</span><span class="n">g</span><span class="p">)</span>
<span class="c1">#&lt;class 'dict'&gt;     #(순서 X, 중복 X, 변경 O)
</span>
<span class="n">h</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="nb">type</span><span class="p">(</span><span class="n">h</span><span class="p">)</span>
<span class="c1">#&lt;class 'set'&gt;      #(순서 X, 중복 X, 변경 O)
</span>
<span class="n">i</span> <span class="o">=</span> <span class="s">'가나다라마'</span>
<span class="nb">type</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
<span class="c1">#&lt;class 'str'&gt;
</span></code></pre></div></div>
<p><img src="\assets/images_post/python/python-study-02_1.png" alt="파이썬 자료형" /></p>

<h2 id="연산자">연산자</h2>
<p>변수에 대한 연산을 처리하는 연산자 시리즈 입니다.</p>
<ul>
  <li>사칙 연산자
    <ul>
      <li>+, -, *, /</li>
      <li>** 제곱</li>
      <li>% 나머지</li>
      <li>// 소수점이하 버림 연산</li>
    </ul>
  </li>
  <li>비교 연산자
    <ul>
      <li>&lt;, &gt;, &lt;=, =&gt;, ==, !=</li>
    </ul>
  </li>
  <li>논리 연산자
    <ul>
      <li>and</li>
      <li>or</li>
      <li>not</li>
    </ul>
  </li>
  <li>비트와이즈 연산자
    <ul>
      <li>&amp; (AND)</li>
      <li>| (OR)</li>
      <li>«, » (비트 이동)</li>
      <li>~ (Completement)</li>
      <li>^ (XOR)</li>
    </ul>
  </li>
  <li>기타 연산자
    <ul>
      <li>+=</li>
      <li>-=</li>
      <li>*=</li>
      <li>in</li>
      <li>not in</li>
      <li>is    ( A is B A와 B가 동일 주소를 가르칠때 True)</li>
    </ul>
  </li>
</ul>

<h2 id="조건문">조건문</h2>
<p>프로그램에 기본인 조건에 따라 로직을 분기하는 종류 입니다.</p>

<h3 id="if-elif-else">if, elif, else</h3>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#if문
</span><span class="k">if</span> <span class="n">tall</span> <span class="o">&gt;</span> <span class="mi">180</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"키가 큽니다."</span><span class="p">)</span>


<span class="c1">#if, else
</span><span class="k">if</span> <span class="n">tall</span> <span class="o">&gt;</span> <span class="mi">180</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"키가 큽니다."</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"키가 작습니다"</span><span class="p">)</span>


<span class="c1">#if, elif, else
</span><span class="k">if</span> <span class="n">tall</span> <span class="o">&gt;</span> <span class="mi">180</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"키가 큽니다."</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">tall</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"키가 작습니다"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"키가 보통 입니다"</span><span class="p">)</span>

</code></pre></div></div>
<h3 id="for">for</h3>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># range(반복횟수):
# for 변수 in range(시작값, 끝값+1, 증가값):
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>

<span class="mi">0</span>
<span class="mi">1</span>
<span class="mi">2</span>
<span class="mi">3</span>
<span class="mi">4</span>
<span class="mi">5</span>
<span class="mi">6</span>
<span class="mi">7</span>
<span class="mi">8</span>
<span class="mi">9</span>


<span class="n">a</span><span class="o">=</span><span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">a</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>

    
<span class="mi">5</span>
<span class="mi">6</span>
<span class="mi">7</span>
<span class="mi">8</span>
<span class="mi">9</span>


<span class="c1">#range(이상, 미만)
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>

<span class="mi">5</span>
<span class="mi">6</span>
<span class="mi">7</span>
<span class="mi">8</span>
<span class="mi">9</span>

<span class="c1"># 중첩 For
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span> <span class="n">i</span><span class="o">*</span><span class="n">j</span> <span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s">"   "</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">" "</span><span class="p">)</span>

<span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>    
<span class="mi">2</span>   <span class="mi">4</span>   <span class="mi">6</span>    
<span class="mi">3</span>   <span class="mi">6</span>   <span class="mi">9</span>    


<span class="c1">#1~10 의 합    
</span><span class="nb">sum</span><span class="o">=</span><span class="mi">0</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">11</span><span class="p">):</span>
    <span class="nb">sum</span> <span class="o">=</span> <span class="nb">sum</span><span class="o">+</span><span class="n">i</span>
<span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span>

<span class="mi">55</span>

</code></pre></div></div>
<h3 id="while">while</h3>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">i</span><span class="o">=</span><span class="mi">1</span>
<span class="nb">sum</span><span class="o">=</span><span class="mi">0</span>
<span class="k">while</span> <span class="n">i</span><span class="o">&lt;=</span><span class="mi">10</span><span class="p">:</span>
    <span class="nb">sum</span><span class="o">=</span><span class="nb">sum</span><span class="o">+</span><span class="n">i</span>
<span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span>
<span class="mi">55</span>
</code></pre></div></div>

<h2 id="반복문">반복문</h2>

<h2 id="함수">함수</h2>

<h2 id="예약어-확인하기">예약어 확인하기</h2>
<p>파이썬에는 다음과 같은 예약어는 사용 할 수 없습니다. <br />
참고 하시기 바랍니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">keyword</span>
<span class="k">print</span><span class="p">(</span><span class="n">keyword</span><span class="p">.</span><span class="n">kwlist</span><span class="p">)</span>
<span class="p">[</span><span class="s">'False'</span><span class="p">,</span> <span class="s">'None'</span><span class="p">,</span> <span class="s">'True'</span><span class="p">,</span> <span class="s">'and'</span><span class="p">,</span> <span class="s">'as'</span><span class="p">,</span> <span class="s">'assert'</span><span class="p">,</span> 
<span class="s">'async'</span><span class="p">,</span> <span class="s">'await'</span><span class="p">,</span> <span class="s">'break'</span><span class="p">,</span> <span class="s">'class'</span><span class="p">,</span> <span class="s">'continue'</span><span class="p">,</span> <span class="s">'def'</span><span class="p">,</span> 
<span class="s">'del'</span><span class="p">,</span> <span class="s">'elif'</span><span class="p">,</span> <span class="s">'else'</span><span class="p">,</span> <span class="s">'except'</span><span class="p">,</span> <span class="s">'finally'</span><span class="p">,</span> <span class="s">'for'</span><span class="p">,</span> <span class="s">'from'</span><span class="p">,</span> 
<span class="s">'global'</span><span class="p">,</span> <span class="s">'if'</span><span class="p">,</span> <span class="s">'import'</span><span class="p">,</span> <span class="s">'in'</span><span class="p">,</span> <span class="s">'is'</span><span class="p">,</span> <span class="s">'lambda'</span><span class="p">,</span> <span class="s">'nonlocal'</span><span class="p">,</span>
 <span class="s">'not'</span><span class="p">,</span> <span class="s">'or'</span><span class="p">,</span> <span class="s">'pass'</span><span class="p">,</span> <span class="s">'raise'</span><span class="p">,</span> <span class="s">'return'</span><span class="p">,</span> <span class="s">'try'</span><span class="p">,</span> 
 <span class="s">'while'</span><span class="p">,</span> <span class="s">'with'</span><span class="p">,</span> <span class="s">'yield'</span><span class="p">]</span>
</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python강좌" /><category term="python" /><category term="초급" /><summary type="html"><![CDATA[파이썬 공부를 스피드 있게 해봅시다. 파이썬 IDLE를 실행 합니다. 설명이 필요 없는 프로그램 공부의 기본을 Start!!!! Python 공식 자습서]]></summary></entry><entry><title type="html">Python 설치</title><link href="https://kimjaehyun.co.kr/python/python_study_01/" rel="alternate" type="text/html" title="Python 설치" /><published>2021-10-19T00:00:00-05:00</published><updated>2021-10-19T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_study_01</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_study_01/"><![CDATA[<p>파이썬 공부를 시작해봅시다. <br />
우선 파이썬 설치를… 시작이 반…</p>

<p><a href="https://www.python.org/downloads/" target="_blank">다운 로드 경로</a></p>

<p><img src="\assets/images_post/python/python-study-01-_1.png" alt="python-study-01-_1" /></p>

<p>다운로드 선택</p>

<p><img src="\assets/images_post/python/python-study-01-_2.png" alt="python-study-01-_2" /></p>

<p>설치 경로를 변경하기 위해서 Customzie 선택</p>

<p><img src="\assets/images_post/python/python-study-01-_3.png" alt="python-study-01-_3" /></p>

<p>기본값 Next</p>

<p><img src="\assets/images_post/python/python-study-01-_4.png" alt="python-study-01-_4" /></p>

<p>경로 변경</p>

<p><img src="\assets/images_post/python/python-study-01-_5.png" alt="python-study-01-_5" /></p>

<p><img src="\assets/images_post/python/python-study-01-_6.png" alt="python-study-01-_6" /></p>

<p><img src="\assets/images_post/python/python-study-01-_7.png" alt="python-study-01-_7" /></p>

<p>완료시 윈도우 시작위치에 위 항목이 추가됨 IDLE를 선택하여 실행함.</p>

<p><img src="\assets/images_post/python/python-study-01-_8.png" alt="python-study-01-_8" /></p>

<p>설치 버전이 정상 표기되면, 설치 완료됨.</p>

<p>window path는 필요시 추가해야 합니다.</p>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python강좌" /><category term="python" /><category term="초급" /><summary type="html"><![CDATA[파이썬 공부를 시작해봅시다. 우선 파이썬 설치를… 시작이 반…]]></summary></entry><entry><title type="html">javascript version ES5 vs ES6</title><link href="https://kimjaehyun.co.kr/javascript/JS-Version/" rel="alternate" type="text/html" title="javascript version ES5 vs ES6" /><published>2021-10-19T00:00:00-05:00</published><updated>2021-10-19T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/javascript/JS-Version</id><content type="html" xml:base="https://kimjaehyun.co.kr/javascript/JS-Version/"><![CDATA[<p>자바스크립트 버전별 정리
참조 : <a href="https://www.w3schools.com/js/js_versions.asp" target="_blank">w3school</a></p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Ver</th>
      <th style="text-align: left">Official Name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">ES1</td>
      <td style="text-align: left">ECMAScript 1 (1997)</td>
    </tr>
    <tr>
      <td style="text-align: left">ES2</td>
      <td style="text-align: left">ECMAScript 2 (1998)</td>
    </tr>
    <tr>
      <td style="text-align: left">ES3</td>
      <td style="text-align: left">ECMAScript 3 (1999)</td>
    </tr>
    <tr>
      <td style="text-align: left">ES4</td>
      <td style="text-align: left">ECMAScript 4</td>
    </tr>
    <tr>
      <td style="text-align: left">ES5</td>
      <td style="text-align: left">ECMAScript 5 (2009)</td>
    </tr>
    <tr>
      <td style="text-align: left">ES6</td>
      <td style="text-align: left">ECMAScript 2015</td>
    </tr>
    <tr>
      <td style="text-align: left"> </td>
      <td style="text-align: left">ECMAScript 2016</td>
    </tr>
    <tr>
      <td style="text-align: left"> </td>
      <td style="text-align: left">ECMAScript 2017</td>
    </tr>
    <tr>
      <td style="text-align: left"> </td>
      <td style="text-align: left">ECMAScript 2018</td>
    </tr>
  </tbody>
</table>

<h2 id="es5-features">ES5 Features</h2>
<ul>
  <li>use strict</li>
  <li>String[number] access</li>
  <li>Multiline strings</li>
  <li>String.trim()</li>
  <li>Array.isArray()</li>
  <li>Array.forEach()</li>
  <li>Array.map()</li>
  <li>Array.filter()</li>
  <li>Array.reduce()</li>
  <li>Array.reduceRight()</li>
  <li>Array.every()</li>
  <li>Array.some()</li>
  <li>Array.indexOf()</li>
  <li>Array.lastIndexOf()</li>
  <li>JSON.parse()</li>
  <li>JSON.stringify()</li>
  <li>Date.now()</li>
  <li>Date.toISOString()</li>
  <li>Date.toJSON()</li>
  <li>Property getters and setters</li>
  <li>Reserved words as property names</li>
  <li>Object methods</li>
  <li>Object defineProperty()</li>
  <li>Function.bind()</li>
  <li>Trailing commas</li>
</ul>

<h2 id="es6-features2015">ES6 Features(2015)</h2>
<ul>
  <li>The let keyword</li>
  <li>The const keyword</li>
  <li>Arrow Functions</li>
  <li>For/of</li>
  <li>Map Objects</li>
  <li>Set Objects</li>
  <li>Classes</li>
  <li>Promises</li>
  <li>Symbol</li>
  <li>Default Parameters</li>
  <li>Function Rest Parameter</li>
  <li>String.includes()</li>
  <li>String.startsWith()</li>
  <li>String.endsWith()</li>
  <li>Array.from()</li>
  <li>Array.keys()</li>
  <li>Array.find()</li>
  <li>Array.findIndex()</li>
  <li>New Math Methods</li>
  <li>New Number Properties</li>
  <li>New Number Methods</li>
  <li>New Global Methods</li>
  <li>Iterables Object.entries</li>
  <li>JavaScript Modules</li>
</ul>

<h2 id="es6-features2016">ES6 Features(2016)</h2>
<ul>
  <li>JavaScript Exponentiation (**)</li>
  <li>JavaScript Exponentiation assignment (**=)</li>
  <li>JavaScript Array.prototype.includes</li>
</ul>

<h2 id="es6-features2017">ES6 Features(2017)</h2>
<ul>
  <li>JavaScript String padding</li>
  <li>JavaScript Object.entries</li>
  <li>JavaScript Object.values</li>
  <li>JavaScript async functions</li>
  <li>JavaScript shared memory</li>
</ul>

<h2 id="es6-features2018">ES6 Features(2018)</h2>
<ul>
  <li>Asynchronous Iteration</li>
  <li>Promise Finally</li>
  <li>Object Rest Properties</li>
  <li>New RegExp Features</li>
</ul>]]></content><author><name>devjaedol</name></author><category term="javascript" /><category term="ES6" /><category term="ES5" /><summary type="html"><![CDATA[자바스크립트 버전별 정리 참조 : w3school]]></summary></entry><entry><title type="html">크롬 확장 앱 개발 참조 경로(Chrome Extensions)</title><link href="https://kimjaehyun.co.kr/etc/chrome_extension/" rel="alternate" type="text/html" title="크롬 확장 앱 개발 참조 경로(Chrome Extensions)" /><published>2021-10-19T00:00:00-05:00</published><updated>2021-10-19T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/etc/chrome_extension</id><content type="html" xml:base="https://kimjaehyun.co.kr/etc/chrome_extension/"><![CDATA[<p>크롬 확장 앱 관련 정보 참조 링크</p>

<p><a href="https://blog.hubspot.com/marketing/best-chrome-extensions" target="_blank">The 70 Best Chrome Extensions for 2021</a></p>

<p><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/" target="_blank">https://developer.chrome.com/docs/extensions/mv3/getstarted/</a></p>

<p><a href="https://github.com/GoogleChrome/chrome-extensions-samples" target="_blank">https://github.com/GoogleChrome/chrome-extensions-samples</a></p>]]></content><author><name>devjaedol</name></author><category term="etc" /><category term="Chrome" /><category term="extension" /><category term="크롬앱" /><category term="link" /><summary type="html"><![CDATA[크롬 확장 앱 관련 정보 참조 링크]]></summary></entry><entry><title type="html">GitHub blog 오픈</title><link href="https://kimjaehyun.co.kr/blog/blog_open/" rel="alternate" type="text/html" title="GitHub blog 오픈" /><published>2021-10-16T00:00:00-05:00</published><updated>2021-10-16T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/blog/blog_open</id><content type="html" xml:base="https://kimjaehyun.co.kr/blog/blog_open/"><![CDATA[<p>GitHub Blog를 개설 했습니다.</p>

<p>Tistory에 Blog들이 Kakao로 통합되면서, 관리가 어려운 상황이 되어서, Git Blog로 만들어 보았습니다.</p>

<p>꿰보는 (꿰)어야 (보)배에서 아이디어를 얻었고, 개발과 관련된 학습 시행착오를 정리할 예정입니다.</p>]]></content><author><name>devjaedol</name></author><category term="blog" /><category term="blog" /><summary type="html"><![CDATA[GitHub Blog를 개설 했습니다.]]></summary></entry></feed>