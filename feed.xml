<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://kimjaehyun.co.kr/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kimjaehyun.co.kr/" rel="alternate" type="text/html" /><updated>2022-05-31T09:52:35-05:00</updated><id>https://kimjaehyun.co.kr/feed.xml</id><title type="html">꿰보노트</title><subtitle>프로그래밍과 소프트웨어 정보 및 클라우드 개발에 대한 정보를 공유하는 블로그 입니다. 꿰보노트 / 꿰보Note / 꿰어야 보배</subtitle><author><name>devjaedol</name></author><entry><title type="html">[알고리즘] 자료 구조의 종류</title><link href="https://kimjaehyun.co.kr/algorithm/algorithm-datastructure/" rel="alternate" type="text/html" title="[알고리즘] 자료 구조의 종류" /><published>2022-05-31T00:00:00-05:00</published><updated>2022-05-31T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/algorithm-datastructure</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/algorithm-datastructure/"><![CDATA[<p>몇몇은 자주 사용하지만, 알고 있으면 편리한 자료구조 목차.  <br />
자세한 샘플들은 CodingTest 메뉴에서 확인 필수.</p>

<h1 id="단순-구조">단순 구조</h1>
<ul>
  <li>정수</li>
  <li>실수</li>
  <li>문자</li>
  <li>문자열</li>
</ul>

<h1 id="선형-구조">선형 구조</h1>
<ul>
  <li>(선형/순차) 리스트
    <ul>
      <li>배열 (Array)</li>
      <li>레코드</li>
    </ul>
  </li>
  <li>연결 리스트 (Linked List)
    <ul>
      <li>단순 연결 리스트</li>
      <li>이중 연결 리스트</li>
      <li>원형 연결 리스트</li>
    </ul>
  </li>
  <li>스택 (Stack)</li>
  <li>큐 (Queue)</li>
  <li>데크 (Deque)</li>
</ul>

<h1 id="비선형-구조">비선형 구조</h1>
<ul>
  <li>트리 (Tree)
    <ul>
      <li>일반 트리</li>
      <li>이진 트리</li>
    </ul>
  </li>
  <li>그래프 (Graph)
    <ul>
      <li>방향 그래프</li>
      <li>무방향 그래프</li>
    </ul>
  </li>
</ul>

<h1 id="파일구조">파일구조</h1>
<ul>
  <li>순차 파일</li>
  <li>색인 파일</li>
  <li>직접 파일</li>
</ul>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="정수" /><category term="실수" /><category term="문자" /><category term="문자열" /><category term="리스트" /><category term="배열" /><category term="연결리스트" /><category term="스택" /><category term="큐" /><category term="데크" /><category term="트리" /><category term="그래프" /><category term="순차파일" /><category term="색인파일" /><category term="직접파일" /><summary type="html"><![CDATA[몇몇은 자주 사용하지만, 알고 있으면 편리한 자료구조 목차. 자세한 샘플들은 CodingTest 메뉴에서 확인 필수.]]></summary></entry><entry><title type="html">Python - PriorityQueue, Heapq</title><link href="https://kimjaehyun.co.kr/python/python_PriorityQueue/" rel="alternate" type="text/html" title="Python - PriorityQueue, Heapq" /><published>2022-05-29T00:00:00-05:00</published><updated>2022-05-29T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_PriorityQueue</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_PriorityQueue/"><![CDATA[<p>FIFO에서 우선순위 가중치를 주어 출력시키는 자료 구조 입니다. <br />
Java에서도 동일한 형태의 자료 구조가 존재 합니다.</p>

<h1 id="priorityqueue-사용예">PriorityQueue 사용예</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">from</span> <span class="nn">queue</span> <span class="kn">import</span> <span class="n">PriorityQueue</span>
<span class="n">pq</span> <span class="o">=</span> <span class="n">PriorityQueue</span><span class="p">()</span>        
<span class="c1">#pq = PriorityQueue(maxsie=10)   #초기; 사이즈 정의 가능함.
</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span>

<span class="k">while</span> <span class="n">pq</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">==</span> <span class="bp">False</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">pq</span><span class="p">.</span><span class="n">get</span><span class="p">())</span>

<span class="c1">#출력
</span><span class="mi">1</span>
<span class="mi">2</span>
<span class="mi">4</span>
<span class="mi">6</span>
<span class="mi">7</span>
<span class="mi">9</span>
</code></pre></div></div>

<h1 id="tuble-을-통한-정렬-순서-변경">Tuble 을 통한 정렬 순서 변경</h1>
<p><code class="language-plaintext highlighter-rouge">(우선순위, 값)</code> 의 튜플 형태로, 우선순위를 튜플의 첫번째로 입력처리하 하면 됩니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">queue</span> <span class="kn">import</span> <span class="n">PriorityQueue</span>
<span class="n">pq</span> <span class="o">=</span> <span class="n">PriorityQueue</span><span class="p">()</span>        

<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">((</span><span class="mi">9</span><span class="p">,</span><span class="s">'이승환'</span><span class="p">))</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span><span class="s">'이미자'</span><span class="p">))</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">((</span><span class="mi">4</span><span class="p">,</span><span class="s">'조용필'</span><span class="p">))</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">((</span><span class="mi">7</span><span class="p">,</span><span class="s">'아이유'</span><span class="p">))</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">((</span><span class="mi">1</span><span class="p">,</span><span class="s">'배철수'</span><span class="p">))</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">((</span><span class="mi">6</span><span class="p">,</span><span class="s">'이승철'</span><span class="p">))</span>

<span class="k">while</span> <span class="n">pq</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">==</span> <span class="bp">False</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">pq</span><span class="p">.</span><span class="n">get</span><span class="p">()[</span><span class="mi">0</span><span class="p">],</span> <span class="n">pq</span><span class="p">.</span><span class="n">get</span><span class="p">()[</span><span class="mi">1</span><span class="p">])</span>

<span class="c1">#출력
</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">'배철수'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">'이미자'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="s">'조용필'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="s">'이승철'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">7</span><span class="p">,</span> <span class="s">'아이유'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">9</span><span class="p">,</span> <span class="s">'이승환'</span><span class="p">)</span>

</code></pre></div></div>

<h1 id="리스트를-통한-정렬-사용예">리스트를 통한 정렬 사용예</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 리스트 을 통한 정렬 순서 변경
</span>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">1</span><span class="p">,</span> <span class="s">"배철수"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">4</span><span class="p">,</span> <span class="s">"이미자"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span> <span class="s">"조용필"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="s">"아이유"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">9</span><span class="p">,</span> <span class="s">"이승환"</span><span class="p">))</span>

<span class="n">arr</span><span class="p">.</span><span class="n">sort</span><span class="p">(</span><span class="n">reverse</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>

<span class="k">while</span> <span class="n">arr</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>

<span class="c1">#출력
</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">'배철수'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">'아이유'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="s">'조용필'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="s">'이미자'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">9</span><span class="p">,</span> <span class="s">'이승환'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 리스트 을 통한 정렬 순서 변경
</span>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">1</span><span class="p">,</span> <span class="s">"배철수"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">4</span><span class="p">,</span> <span class="s">"이미자"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span> <span class="s">"조용필"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="s">"아이유"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">9</span><span class="p">,</span> <span class="s">"이승환"</span><span class="p">))</span>

<span class="n">arr</span><span class="p">.</span><span class="n">sort</span><span class="p">(</span><span class="n">reverse</span> <span class="o">=</span> <span class="bp">False</span><span class="p">)</span>

<span class="k">while</span> <span class="n">arr</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>

<span class="c1">#출력
</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span> <span class="s">'이승환'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="s">'이미자'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="s">'조용필'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">'아이유'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">'배철수'</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="heapq">Heapq</h1>
<p>힙에 대해서 알아야 알아야 되는데 완전 이진트리로 최상위 부모를 최대값(max heap), 최소값(min heap) 형태로 구성하는 자료 구조 형태를 사용한다.</p>

<p>주요 사용 메소드는</p>
<ul>
  <li>heapq.heappush(heap, item): item 추가</li>
  <li>heapq.heappop(heap): heap에서 최소값 pop return</li>
  <li>heapq.heapify(x): 리스트 x를 즉각적으로 heap으로 변환</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">heapq</span>

<span class="n">pq</span> <span class="o">=</span> <span class="p">[]</span>

<span class="n">heapq</span><span class="p">.</span><span class="n">heappush</span><span class="p">(</span><span class="n">pq</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">heapq</span><span class="p">.</span><span class="n">heappush</span><span class="p">(</span><span class="n">pq</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
<span class="n">heapq</span><span class="p">.</span><span class="n">heappush</span><span class="p">(</span><span class="n">pq</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
<span class="n">heapq</span><span class="p">.</span><span class="n">heappush</span><span class="p">(</span><span class="n">pq</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="n">heapq</span><span class="p">.</span><span class="n">heappush</span><span class="p">(</span><span class="n">pq</span><span class="p">,</span> <span class="mi">9</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">pq</span><span class="p">)</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">pq</span><span class="p">.)</span>
</code></pre></div></div>

<p>사전 list를 통해서 정렬하는 방식 <code class="language-plaintext highlighter-rouge">heapify</code></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">heapq</span>
<span class="n">d</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">]</span>
<span class="n">heapq</span><span class="p">.</span><span class="n">heapify</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>

<span class="k">while</span> <span class="n">pq</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">pq</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>

<span class="c1">#출력
</span><span class="mi">9</span>
<span class="mi">4</span>
<span class="mi">3</span>
<span class="mi">2</span>
<span class="mi">1</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="PriorityQueue" /><category term="queue" /><category term="FIFO" /><category term="우선순위큐" /><category term="자료구조" /><category term="Heapq" /><summary type="html"><![CDATA[FIFO에서 우선순위 가중치를 주어 출력시키는 자료 구조 입니다. Java에서도 동일한 형태의 자료 구조가 존재 합니다.]]></summary></entry><entry><title type="html">Python - for, enumerate</title><link href="https://kimjaehyun.co.kr/python/python_enumerate/" rel="alternate" type="text/html" title="Python - for, enumerate" /><published>2022-05-29T00:00:00-05:00</published><updated>2022-05-29T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_enumerate</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_enumerate/"><![CDATA[<p>반복문의 for와 enumerate 사용 정리</p>

<h1 id="for문을-통한-list-순회">for문을 통한 list 순회</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">arr</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>

<span class="c1">#출력
</span><span class="n">a</span>
<span class="n">b</span>
<span class="n">c</span>
<span class="n">d</span>
<span class="n">e</span>
</code></pre></div></div>
<p>위 조건에서 index를 함께 출력하고 싶을때?</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">arr</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">c</span> <span class="p">)</span>
    <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="c1">#출력
</span><span class="mi">0</span> <span class="n">a</span>
<span class="mi">1</span> <span class="n">b</span>
<span class="mi">2</span> <span class="n">c</span>
<span class="mi">3</span> <span class="n">d</span>
<span class="mi">4</span> <span class="n">e</span>
</code></pre></div></div>
<p>위 i의 변수가 for 종료 이후에도 메모리에 남는 문제가 있습니다.  <br />
아래 <code class="language-plaintext highlighter-rouge">len</code>을 사용하지만, 이부분도 최적의 해결안은 아닙니다.  <br />
index를 순회하면 되지만, 전체 len을 구해야되는 문제가 존재합니다</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">arr</span><span class="p">)):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">)</span>

<span class="c1">#출력
</span><span class="mi">0</span> <span class="n">a</span>
<span class="mi">1</span> <span class="n">b</span>
<span class="mi">2</span> <span class="n">c</span>
<span class="mi">3</span> <span class="n">d</span>
<span class="mi">4</span> <span class="n">e</span>
</code></pre></div></div>

<h1 id="enumerate을-통한-list-순회">enumerate을 통한 list 순회</h1>
<p>enumerate(순회데이터[,시작 인덱스])</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">data</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">idx</span><span class="p">,</span> <span class="n">data</span> <span class="p">)</span>

<span class="c1">#출력
</span><span class="mi">0</span> <span class="n">a</span>
<span class="mi">1</span> <span class="n">b</span>
<span class="mi">2</span> <span class="n">c</span>
<span class="mi">3</span> <span class="n">d</span>
<span class="mi">4</span> <span class="n">e</span>
</code></pre></div></div>
<p>시작 인자를 변경한다면, 다음과 같이 출력됩니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">data</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="mi">50</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">idx</span><span class="p">,</span> <span class="n">data</span> <span class="p">)</span>

<span class="c1">#출력
</span><span class="mi">50</span> <span class="n">a</span>
<span class="mi">51</span> <span class="n">b</span>
<span class="mi">52</span> <span class="n">c</span>
<span class="mi">53</span> <span class="n">d</span>
<span class="mi">54</span> <span class="n">e</span>
</code></pre></div></div>

<h1 id="enumerate-vs-iter">enumerate vs iter</h1>
<p><code class="language-plaintext highlighter-rouge">iter</code> 함수는 <code class="language-plaintext highlighter-rouge">next</code>를 통해 item을 접근하는 enumerate와 동일한 방식을 제공합니다.
그러나 다른점은 index 를 반환 하는 여부가 차이가 존재합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="n">iter_data</span> <span class="o">=</span> <span class="nb">iter</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="s">'a'</span>
<span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="s">'b'</span>
<span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="s">'c'</span>
<span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="s">'d'</span>
<span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="s">'e'</span>
<span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
<span class="o">----------------------------</span>
<span class="n">StopIterationTraceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">)</span>
<span class="n">Input</span> <span class="n">In</span> <span class="p">[</span><span class="mi">49</span><span class="p">],</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">cell</span> <span class="n">line</span><span class="p">:</span> <span class="mi">1</span><span class="o">&gt;</span><span class="p">()</span>
<span class="o">----&gt;</span> <span class="mi">1</span> <span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
</code></pre></div></div>
<p>동일 기능을 enumerate를 사용할 경우</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="n">enum_data</span> <span class="o">=</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">'a'</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">'b'</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">'c'</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="s">'d'</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="s">'e'</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
<span class="o">----------------------------</span>
<span class="n">StopIterationTraceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">)</span>
<span class="n">Input</span> <span class="n">In</span> <span class="p">[</span><span class="mi">56</span><span class="p">],</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">cell</span> <span class="n">line</span><span class="p">:</span> <span class="mi">1</span><span class="o">&gt;</span><span class="p">()</span>
<span class="o">----&gt;</span> <span class="mi">1</span> <span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="enumerate을-사용-예">enumerate을 사용 예</h1>

<h2 id="2중-탐색-예제-on2">2중 탐색 예제 O(n^2)</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">data1</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">j</span><span class="p">,</span> <span class="n">data2</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">:],</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="n">data2</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">' '</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">''</span><span class="p">)</span>

<span class="c1">#출력
</span><span class="n">a</span> <span class="n">b</span> <span class="n">c</span> <span class="n">d</span> <span class="n">e</span> 
<span class="n">b</span> <span class="n">c</span> <span class="n">d</span> <span class="n">e</span> 
<span class="n">c</span> <span class="n">d</span> <span class="n">e</span> 
<span class="n">d</span> <span class="n">e</span> 
<span class="n">e</span> 
</code></pre></div></div>

<h2 id="리스트-형-변환">리스트 형 변환</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="nb">list</span><span class="p">(</span><span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="p">[(</span><span class="mi">0</span><span class="p">,</span> <span class="s">'a'</span><span class="p">),</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">'b'</span><span class="p">),</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">'c'</span><span class="p">),</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="s">'d'</span><span class="p">),</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="s">'e'</span><span class="p">)]</span>
</code></pre></div></div>

<h2 id="2차원-배열-쉽게-접근">2차원 배열 쉽게 접근</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">],[</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">],[</span><span class="s">'e'</span><span class="p">,</span><span class="s">'f'</span><span class="p">]]</span>
<span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">arr</span><span class="p">)):</span>
    <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">r</span><span class="p">])):</span>
        <span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">arr</span><span class="p">[</span><span class="n">r</span><span class="p">][</span><span class="n">c</span><span class="p">])</span>
<span class="c1">#출력
</span><span class="mi">0</span> <span class="mi">0</span> <span class="n">a</span>
<span class="mi">0</span> <span class="mi">1</span> <span class="n">b</span>
<span class="mi">1</span> <span class="mi">0</span> <span class="n">c</span>
<span class="mi">1</span> <span class="mi">1</span> <span class="n">d</span>
<span class="mi">2</span> <span class="mi">0</span> <span class="n">e</span>
<span class="mi">2</span> <span class="mi">1</span> <span class="n">f</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">],[</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">],[</span><span class="s">'e'</span><span class="p">,</span><span class="s">'f'</span><span class="p">]]</span>
<span class="k">for</span> <span class="n">r</span><span class="p">,</span> <span class="n">row</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">c</span><span class="p">,</span> <span class="n">data</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">row</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
<span class="c1">#출력
</span><span class="mi">0</span> <span class="mi">0</span> <span class="n">a</span>
<span class="mi">0</span> <span class="mi">1</span> <span class="n">b</span>
<span class="mi">1</span> <span class="mi">0</span> <span class="n">c</span>
<span class="mi">1</span> <span class="mi">1</span> <span class="n">d</span>
<span class="mi">2</span> <span class="mi">0</span> <span class="n">e</span>
<span class="mi">2</span> <span class="mi">1</span> <span class="n">f</span>
</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="enumerate" /><category term="for" /><summary type="html"><![CDATA[반복문의 for와 enumerate 사용 정리]]></summary></entry><entry><title type="html">[Python] input 처리</title><link href="https://kimjaehyun.co.kr/codingtest/python/input/python-input/" rel="alternate" type="text/html" title="[Python] input 처리" /><published>2022-05-29T00:00:00-05:00</published><updated>2022-05-29T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/codingtest/python/input/python-input</id><content type="html" xml:base="https://kimjaehyun.co.kr/codingtest/python/input/python-input/"><![CDATA[<p>Python에서 코딩 테스트시에 입력을 처리하는 방법</p>

<h1 id="배열-생성-및-초기화">배열 생성 및 초기화</h1>
<h2 id="1차원-배열-초기화">1차원 배열 초기화</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="mi">5</span>
<span class="n">arr</span>
<span class="c1">#출력 
</span><span class="o">&gt;</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>
</code></pre></div></div>

<h2 id="2차원-배열-초기화">2차원 배열 초기화</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">row</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">col</span> <span class="o">=</span> <span class="mi">2</span>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">col</span><span class="p">]</span><span class="o">*</span><span class="n">row</span>
<span class="n">arr</span>
<span class="c1">#출력 
</span><span class="o">&gt;</span> <span class="p">[[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]]</span>

<span class="n">arr</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">col</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">row</span><span class="p">)]</span>
<span class="n">arr</span>
<span class="c1">#출력 
</span><span class="o">&gt;</span> <span class="p">[[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]]</span>

</code></pre></div></div>

<h1 id="입력-값-처리">입력 값 처리</h1>
<h2 id="입력-샘플">입력 샘플</h2>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>5
10  10
20  35
22  34
58  60
123 2148
</code></pre></div></div>

<h2 id="input-사용법">input() 사용법</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>

<span class="n">N</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
        <span class="n">a</span><span class="p">,</span><span class="n">b</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>
        <span class="k">print</span><span class="p">(</span> <span class="n">a</span> <span class="p">,</span> <span class="n">b</span> <span class="p">)</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="mi">10</span>  <span class="mi">10</span>
<span class="o">&gt;</span> <span class="mi">20</span>  <span class="mi">35</span>
<span class="o">&gt;</span> <span class="mi">22</span>  <span class="mi">34</span>
<span class="o">&gt;</span> <span class="mi">58</span>  <span class="mi">60</span>
<span class="o">&gt;</span> <span class="mi">123</span> <span class="mi">2148</span>

</code></pre></div></div>

<h2 id="sysstdinreadline">sys.stdin.readline()</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>

<span class="n">N</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">())</span>  <span class="c1">## 동일 하고 이부분만 ㅂ녁여되ㅏㅁ
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
        <span class="n">a</span><span class="p">,</span><span class="n">b</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>
        <span class="k">print</span><span class="p">(</span> <span class="n">a</span> <span class="p">,</span> <span class="n">b</span> <span class="p">)</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="mi">10</span>  <span class="mi">10</span>
<span class="o">&gt;</span> <span class="mi">20</span>  <span class="mi">35</span>
<span class="o">&gt;</span> <span class="mi">22</span>  <span class="mi">34</span>
<span class="o">&gt;</span> <span class="mi">58</span>  <span class="mi">60</span>
<span class="o">&gt;</span> <span class="mi">123</span> <span class="mi">2148</span>

</code></pre></div></div>

<h2 id="라인단위-처리">라인단위 처리</h2>
<h3 id="한줄에-한개의-변수-저장-하기">한줄에 한개의 변수 저장 하기</h3>
<p>입력 형태</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>79
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">int</code>을 변한화여 대입</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="n">a</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">())</span>

</code></pre></div></div>

<h3 id="한줄에-여러개의-변수를-split-하기">한줄에 여러개의 변수를 Split 하기</h3>
<p>입력 형태</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1 3 5 7 9 
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">split</code>을 이용하여, <code class="language-plaintext highlighter-rouge">map-&gt;int</code>로 변한화여 개별 대입 방법</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>

<span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">d</span><span class="p">,</span> <span class="n">e</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">split</code>을 이용하여, <code class="language-plaintext highlighter-rouge">map-&gt;int</code>로 변한화여 리스트에 저장</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>

<span class="n">listdata</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">()))</span>

</code></pre></div></div>

<h1 id="활용-예제">활용 예제</h1>
<h2 id="n줄의-리스트-저장">N줄의 리스트 저장</h2>
<p>입력 형태 ( 5줄의 이름 출력 경우)</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>5       
홍길동
김철수
이귀남
하현수
이진수
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">strip()</code>는 trim()과 같이 앞뒤 공백 제거 역할.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="n">N</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">())</span>
<span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">strip</span><span class="p">()</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">)]</span>
</code></pre></div></div>

<h2 id="n줄의-2차원을-1차원-리스트로-처리">N줄의 2차원을 1차원 리스트로 처리</h2>
<p>입력 형태 ( 3행 3열의의미)</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3       
1 2 3
4 5 6
7 8 9
</code></pre></div></div>
<p>1차원 리스트로 모두 등록될 때</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="n">N</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">())</span>
<span class="n">arr</span> <span class="o">=</span><span class="p">[];</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
    <span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">())))</span>
<span class="n">arr</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]</span>
</code></pre></div></div>

<h2 id="n줄의-2차원을2차원-리스트로-처리">N줄의 2차원을2차원 리스트로 처리</h2>
<p>입력 형태 ( 3행 3열의의미)</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3       
1 2 3
4 5 6
7 8 9
</code></pre></div></div>

<p>2차원 리스트로 모두 등록될 때</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>

<span class="n">INF</span><span class="o">=-</span><span class="mi">1</span>  <span class="c1">#초기값
</span><span class="n">N</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">())</span>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[[</span><span class="n">INF</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">)]</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">)]</span> <span class="c1"># _ 의미 값을 사용하지 않는 무시의 의미
</span><span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="p">[[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">],</span>
<span class="o">&gt;</span>  <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">],</span>
<span class="o">&gt;</span>  <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">],</span>
<span class="o">&gt;</span>  <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">],</span>
<span class="o">&gt;</span>  <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">],</span>
<span class="o">&gt;</span>  <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">]]</span>


<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">();</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
        <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">(</span><span class="n">j</span><span class="p">);</span>
<span class="n">arr</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]]</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="codingtest" /><category term="python" /><category term="input" /><category term="python" /><category term="python" /><category term="stdin" /><category term="readline" /><summary type="html"><![CDATA[Python에서 코딩 테스트시에 입력을 처리하는 방법]]></summary></entry><entry><title type="html">[Python] deque (stack, queue) 구현</title><link href="https://kimjaehyun.co.kr/codingtest/python/python-deque/" rel="alternate" type="text/html" title="[Python] deque (stack, queue) 구현" /><published>2022-05-28T00:00:00-05:00</published><updated>2022-05-28T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/codingtest/python/python-deque</id><content type="html" xml:base="https://kimjaehyun.co.kr/codingtest/python/python-deque/"><![CDATA[<p>Python에서 list형태로 queue를 구현시 성능이슈로 인해서 deque 사용을 권장합니다.</p>

<h1 id="list-vs-deque-성능-문제">list vs deque 성능 문제</h1>
<p>index 0번째 추가와 출력시 성능</p>
<ul>
  <li>list</li>
</ul>

<table>
  <thead>
    <tr>
      <th>작업</th>
      <th style="text-align: center">명령어</th>
      <th style="text-align: center">시간복잡도</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>출력</td>
      <td style="text-align: center">pop(0)</td>
      <td style="text-align: center">O(n)</td>
    </tr>
    <tr>
      <td>입력</td>
      <td style="text-align: center">Insert(0,value)</td>
      <td style="text-align: center">O(n)</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>deque</li>
</ul>

<table>
  <thead>
    <tr>
      <th>작업</th>
      <th style="text-align: center">명령어</th>
      <th style="text-align: center">시간복잡도</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>출력</td>
      <td style="text-align: center">popleft()</td>
      <td style="text-align: center">O(1)</td>
    </tr>
    <tr>
      <td>입력</td>
      <td style="text-align: center">appendleft(value)</td>
      <td style="text-align: center">O(1)</td>
    </tr>
  </tbody>
</table>

<h1 id="deque-기본-사용법">deque 기본 사용법</h1>
<p>입출력이 양방향 모두 지원하는 메소드가 존재하여, Queue, Stack을 모두 구현할 수 있습니다.</p>

<ul>
  <li>append() : 배열뒤로 추가됨</li>
  <li>pop() : 오른쪽부터 출력</li>
  <li>popleft() : 왼쪽부터 출력</li>
  <li>len(q) : 수를 반환 if len(q)==0 : # Empty 조건</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1">#리스트 타입
</span><span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">10</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="c1">#출력 pop은 뒤에서 부터 출력됨
</span><span class="mi">10</span>
<span class="mi">7</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>

<span class="c1"># deque
</span><span class="kn">from</span> <span class="nn">collections</span> <span class="kn">import</span> <span class="n">deque</span>

<span class="c1"># deque([iterable, [maxlen])
</span><span class="n">q</span> <span class="o">=</span> <span class="n">deque</span><span class="p">()</span>
<span class="n">q</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">q</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
<span class="n">q</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="n">q</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="n">deque</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">])</span>

<span class="n">q</span><span class="p">.</span><span class="n">appendleft</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">q</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">)</span>

<span class="o">&gt;</span> <span class="n">deque</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">9</span><span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">popleft</span><span class="p">())</span>

<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">popleft</span><span class="p">())</span>

<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">popleft</span><span class="p">())</span>
<span class="err">​</span>
<span class="c1"># pop() 오른쪽부터 출력됨
# popleft() 왼쪽부터 출력됨
</span>
<span class="o">&gt;</span> <span class="mi">9</span>
<span class="o">&gt;</span> <span class="mi">7</span>
<span class="o">&gt;</span> <span class="n">deque</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">])</span>
<span class="o">&gt;</span> <span class="mi">0</span>


<span class="n">q</span><span class="o">=</span><span class="n">deque</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">11</span><span class="p">))</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">q</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">' , '</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"len="</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">q</span><span class="p">))</span>

<span class="o">&gt;</span> <span class="mi">1</span> <span class="p">,</span> <span class="mi">2</span> <span class="p">,</span> <span class="mi">3</span> <span class="p">,</span> <span class="mi">4</span> <span class="p">,</span> <span class="mi">5</span> <span class="p">,</span> <span class="mi">6</span> <span class="p">,</span> <span class="mi">7</span> <span class="p">,</span> <span class="mi">8</span> <span class="p">,</span> <span class="mi">9</span> <span class="p">,</span> <span class="mi">10</span> <span class="p">,</span> <span class="nb">len</span><span class="o">=</span> <span class="mi">10</span>


<span class="n">q</span><span class="o">=</span><span class="n">deque</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">11</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">)</span>
<span class="k">while</span> <span class="n">q</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">pop</span><span class="p">(),</span> <span class="n">end</span><span class="o">=</span><span class="s">' , '</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"len="</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">q</span><span class="p">))</span>

<span class="o">&gt;</span> <span class="n">deque</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">])</span>
<span class="o">&gt;</span> <span class="mi">10</span> <span class="p">,</span> <span class="mi">9</span> <span class="p">,</span> <span class="mi">8</span> <span class="p">,</span> <span class="mi">7</span> <span class="p">,</span> <span class="mi">6</span> <span class="p">,</span> <span class="mi">5</span> <span class="p">,</span> <span class="mi">4</span> <span class="p">,</span> <span class="mi">3</span> <span class="p">,</span> <span class="mi">2</span> <span class="p">,</span> <span class="mi">1</span> <span class="p">,</span> <span class="nb">len</span><span class="o">=</span> <span class="mi">0</span>

<span class="n">q</span><span class="o">=</span><span class="n">deque</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">11</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">)</span>
<span class="k">while</span> <span class="n">q</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">popleft</span><span class="p">(),</span> <span class="n">end</span><span class="o">=</span><span class="s">' , '</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"len="</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">q</span><span class="p">))</span>

<span class="o">&gt;</span> <span class="n">deque</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">])</span>
<span class="o">&gt;</span> <span class="mi">1</span> <span class="p">,</span> <span class="mi">2</span> <span class="p">,</span> <span class="mi">3</span> <span class="p">,</span> <span class="mi">4</span> <span class="p">,</span> <span class="mi">5</span> <span class="p">,</span> <span class="mi">6</span> <span class="p">,</span> <span class="mi">7</span> <span class="p">,</span> <span class="mi">8</span> <span class="p">,</span> <span class="mi">9</span> <span class="p">,</span> <span class="mi">10</span> <span class="p">,</span> <span class="nb">len</span><span class="o">=</span> <span class="mi">0</span>

</code></pre></div></div>

<h1 id="deque---stack-filo">deque - Stack FILO</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># Stack FILO
</span><span class="n">st</span> <span class="o">=</span> <span class="n">deque</span><span class="p">()</span>
<span class="n">st</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">st</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="n">st</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
<span class="n">st</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
<span class="n">st</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>

<span class="c1">## peek
</span><span class="k">print</span><span class="p">(</span><span class="s">'peek :'</span><span class="p">,</span><span class="n">st</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>

<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="n">peek</span> <span class="p">:</span> <span class="mi">5</span>
<span class="o">&gt;</span> <span class="mi">5</span>
<span class="o">&gt;</span> <span class="mi">4</span>
<span class="o">&gt;</span> <span class="mi">3</span>
<span class="o">&gt;</span> <span class="mi">2</span>
<span class="o">&gt;</span> <span class="mi">1</span>
</code></pre></div></div>

<h1 id="deque---queue-fifo">deque - Queue FIFO</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># Queue FIFO
</span><span class="n">q</span> <span class="o">=</span> <span class="n">deque</span><span class="p">()</span>
<span class="n">q</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">q</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="n">q</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
<span class="n">q</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
<span class="n">q</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>

<span class="c1">## peek
</span><span class="k">print</span><span class="p">(</span><span class="s">'peek :'</span><span class="p">,</span><span class="n">q</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">popleft</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">popleft</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">popleft</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">popleft</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">.</span><span class="n">popleft</span><span class="p">())</span>


<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="n">peek</span> <span class="p">:</span> <span class="mi">1</span>
<span class="o">&gt;</span> <span class="mi">1</span>
<span class="o">&gt;</span> <span class="mi">2</span>
<span class="o">&gt;</span> <span class="mi">3</span>
<span class="o">&gt;</span> <span class="mi">4</span>
<span class="o">&gt;</span> <span class="mi">5</span>
</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="codingtest" /><category term="python" /><category term="queue" /><category term="stack" /><summary type="html"><![CDATA[Python에서 list형태로 queue를 구현시 성능이슈로 인해서 deque 사용을 권장합니다.]]></summary></entry><entry><title type="html">[Java] 이진 트리</title><link href="https://kimjaehyun.co.kr/algorithm/java/java-binarytree/" rel="alternate" type="text/html" title="[Java] 이진 트리" /><published>2022-05-28T00:00:00-05:00</published><updated>2022-05-28T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/java/java-binarytree</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/java/java-binarytree/"><![CDATA[<h1 id="이진트리">이진트리</h1>
<p>접근 순회 방식에 따라서 아래와 같이 나뉨.</p>
<h2 id="전위-순회preorder-traversal">전위 순회(Preorder Traversal)</h2>
<p>(부) - L - R</p>
<h2 id="중위-순회inorder-traversal">중위 순회(Inorder Traversal)</h2>
<p>L - (부) - R</p>
<h2 id="후위-순회postorder-traversal">후위 순회(Postorder Traversal)</h2>
<p>L - R - (부)</p>

<h1 id="소스-코드">소스 코드</h1>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">tree</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BinaryTree</span> <span class="o">{</span>
	
	<span class="kd">public</span> <span class="nc">Node</span> <span class="n">root</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRoot</span><span class="o">(</span><span class="nc">Node</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">root</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="nc">Node</span> <span class="nf">getRoot</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">root</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="nc">Node</span> <span class="nf">makeNode</span><span class="o">(</span><span class="nc">Node</span> <span class="n">left</span><span class="o">,</span> <span class="kt">int</span> <span class="n">data</span><span class="o">,</span> <span class="nc">Node</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">Node</span> <span class="n">n</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Node</span><span class="o">();</span>
		<span class="n">n</span><span class="o">.</span><span class="na">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">;</span>
		<span class="n">n</span><span class="o">.</span><span class="na">left</span> <span class="o">=</span> <span class="n">left</span><span class="o">;</span>
		<span class="n">n</span><span class="o">.</span><span class="na">right</span> <span class="o">=</span> <span class="n">right</span><span class="o">;</span>
		<span class="k">return</span> <span class="n">n</span><span class="o">;</span>
	<span class="o">}</span>
	
	
	<span class="c1">//① 전위 순회(Preorder Traversal)	(부) - L - R</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">preOrder</span><span class="o">(</span><span class="nc">Node</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">)</span> <span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">" %d "</span><span class="o">,</span> <span class="n">n</span><span class="o">.</span><span class="na">data</span><span class="o">);</span>
			<span class="n">preOrder</span><span class="o">(</span><span class="n">n</span><span class="o">.</span><span class="na">left</span><span class="o">);</span>
			<span class="n">preOrder</span><span class="o">(</span><span class="n">n</span><span class="o">.</span><span class="na">right</span><span class="o">);</span>			
		<span class="o">}</span>
	<span class="o">}</span>	
	<span class="c1">//② 중위 순회(Inorder Traversal)		L - (부) - R</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">inOrder</span><span class="o">(</span><span class="nc">Node</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">)</span> <span class="o">{</span>
			<span class="n">inOrder</span><span class="o">(</span><span class="n">n</span><span class="o">.</span><span class="na">left</span><span class="o">);</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">" %d "</span><span class="o">,</span> <span class="n">n</span><span class="o">.</span><span class="na">data</span><span class="o">);</span>
			<span class="n">inOrder</span><span class="o">(</span><span class="n">n</span><span class="o">.</span><span class="na">right</span><span class="o">);</span>			
		<span class="o">}</span>
	<span class="o">}</span>
	<span class="c1">//③ 후위 순회(Postorder Traversal)	L - R - (부)</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">postOrder</span><span class="o">(</span><span class="nc">Node</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">)</span> <span class="o">{</span>
			<span class="n">postOrder</span><span class="o">(</span><span class="n">n</span><span class="o">.</span><span class="na">left</span><span class="o">);</span>
			<span class="n">postOrder</span><span class="o">(</span><span class="n">n</span><span class="o">.</span><span class="na">right</span><span class="o">);</span>			
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">" %d "</span><span class="o">,</span> <span class="n">n</span><span class="o">.</span><span class="na">data</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
	<span class="cm">/*
	① 전위 순회(Preorder Traversal)	(부) - L - R
	② 중위 순회(Inorder Traversal)		L - (부) - R
	③ 후위 순회(Postorder Traversal)	L - R - (부)
	 	1
	   /  \
	  2   3
	 / \
	4   5
	
	 */</span>
		<span class="nc">BinaryTree</span> <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BinaryTree</span><span class="o">();</span>
		<span class="nc">Node</span> <span class="n">n4</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="na">makeNode</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
		<span class="nc">Node</span> <span class="n">n5</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="na">makeNode</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
		<span class="nc">Node</span> <span class="n">n2</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="na">makeNode</span><span class="o">(</span><span class="n">n4</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="n">n5</span><span class="o">);</span>
		<span class="nc">Node</span> <span class="n">n3</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="na">makeNode</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
		<span class="nc">Node</span> <span class="n">n1</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="na">makeNode</span><span class="o">(</span><span class="n">n2</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="n">n3</span><span class="o">);</span>
		
		<span class="n">t</span><span class="o">.</span><span class="na">setRoot</span><span class="o">(</span><span class="n">n1</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"inOrder:"</span><span class="o">);</span>
		<span class="n">t</span><span class="o">.</span><span class="na">inOrder</span><span class="o">(</span><span class="n">t</span><span class="o">.</span><span class="na">getRoot</span><span class="o">());</span> <span class="c1">//4  2  5  1  3 </span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"preOrder:"</span><span class="o">);</span>
		<span class="n">t</span><span class="o">.</span><span class="na">preOrder</span><span class="o">(</span><span class="n">t</span><span class="o">.</span><span class="na">getRoot</span><span class="o">());</span> <span class="c1">// 1  2  4  5  3 </span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"postOrder:"</span><span class="o">);</span>
		<span class="n">t</span><span class="o">.</span><span class="na">postOrder</span><span class="o">(</span><span class="n">t</span><span class="o">.</span><span class="na">getRoot</span><span class="o">());</span> <span class="c1">// 4  5  2  3  1 </span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
		
	<span class="o">}</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">Node</span><span class="o">{</span>
	<span class="kt">int</span> <span class="n">data</span><span class="o">;</span>
	<span class="nc">Node</span> <span class="n">left</span><span class="o">;</span>
	<span class="nc">Node</span> <span class="n">right</span><span class="o">;</span>
	
<span class="o">}</span>



<span class="c1">// 출력 obj.c(arr,  ck, 0, arr.length, 3);</span>
<span class="nl">inOrder:</span>
 <span class="mi">4</span>  <span class="mi">2</span>  <span class="mi">5</span>  <span class="mi">1</span>  <span class="mi">3</span> 
<span class="nl">preOrder:</span>
 <span class="mi">1</span>  <span class="mi">2</span>  <span class="mi">4</span>  <span class="mi">5</span>  <span class="mi">3</span> 
<span class="nl">postOrder:</span>
 <span class="mi">4</span>  <span class="mi">5</span>  <span class="mi">2</span>  <span class="mi">3</span>  <span class="mi">1</span> 


</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="java" /><category term="트리" /><category term="Tree" /><category term="이진트리" /><category term="BinaryTree" /><summary type="html"><![CDATA[이진트리 접근 순회 방식에 따라서 아래와 같이 나뉨. 전위 순회(Preorder Traversal) (부) - L - R 중위 순회(Inorder Traversal) L - (부) - R 후위 순회(Postorder Traversal) L - R - (부)]]></summary></entry><entry><title type="html">[Java] DFS vs BFS</title><link href="https://kimjaehyun.co.kr/algorithm/java/java-dfs-bsf/" rel="alternate" type="text/html" title="[Java] DFS vs BFS" /><published>2022-05-28T00:00:00-05:00</published><updated>2022-05-28T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/java/java-dfs-bsf</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/java/java-dfs-bsf/"><![CDATA[<h1 id="깊이-우선-검색dfs">깊이 우선 검색(DFS)</h1>
<ul>
  <li>연결된 항목으 끝까지 검색 후 상위 브랜치로 이동하여 검색을 진행</li>
  <li>최대한 깊이 내려간뒤, 더이상 없을때 옆으로 이동하는 검색 형태</li>
  <li>Stack</li>
</ul>

<h1 id="넓이-우선-검색bsf">넓이 우선 검색(BSF)</h1>
<ul>
  <li>연결된 인접노드를 먼저 넓게 검색한 다음 더이상 없을때 하위로 내려감</li>
  <li>최대한 넓게 이동 검색 후 하위로 이동.</li>
  <li>Queue</li>
</ul>

<h1 id="소스-코드">소스 코드</h1>
<p>문제 그래프 연결 조건  <br />
<img src="/assets/images_post/codingtest/bfsdfs_graph_ex001.png" alt="그래프 연결" /></p>
<ul>
  <li>DFS(0시작) 결과 : 0 1 2 4 3 5 6 8 7</li>
  <li>BFS(0시작) 결과 : 0 1 2 3 4 5 6 7 8</li>
</ul>

<h2 id="dfsdepth-first-search">DFS(Depth-First Search)</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">dfsbfs</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Queue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Stack</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Dfs</span> <span class="o">{</span>	<span class="c1">// Depth-First Search (inorder, preorder, postorder)</span>
	<span class="c1">//Stack 사용	</span>
	<span class="kt">int</span> <span class="n">cnt</span><span class="o">;</span>
	<span class="kt">int</span><span class="o">[]</span> <span class="n">ck</span><span class="o">;</span>	<span class="c1">//방문 표시용</span>
	<span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;[]</span> <span class="n">node</span><span class="o">;</span> 	<span class="c1">//node 관계 표시</span>

	<span class="nc">Stack</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">st</span><span class="o">;</span>	<span class="c1">// DFS용</span>
	
	<span class="kd">public</span> <span class="nf">Dfs</span><span class="o">(</span><span class="kt">int</span> <span class="n">cnt</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">cnt</span> <span class="o">=</span> <span class="n">cnt</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">ck</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">cnt</span><span class="o">];</span>
		<span class="k">this</span><span class="o">.</span><span class="na">node</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">[</span><span class="n">cnt</span><span class="o">];</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cnt</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">node</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;();</span>
		<span class="o">}</span>
		
		<span class="c1">//DFS 용</span>
		<span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Stack</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;();</span>

	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addEdge</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">node</span><span class="o">[</span><span class="n">a</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
		<span class="n">node</span><span class="o">[</span><span class="n">b</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">dfs</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">dfs</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">dfs</span><span class="o">(</span><span class="kt">int</span> <span class="n">point</span><span class="o">)</span> <span class="o">{</span>  
		<span class="k">if</span><span class="o">(</span><span class="n">ck</span><span class="o">[</span><span class="n">point</span><span class="o">]</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span> <span class="c1">//이미 방문</span>
		
		<span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">point</span><span class="o">);</span>
		<span class="n">ck</span><span class="o">[</span><span class="n">point</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
		
		<span class="kt">int</span> <span class="n">out_point</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d "</span><span class="o">,</span> <span class="n">out_point</span><span class="o">);</span>
		
		<span class="c1">//자식을 dfs에 재귀호출</span>
		<span class="k">while</span><span class="o">(</span> <span class="o">!</span> <span class="n">node</span><span class="o">[</span><span class="n">out_point</span><span class="o">].</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">)</span> <span class="o">{</span>
			<span class="kt">int</span> <span class="n">child</span> <span class="o">=</span> <span class="n">node</span><span class="o">[</span><span class="n">out_point</span><span class="o">].</span><span class="na">poll</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>
			<span class="n">dfs</span><span class="o">(</span><span class="n">child</span><span class="o">);</span>
		<span class="o">}</span>		
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

		<span class="nc">Dfs</span> <span class="n">fs</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Dfs</span><span class="o">(</span><span class="mi">9</span><span class="o">);</span><span class="c1">//자료의 갯수</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span><span class="mi">5</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span><span class="mi">6</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span><span class="mi">7</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">6</span><span class="o">,</span><span class="mi">8</span><span class="o">);</span>
		
		<span class="n">fs</span><span class="o">.</span><span class="na">dfs</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>	<span class="c1">//0 1 2 4 3 5 6 8 7</span>
		<span class="c1">//fs.dfs(3);		//3 1 0 2 4 5 6 8 7 </span>
		
	<span class="o">}</span>

<span class="o">}</span>

<span class="c1">// 출력 </span>
<span class="mi">0</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">6</span> <span class="mi">8</span> <span class="mi">7</span>

</code></pre></div></div>

<h2 id="bfsbreadth-first-search">BFS(Breadth-First Search)</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">dfsbfs</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Queue</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Bfs</span> <span class="o">{</span>	<span class="c1">// Breadth-First Search</span>
	<span class="c1">// Queue</span>
	
	<span class="kt">int</span> <span class="n">cnt</span><span class="o">;</span>
	<span class="kt">int</span><span class="o">[]</span> <span class="n">ck</span><span class="o">;</span>	<span class="c1">//방문 표시용</span>
	<span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;[]</span> <span class="n">node</span><span class="o">;</span> 	<span class="c1">//node 관계 표시</span>
	<span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">q</span><span class="o">;</span> 	
	
	<span class="kd">public</span> <span class="nf">Bfs</span><span class="o">(</span><span class="kt">int</span> <span class="n">cnt</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">cnt</span> <span class="o">=</span> <span class="n">cnt</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">ck</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">cnt</span><span class="o">];</span>
		<span class="k">this</span><span class="o">.</span><span class="na">node</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">[</span><span class="n">cnt</span><span class="o">];</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cnt</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">node</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;();</span>
		<span class="o">}</span>
		
		<span class="c1">//BSF용</span>
		<span class="n">q</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;();</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">bfs</span><span class="o">(){</span>
		<span class="n">bfs</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addEdge</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">//System.out.format("%d %d \n",a,b);</span>
		<span class="n">node</span><span class="o">[</span><span class="n">a</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
		<span class="n">node</span><span class="o">[</span><span class="n">b</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">bfs</span><span class="o">(</span><span class="kt">int</span> <span class="n">point</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">ck</span><span class="o">[</span><span class="n">point</span><span class="o">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">)</span> <span class="k">return</span><span class="o">;</span>
		
		<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">point</span><span class="o">);</span>
		<span class="n">ck</span><span class="o">[</span><span class="n">point</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
		
		<span class="k">while</span><span class="o">(</span> <span class="o">!</span> <span class="n">q</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">)</span> <span class="o">{</span>
			<span class="kt">int</span> <span class="n">out_piont</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>
			
			<span class="k">while</span><span class="o">(</span> <span class="o">!</span> <span class="n">node</span><span class="o">[</span><span class="n">out_piont</span><span class="o">].</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">)</span> <span class="o">{</span>
				<span class="kt">int</span> <span class="n">child</span> <span class="o">=</span> <span class="n">node</span><span class="o">[</span><span class="n">out_piont</span><span class="o">].</span><span class="na">poll</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>
				<span class="c1">//자식 노드들을 Q에 추가함</span>
				<span class="k">if</span><span class="o">(</span> <span class="n">ck</span><span class="o">[</span><span class="n">child</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">)</span> <span class="o">{</span>
					<span class="n">ck</span><span class="o">[</span><span class="n">child</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
					<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">child</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span><span class="c1">//end whil</span>
			
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d "</span><span class="o">,</span> <span class="n">out_piont</span><span class="o">);</span>
			
		<span class="o">}</span><span class="c1">//end while</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>	
		<span class="nc">Bfs</span> <span class="n">fs</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Bfs</span><span class="o">(</span><span class="mi">9</span><span class="o">);</span><span class="c1">//자료의 갯수</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span><span class="mi">5</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span><span class="mi">6</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span><span class="mi">7</span><span class="o">);</span>
		<span class="n">fs</span><span class="o">.</span><span class="na">addEdge</span><span class="o">(</span><span class="mi">6</span><span class="o">,</span><span class="mi">8</span><span class="o">);</span>
		
		<span class="n">fs</span><span class="o">.</span><span class="na">bfs</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>	<span class="c1">//0 1 2 3 4 5 6 7 8 </span>
		<span class="c1">//fs.bfs(3);		//3 1 2 4 5 0 6 7 8 </span>
	<span class="o">}</span>
<span class="o">}</span>

<span class="c1">// 출력 </span>
<span class="mi">0</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">6</span> <span class="mi">7</span> <span class="mi">8</span> 
</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="java" /><category term="dfs" /><category term="bfs" /><category term="깊이우선탐색" /><category term="넓이우선탐색" /><category term="Breadth-First Search" /><summary type="html"><![CDATA[깊이 우선 검색(DFS) 연결된 항목으 끝까지 검색 후 상위 브랜치로 이동하여 검색을 진행 최대한 깊이 내려간뒤, 더이상 없을때 옆으로 이동하는 검색 형태 Stack]]></summary></entry><entry><title type="html">[Java] Sort 함수</title><link href="https://kimjaehyun.co.kr/algorithm/java/java-sort/" rel="alternate" type="text/html" title="[Java] Sort 함수" /><published>2022-05-28T00:00:00-05:00</published><updated>2022-05-28T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/java/java-sort</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/java/java-sort/"><![CDATA[<p>정렬 함수 테스트</p>

<h1 id="정렬-방식">정렬 방식</h1>
<ul>
  <li>Bubble Sort.			O(N^2)</li>
  <li>Selection Sort.		O(N^2)</li>
  <li>Insertion Sort.		O(N^2)</li>
  <li>Quick Sort.			avg O(N*logN), max O(N^2) - 이미정렬된 경우</li>
  <li>Merge Sort.			O(N*logN) 보장, 단점 정렬시 메모리 필요함.</li>
  <li>Heap Sort.			N/2*logN  (N이 클경우 logN은 값은 작은 값으로 결과적으로) &gt; O(N)</li>
  <li>Counting Sort.		O(N) 특정 범위 조건</li>
</ul>

<h1 id="bubble-sort">Bubble Sort.</h1>
<p>성능 O(N^2)</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">package</span> <span class="nn">sort</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BubbleSort</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="c1">// 버블O(N^2) &lt; 선택O(N^2) &lt; 삽입O(N^2) </span>
		<span class="c1">// 10 + 9 + .... + 1 =  10*(10+1)/2 = 55 (등차 수열)</span>
		<span class="c1">// 버블 정렬의 시간 복잡도 O(N*N) = O(N^2)</span>
		<span class="c1">// 선택 정렬과 시간 복잡도는 같으나, 매번 비교와 자리 바꿈으로 인해서 버블 정렬이 정렬중 제일 성능이 느림.</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"버블 정렬 : 바로 옆값과 비교하여 작은것을 앞으로, 실행시 마다 젤 큰값이 제일 뒤로 보내짐"</span><span class="o">);</span>
		
		<span class="kt">int</span><span class="o">[]</span> <span class="n">num</span> <span class="o">=</span>	<span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">9</span><span class="o">};</span>
		<span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="n">num</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>

		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Origin-----------------------------------------"</span><span class="o">);</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">d</span><span class="o">&lt;</span><span class="n">len</span> <span class="o">;</span> <span class="n">d</span><span class="o">++)</span> <span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%4d"</span><span class="o">,</span><span class="n">num</span><span class="o">[</span><span class="n">d</span><span class="o">]);</span>
		<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Sort-------------------------------------------"</span><span class="o">);</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">len</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">j</span><span class="o">&lt;(</span><span class="n">len</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="n">i</span><span class="o">)</span> <span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>	
				
				<span class="k">if</span><span class="o">(</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">len</span><span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span> <span class="o">)</span> <span class="o">{</span>
					<span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
					<span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
					<span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>							
				<span class="o">}</span>
				
				<span class="c1">//System.out.format("%4d",num[j]);				</span>
			<span class="o">}</span><span class="c1">//end for			</span>
			<span class="c1">//System.out.println("");</span>
			
			
			<span class="c1">//출력용</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">d</span><span class="o">&lt;</span><span class="n">len</span> <span class="o">;</span> <span class="n">d</span><span class="o">++)</span> <span class="o">{</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%4d"</span><span class="o">,</span><span class="n">num</span><span class="o">[</span><span class="n">d</span><span class="o">]);</span>
			<span class="o">}</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>		
		<span class="o">}</span><span class="c1">//end for</span>
		
	<span class="o">}</span>
<span class="o">}</span>

<span class="c1">// 출력 결과</span>
<span class="nc">Origin</span><span class="o">-----------------------------------------</span>
   <span class="mi">1</span>  <span class="mi">10</span>   <span class="mi">5</span>   <span class="mi">8</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">9</span>
<span class="nc">Sort</span><span class="o">-------------------------------------------</span>
   <span class="mi">1</span>   <span class="mi">5</span>   <span class="mi">8</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">5</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">5</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>

</code></pre></div></div>

<h1 id="selection-sort">Selection Sort.</h1>
<p>성능 O(N^2)</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">sort</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SelectionSort</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		
		<span class="c1">// 10 + 9 + .... + 1 =  10*(10+1)/2 = 55 (등차 수열)</span>
		<span class="c1">// 선택 정렬의 시간 복잡도 O(N*N) = O(N^2)</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"선택 정렬 : 가장 작은 수를 제일 앞으로 이동"</span><span class="o">);</span>
		
		<span class="kt">int</span><span class="o">[]</span> <span class="n">num</span> <span class="o">=</span>	<span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">9</span><span class="o">};</span>
		<span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="n">num</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>

		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Origin-----------------------------------------"</span><span class="o">);</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">d</span><span class="o">&lt;</span><span class="n">len</span> <span class="o">;</span> <span class="n">d</span><span class="o">++)</span> <span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%4d"</span><span class="o">,</span><span class="n">num</span><span class="o">[</span><span class="n">d</span><span class="o">]);</span>
		<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Sort-------------------------------------------"</span><span class="o">);</span>
		
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">len</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="c1">//System.out.println("[i]"+num[i]);</span>

			<span class="kt">int</span> <span class="n">midx</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span> <span class="c1">//Min Value Index</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span><span class="n">i</span> <span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">len</span> <span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>			
				<span class="k">if</span><span class="o">(</span> <span class="n">num</span><span class="o">[</span><span class="n">midx</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">)</span> <span class="o">{</span>
					<span class="n">midx</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
				<span class="o">}</span>				
			<span class="o">}</span>
			
			<span class="c1">//최소값 교체</span>
			<span class="k">if</span><span class="o">(</span> <span class="n">midx</span> <span class="o">!=</span> <span class="n">i</span> <span class="o">)</span> <span class="o">{</span>
				<span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
				<span class="n">num</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">midx</span><span class="o">];</span>
				<span class="n">num</span><span class="o">[</span><span class="n">midx</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
			<span class="o">}</span>
			
			<span class="c1">//출력용</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">d</span><span class="o">&lt;</span><span class="n">len</span> <span class="o">;</span> <span class="n">d</span><span class="o">++)</span> <span class="o">{</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%4d"</span><span class="o">,</span><span class="n">num</span><span class="o">[</span><span class="n">d</span><span class="o">]);</span>
			<span class="o">}</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>			
			
		<span class="o">}</span><span class="c1">//end for</span>
	<span class="o">}</span>
<span class="o">}</span>

<span class="c1">// 출력 결과</span>
<span class="n">선택</span> <span class="n">정렬</span> <span class="o">:</span> <span class="n">가장</span> <span class="n">작은</span> <span class="n">수를</span> <span class="n">제일</span> <span class="n">앞으로</span> <span class="n">이동</span>
<span class="nc">Origin</span><span class="o">-----------------------------------------</span>
   <span class="mi">1</span>  <span class="mi">10</span>   <span class="mi">5</span>   <span class="mi">8</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">9</span>
<span class="nc">Sort</span><span class="o">-------------------------------------------</span>
   <span class="mi">1</span>  <span class="mi">10</span>   <span class="mi">5</span>   <span class="mi">8</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">5</span>   <span class="mi">8</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">3</span>  <span class="mi">10</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">8</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">5</span>  <span class="mi">10</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">8</span>   <span class="mi">5</span>  <span class="mi">10</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">8</span>   <span class="mi">7</span>  <span class="mi">10</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">8</span>   <span class="mi">7</span>  <span class="mi">10</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>  <span class="mi">10</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>  <span class="mi">10</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>


</code></pre></div></div>

<h1 id="insertion-sort">Insertion Sort.</h1>
<p>성능 O(N^2)</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">sort</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">InsertionSort</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="c1">// 삽입 정렬의 시간 복잡도 O(N*N) = O(N^2) 이나, 선택과 버블 정렬 대비, 중간 연산이 멈출수 있어서 시간을 줄일수 있음</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"삽입 정렬 : 바로 옆값과 비교하여 작은것을 앞으로, 실행시 마다 젤 큰값이 제일 뒤로 보내짐"</span><span class="o">);</span>
		
		<span class="kt">int</span><span class="o">[]</span> <span class="n">num</span> <span class="o">=</span>	<span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">9</span><span class="o">};</span>
		<span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="n">num</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>

		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Origin-----------------------------------------"</span><span class="o">);</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">d</span><span class="o">&lt;</span><span class="n">len</span> <span class="o">;</span> <span class="n">d</span><span class="o">++)</span> <span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%4d"</span><span class="o">,</span><span class="n">num</span><span class="o">[</span><span class="n">d</span><span class="o">]);</span>
		<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Sort-------------------------------------------"</span><span class="o">);</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">len</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">;</span> <span class="n">j</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>	
				<span class="c1">// 교체</span>
				<span class="k">if</span><span class="o">(</span><span class="n">j</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span>  <span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">){</span>
					<span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
					<span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span>
					<span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
				<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
					<span class="k">continue</span><span class="o">;</span>
				<span class="o">}</span>				
			<span class="o">}</span>
			
			<span class="c1">//출력용</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">d</span><span class="o">&lt;</span><span class="n">len</span> <span class="o">;</span> <span class="n">d</span><span class="o">++)</span> <span class="o">{</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%4d"</span><span class="o">,</span><span class="n">num</span><span class="o">[</span><span class="n">d</span><span class="o">]);</span>
			<span class="o">}</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
		<span class="o">}</span>
		
	<span class="o">}</span>
	
<span class="o">}</span>


<span class="c1">// 출력 결과</span>
<span class="nc">Origin</span><span class="o">-----------------------------------------</span>
   <span class="mi">1</span>  <span class="mi">10</span>   <span class="mi">5</span>   <span class="mi">8</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">9</span>
<span class="nc">Sort</span><span class="o">-------------------------------------------</span>
   <span class="mi">1</span>  <span class="mi">10</span>   <span class="mi">5</span>   <span class="mi">8</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">9</span>
   <span class="mi">1</span>  <span class="mi">10</span>   <span class="mi">5</span>   <span class="mi">8</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">5</span>  <span class="mi">10</span>   <span class="mi">8</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">5</span>   <span class="mi">8</span>  <span class="mi">10</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">5</span>   <span class="mi">7</span>   <span class="mi">8</span>  <span class="mi">10</span>   <span class="mi">6</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>  <span class="mi">10</span>   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>  <span class="mi">10</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>  <span class="mi">10</span>   <span class="mi">2</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>  <span class="mi">10</span>   <span class="mi">9</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>


</code></pre></div></div>

<h1 id="quick-sort">Quick Sort.</h1>
<p>avg O(N*logN), max O(N^2) - 이미정렬된 경우</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">sort</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">QuickSort</span> <span class="o">{</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">print</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">//출력용</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">d</span><span class="o">&lt;</span><span class="n">num</span><span class="o">.</span><span class="na">length</span> <span class="o">;</span> <span class="n">d</span><span class="o">++)</span> <span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%4d "</span><span class="o">,</span><span class="n">num</span><span class="o">[</span><span class="n">d</span><span class="o">]);</span>
		<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>		
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">print</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">num</span><span class="o">,</span><span class="kt">int</span> <span class="n">l</span><span class="o">,</span><span class="kt">int</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">//출력용</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">num</span><span class="o">.</span><span class="na">length</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			
			<span class="nc">String</span> <span class="n">s</span> <span class="o">=</span><span class="s">""</span><span class="o">;</span>
			<span class="nc">String</span> <span class="n">e</span> <span class="o">=</span><span class="s">""</span><span class="o">;</span>
			
			<span class="k">if</span><span class="o">(</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="n">l</span> <span class="o">&amp;&amp;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">r</span><span class="o">-</span><span class="mi">1</span> <span class="o">){</span> <span class="c1">//대상 범위</span>
				<span class="n">s</span><span class="o">=</span><span class="s">"("</span><span class="o">;</span>
				<span class="n">e</span><span class="o">=</span><span class="s">")"</span><span class="o">;</span>
			<span class="o">}</span>
			<span class="k">if</span><span class="o">(</span> <span class="n">i</span> <span class="o">==</span> <span class="n">r</span> <span class="o">){</span> <span class="c1">//pivot</span>
				<span class="n">s</span><span class="o">=</span><span class="s">"["</span><span class="o">;</span>
				<span class="n">e</span><span class="o">=</span><span class="s">"]"</span><span class="o">;</span>
			<span class="o">}</span>
			
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%1s%2s%1s "</span><span class="o">,</span><span class="n">s</span><span class="o">,</span><span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">num</span><span class="o">[</span><span class="n">i</span><span class="o">]),</span><span class="n">e</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>		
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">quickSort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">num</span><span class="o">,</span> <span class="kt">int</span> <span class="n">l</span><span class="o">,</span> <span class="kt">int</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>		
		<span class="k">if</span><span class="o">(</span> <span class="n">l</span> <span class="o">&lt;</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="n">print</span><span class="o">(</span> <span class="n">num</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span> <span class="n">r</span><span class="o">);</span>
			
			<span class="kt">int</span> <span class="n">p</span> <span class="o">=</span> <span class="n">partition</span><span class="o">(</span><span class="n">num</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span> <span class="n">r</span><span class="o">);</span>			
			<span class="n">quickSort</span><span class="o">(</span><span class="n">num</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span>  <span class="n">p</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span> <span class="c1">//p 왼쪽 구간 재정렬</span>
			<span class="n">quickSort</span><span class="o">(</span><span class="n">num</span><span class="o">,</span>  <span class="n">p</span> <span class="o">+</span> <span class="mi">1</span><span class="o">,</span> <span class="n">r</span><span class="o">);</span> <span class="c1">//p 오른쪽 구간 재정렬</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="c1">//partition 함수 호출시 pivot의 위치를 확정하는 역할을 함</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">partition</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">num</span><span class="o">,</span> <span class="kt">int</span> <span class="n">l</span><span class="o">,</span> <span class="kt">int</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">pV</span> 	<span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">r</span><span class="o">];</span> <span class="c1">//제일 마지막 값을 pivot으로</span>
		<span class="kt">int</span> <span class="n">i</span>	<span class="o">=</span> <span class="n">l</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">;</span> <span class="c1">// pivot 보다 작은 수의 갯수 (-1)부터 시작</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">l</span> <span class="o">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">r</span><span class="o">-</span><span class="mi">1</span> <span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span><span class="c1">//처음부터 pivot까지 순회</span>
			<span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;=</span> <span class="n">pV</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// &lt;= 오름 차순</span>
			<span class="c1">//if(num[j] &gt; pV) { // &lt;= 내림 차순</span>
				<span class="n">i</span><span class="o">++;</span>
				<span class="n">swap</span><span class="o">(</span><span class="n">num</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="n">j</span><span class="o">);</span>
			<span class="o">}</span>			
		<span class="o">}</span><span class="c1">//end</span>
		<span class="n">swap</span><span class="o">(</span><span class="n">num</span><span class="o">,</span> <span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">),</span> <span class="n">r</span> <span class="o">);</span><span class="c1">//pivot보다 작은 수의 다음에 pivot으로 위치시킴</span>
		<span class="k">return</span> <span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">);</span><span class="c1">//pivot에 위치를 반환함.</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">swap</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">num</span><span class="o">,</span> <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">a</span><span class="o">];</span>
		<span class="n">num</span><span class="o">[</span><span class="n">a</span><span class="o">]</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">b</span><span class="o">];</span>
		<span class="n">num</span><span class="o">[</span><span class="n">b</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="c1">// 퀵 정렬의 시간 복잡도 평균 O(N*logN) 이지만, 피봇값 선택에 따라서 최악의 경우 O(N^2) 까지 출력됨.</span>
		<span class="c1">// 퀵 정렬은 분할 알고리즘(편향된 분할 가능, 이미 정렬된 배열에서는 O(N^2) 발생 가능)</span>
		<span class="c1">// avg O(N*logN), max O(N^2) </span>

		<span class="kt">int</span><span class="o">[]</span> <span class="n">num</span> <span class="o">=</span>	<span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">9</span><span class="o">};</span>
		<span class="c1">//int[] num =	{2,1,3,4,5,7};</span>
		<span class="n">quickSort</span><span class="o">(</span><span class="n">num</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">num</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"================================================="</span><span class="o">);</span>
		<span class="n">print</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>

	<span class="o">}</span>

<span class="o">}</span>


<span class="c1">// 출력 결과</span>
<span class="o">(</span> <span class="mi">1</span><span class="o">)</span> <span class="o">(</span><span class="mi">10</span><span class="o">)</span> <span class="o">(</span> <span class="mi">5</span><span class="o">)</span> <span class="o">(</span> <span class="mi">8</span><span class="o">)</span> <span class="o">(</span> <span class="mi">7</span><span class="o">)</span> <span class="o">(</span> <span class="mi">6</span><span class="o">)</span> <span class="o">(</span> <span class="mi">4</span><span class="o">)</span> <span class="o">(</span> <span class="mi">3</span><span class="o">)</span> <span class="o">(</span> <span class="mi">2</span><span class="o">)</span> <span class="o">[</span> <span class="mi">9</span><span class="o">]</span> 
<span class="o">(</span> <span class="mi">1</span><span class="o">)</span> <span class="o">(</span> <span class="mi">5</span><span class="o">)</span> <span class="o">(</span> <span class="mi">8</span><span class="o">)</span> <span class="o">(</span> <span class="mi">7</span><span class="o">)</span> <span class="o">(</span> <span class="mi">6</span><span class="o">)</span> <span class="o">(</span> <span class="mi">4</span><span class="o">)</span> <span class="o">(</span> <span class="mi">3</span><span class="o">)</span> <span class="o">[</span> <span class="mi">2</span><span class="o">]</span>   <span class="mi">9</span>   <span class="mi">10</span>  
  <span class="mi">1</span>    <span class="mi">2</span>  <span class="o">(</span> <span class="mi">8</span><span class="o">)</span> <span class="o">(</span> <span class="mi">7</span><span class="o">)</span> <span class="o">(</span> <span class="mi">6</span><span class="o">)</span> <span class="o">(</span> <span class="mi">4</span><span class="o">)</span> <span class="o">(</span> <span class="mi">3</span><span class="o">)</span> <span class="o">[</span> <span class="mi">5</span><span class="o">]</span>   <span class="mi">9</span>   <span class="mi">10</span>  
  <span class="mi">1</span>    <span class="mi">2</span>  <span class="o">(</span> <span class="mi">4</span><span class="o">)</span> <span class="o">[</span> <span class="mi">3</span><span class="o">]</span>   <span class="mi">5</span>    <span class="mi">8</span>    <span class="mi">7</span>    <span class="mi">6</span>    <span class="mi">9</span>   <span class="mi">10</span>  
  <span class="mi">1</span>    <span class="mi">2</span>    <span class="mi">3</span>    <span class="mi">4</span>    <span class="mi">5</span>  <span class="o">(</span> <span class="mi">8</span><span class="o">)</span> <span class="o">(</span> <span class="mi">7</span><span class="o">)</span> <span class="o">[</span> <span class="mi">6</span><span class="o">]</span>   <span class="mi">9</span>   <span class="mi">10</span>  
  <span class="mi">1</span>    <span class="mi">2</span>    <span class="mi">3</span>    <span class="mi">4</span>    <span class="mi">5</span>    <span class="mi">6</span>  <span class="o">(</span> <span class="mi">7</span><span class="o">)</span> <span class="o">[</span> <span class="mi">8</span><span class="o">]</span>   <span class="mi">9</span>   <span class="mi">10</span>  
<span class="o">=================================================</span>
   <span class="mi">1</span>    <span class="mi">2</span>    <span class="mi">3</span>    <span class="mi">4</span>    <span class="mi">5</span>    <span class="mi">6</span>    <span class="mi">7</span>    <span class="mi">8</span>    <span class="mi">9</span>   <span class="mi">10</span> 


</code></pre></div></div>

<h1 id="merge-sort">Merge Sort.</h1>
<p>O(N*logN) 보장, 단점 정렬시 메모리 필요함.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">sort</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MergeSort</span> <span class="o">{</span>

	<span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">new_num</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">initTemp</span><span class="o">(</span><span class="kt">int</span> <span class="n">len</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">new_num</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">len</span><span class="o">];</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">print</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">//출력용</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">d</span><span class="o">&lt;</span><span class="n">num</span><span class="o">.</span><span class="na">length</span> <span class="o">;</span> <span class="n">d</span><span class="o">++)</span> <span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%4d "</span><span class="o">,</span><span class="n">num</span><span class="o">[</span><span class="n">d</span><span class="o">]);</span>
		<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>		
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">print</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">num</span><span class="o">,</span><span class="kt">int</span> <span class="n">l</span><span class="o">,</span><span class="kt">int</span> <span class="n">m</span><span class="o">,</span><span class="kt">int</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">//출력용</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">" %d - %d - %d \t"</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span> <span class="n">m</span><span class="o">,</span> <span class="n">r</span><span class="o">);</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">num</span><span class="o">.</span><span class="na">length</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			
			<span class="nc">String</span> <span class="n">s</span> <span class="o">=</span><span class="s">""</span><span class="o">;</span>
			<span class="nc">String</span> <span class="n">e</span> <span class="o">=</span><span class="s">""</span><span class="o">;</span>
			
			<span class="k">if</span><span class="o">(</span> <span class="n">i</span> <span class="o">==</span> <span class="n">l</span> <span class="o">){</span> <span class="c1">//대상 범위 S</span>
				<span class="n">s</span><span class="o">=</span><span class="s">"("</span><span class="o">;</span>
				<span class="n">e</span><span class="o">=</span><span class="s">""</span><span class="o">;</span>
			<span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span> <span class="n">i</span> <span class="o">==</span> <span class="n">r</span> <span class="o">){</span> <span class="c1">//대상 범위 EW</span>
				<span class="n">s</span><span class="o">=</span><span class="s">""</span><span class="o">;</span>
				<span class="n">e</span><span class="o">=</span><span class="s">")"</span><span class="o">;</span>
			<span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span> <span class="n">i</span> <span class="o">==</span> <span class="n">m</span> <span class="o">){</span> <span class="c1">//중간값</span>
				<span class="n">s</span><span class="o">=</span><span class="s">"["</span><span class="o">;</span>
				<span class="n">e</span><span class="o">=</span><span class="s">"]"</span><span class="o">;</span>
			<span class="o">}</span>
			
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%1s%2s%1s "</span><span class="o">,</span><span class="n">s</span><span class="o">,</span><span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">num</span><span class="o">[</span><span class="n">i</span><span class="o">]),</span><span class="n">e</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>		
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">mergeSort</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">num</span><span class="o">,</span> <span class="kt">int</span> <span class="n">l</span><span class="o">,</span> <span class="kt">int</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>		
		<span class="k">if</span><span class="o">(</span> <span class="n">l</span> <span class="o">&lt;</span> <span class="n">r</span> <span class="o">)</span> <span class="o">{</span> <span class="c1">// 1개 이상에서</span>
			<span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="o">(</span><span class="n">l</span> <span class="o">+</span> <span class="n">r</span><span class="o">)/</span><span class="mi">2</span><span class="o">;</span> <span class="c1">// 중앙점 m을 발견</span>
			<span class="c1">//int m = l + (r - 1)/2; // 중앙점 m을 발견 (위 식과 같으나 overflow 방지)</span>
			<span class="c1">//System.out.format(" %d - %d - %d \n", l, m, r);</span>
			<span class="n">print</span><span class="o">(</span> <span class="n">num</span><span class="o">,</span><span class="n">l</span><span class="o">,</span> <span class="n">m</span> <span class="o">,</span><span class="n">r</span><span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">l</span><span class="o">==</span><span class="mi">8</span> <span class="o">&amp;&amp;</span> <span class="n">m</span><span class="o">==</span><span class="mi">8</span> <span class="o">&amp;&amp;</span> <span class="n">r</span><span class="o">==</span><span class="mi">9</span><span class="o">)</span> <span class="o">{</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="n">mergeSort</span><span class="o">(</span> <span class="n">num</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span> <span class="n">m</span><span class="o">);</span> <span class="c1">// 오른쪽 파트 정렬</span>
			<span class="n">mergeSort</span><span class="o">(</span> <span class="n">num</span><span class="o">,</span> <span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">r</span><span class="o">);</span> <span class="c1">//왼쪽 파트 정렬</span>
			<span class="n">merge</span><span class="o">(</span> <span class="n">num</span><span class="o">,</span> <span class="n">l</span><span class="o">,</span> <span class="n">m</span><span class="o">,</span> <span class="n">r</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">merge</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">num</span><span class="o">,</span> <span class="kt">int</span> <span class="n">l</span><span class="o">,</span> <span class="kt">int</span> <span class="n">m</span><span class="o">,</span> <span class="kt">int</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span>  <span class="n">l</span> <span class="o">;</span> <span class="c1">//왼쪽 시작 index지점</span>
		<span class="kt">int</span> <span class="n">j</span> <span class="o">=</span>  <span class="n">m</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span> <span class="c1">// 오른쪽 시작 지점</span>
		<span class="kt">int</span> <span class="n">k</span> <span class="o">=</span>  <span class="n">l</span><span class="o">;</span>
		
		<span class="c1">// 적을 값을 저장함.</span>
		<span class="c1">//  l[i,,,,,,]m[j,,,,,,]r</span>
		<span class="c1">//  [k,,,,,,,,,,,,]</span>
		<span class="k">while</span><span class="o">(</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">m</span> <span class="o">&amp;&amp;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">r</span><span class="o">){</span>
			<span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">&lt;=</span> <span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="o">{</span> <span class="c1">//오른쪽, 왼쪽 arrary의 첫번째 값을 비교하여 이동함</span>
				<span class="n">new_num</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
				<span class="n">i</span><span class="o">++;</span> <span class="c1">//다음 값으로 이동함</span>
			<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
				<span class="n">new_num</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
				<span class="n">j</span><span class="o">++;</span>
			<span class="o">}</span>
			<span class="n">k</span><span class="o">++;</span> <span class="c1">//저장 위치 이동</span>
		<span class="o">}</span><span class="c1">// end while</span>
		
		
		
		<span class="c1">//남은 데이터 삽입</span>
		<span class="k">if</span><span class="o">(</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="n">m</span> <span class="o">)</span> <span class="o">{</span>
			<span class="c1">//j쪽 배열만 남은 경우</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="n">j</span> <span class="o">;</span> <span class="n">t</span> <span class="o">&lt;=</span> <span class="n">r</span> <span class="o">;</span> <span class="n">t</span><span class="o">++</span> <span class="o">)</span> <span class="o">{</span>
				<span class="n">new_num</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">t</span><span class="o">];</span>
				<span class="n">k</span><span class="o">++;</span>
			<span class="o">}</span>
		<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
			<span class="c1">//i쪽 배열만 남은 경우</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="n">i</span> <span class="o">;</span> <span class="n">t</span> <span class="o">&lt;=</span> <span class="n">m</span> <span class="o">;</span> <span class="n">t</span><span class="o">++</span> <span class="o">)</span> <span class="o">{</span>
				<span class="n">new_num</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">t</span><span class="o">];</span>
				<span class="n">k</span><span class="o">++;</span>
			<span class="o">}</span>
		<span class="o">}</span>
		
		<span class="c1">//정렬된 배열을 모두 입력</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="n">l</span> <span class="o">;</span> <span class="n">t</span> <span class="o">&lt;=</span> <span class="n">r</span> <span class="o">;</span> <span class="n">t</span><span class="o">++</span> <span class="o">)</span> <span class="o">{</span>
			<span class="n">num</span><span class="o">[</span><span class="n">t</span><span class="o">]</span> <span class="o">=</span> <span class="n">new_num</span><span class="o">[</span><span class="n">t</span><span class="o">];</span>
		<span class="o">}</span>
		
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// 병합 정렬의 시간 복잡도  O(N*logN) 값 보장, </span>
		<span class="c1">// 병합 정렬은 분할 알고리즘(중간 범위 분할 알고리즘)</span>
		<span class="c1">// 반씩 나눠서 합치면서 정리함.</span>
		<span class="c1">// 병합과 재정렬을 위해서 기존 데이터를 저장할 추가적인 메모리가 필요함.(단점 메모리 비효율, 장점 N*logN 속도 보장)</span>
		
		<span class="kt">int</span><span class="o">[]</span> <span class="n">num</span> <span class="o">=</span>	<span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">9</span><span class="o">};</span>
		<span class="c1">//int[] num =	{2,1,3,4,5,7};</span>
		<span class="n">initTemp</span><span class="o">(</span><span class="n">num</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
		<span class="n">mergeSort</span><span class="o">(</span><span class="n">num</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">num</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"========================================="</span><span class="o">);</span>
		<span class="n">print</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
	<span class="o">}</span>

<span class="o">}</span>


<span class="c1">// 출력 결과</span>
 <span class="mi">0</span> <span class="o">-</span> <span class="mi">4</span> <span class="o">-</span> <span class="mi">9</span> 	<span class="o">(</span> <span class="mi">1</span>   <span class="mi">10</span>    <span class="mi">5</span>    <span class="mi">8</span>  <span class="o">[</span> <span class="mi">7</span><span class="o">]</span>   <span class="mi">6</span>    <span class="mi">4</span>    <span class="mi">3</span>    <span class="mi">2</span>    <span class="mi">9</span><span class="o">)</span> 
 <span class="mi">0</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">-</span> <span class="mi">4</span> 	<span class="o">(</span> <span class="mi">1</span>   <span class="mi">10</span>  <span class="o">[</span> <span class="mi">5</span><span class="o">]</span>   <span class="mi">8</span>    <span class="mi">7</span><span class="o">)</span>   <span class="mi">6</span>    <span class="mi">4</span>    <span class="mi">3</span>    <span class="mi">2</span>    <span class="mi">9</span>  
 <span class="mi">0</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">-</span> <span class="mi">2</span> 	<span class="o">(</span> <span class="mi">1</span>  <span class="o">[</span><span class="mi">10</span><span class="o">]</span>   <span class="mi">5</span><span class="o">)</span>   <span class="mi">8</span>    <span class="mi">7</span>    <span class="mi">6</span>    <span class="mi">4</span>    <span class="mi">3</span>    <span class="mi">2</span>    <span class="mi">9</span>  
 <span class="mi">0</span> <span class="o">-</span> <span class="mi">0</span> <span class="o">-</span> <span class="mi">1</span> 	<span class="o">(</span> <span class="mi">1</span>   <span class="mi">10</span><span class="o">)</span>   <span class="mi">5</span>    <span class="mi">8</span>    <span class="mi">7</span>    <span class="mi">6</span>    <span class="mi">4</span>    <span class="mi">3</span>    <span class="mi">2</span>    <span class="mi">9</span>  
 <span class="mi">3</span> <span class="o">-</span> <span class="mi">3</span> <span class="o">-</span> <span class="mi">4</span> 	  <span class="mi">1</span>    <span class="mi">5</span>   <span class="mi">10</span>  <span class="o">(</span> <span class="mi">8</span>    <span class="mi">7</span><span class="o">)</span>   <span class="mi">6</span>    <span class="mi">4</span>    <span class="mi">3</span>    <span class="mi">2</span>    <span class="mi">9</span>  
 <span class="mi">5</span> <span class="o">-</span> <span class="mi">7</span> <span class="o">-</span> <span class="mi">9</span> 	  <span class="mi">1</span>    <span class="mi">5</span>    <span class="mi">7</span>    <span class="mi">8</span>   <span class="mi">10</span>  <span class="o">(</span> <span class="mi">6</span>    <span class="mi">4</span>  <span class="o">[</span> <span class="mi">3</span><span class="o">]</span>   <span class="mi">2</span>    <span class="mi">9</span><span class="o">)</span> 
 <span class="mi">5</span> <span class="o">-</span> <span class="mi">6</span> <span class="o">-</span> <span class="mi">7</span> 	  <span class="mi">1</span>    <span class="mi">5</span>    <span class="mi">7</span>    <span class="mi">8</span>   <span class="mi">10</span>  <span class="o">(</span> <span class="mi">6</span>  <span class="o">[</span> <span class="mi">4</span><span class="o">]</span>   <span class="mi">3</span><span class="o">)</span>   <span class="mi">2</span>    <span class="mi">9</span>  
 <span class="mi">5</span> <span class="o">-</span> <span class="mi">5</span> <span class="o">-</span> <span class="mi">6</span> 	  <span class="mi">1</span>    <span class="mi">5</span>    <span class="mi">7</span>    <span class="mi">8</span>   <span class="mi">10</span>  <span class="o">(</span> <span class="mi">6</span>    <span class="mi">4</span><span class="o">)</span>   <span class="mi">3</span>    <span class="mi">2</span>    <span class="mi">9</span>  
 <span class="mi">8</span> <span class="o">-</span> <span class="mi">8</span> <span class="o">-</span> <span class="mi">9</span> 	  <span class="mi">1</span>    <span class="mi">5</span>    <span class="mi">7</span>    <span class="mi">8</span>   <span class="mi">10</span>    <span class="mi">3</span>    <span class="mi">4</span>    <span class="mi">6</span>  <span class="o">(</span> <span class="mi">2</span>    <span class="mi">9</span><span class="o">)</span> 
<span class="o">=========================================</span>
   <span class="mi">1</span>    <span class="mi">2</span>    <span class="mi">3</span>    <span class="mi">4</span>    <span class="mi">5</span>    <span class="mi">6</span>    <span class="mi">7</span>    <span class="mi">8</span>    <span class="mi">9</span>   <span class="mi">10</span> 

</code></pre></div></div>

<h1 id="heap-sort">Heap Sort.</h1>
<p>N/2*logN  (N이 클경우 logN은 값은 작은 값으로 결과적으로) &gt; O(N)</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">sort</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">HeapSort</span> <span class="o">{</span>

	
	<span class="c1">// Heap 완전 인트리</span>
	<span class="c1">// Min Heap 가장 작은 값이 위로 오도록</span>
	<span class="c1">// Max Heap 가장 큰 값이 위로 오도록 </span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">swap</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">num</span><span class="o">,</span> <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">debug</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">a</span><span class="o">];</span>
		<span class="n">num</span><span class="o">[</span><span class="n">a</span><span class="o">]</span> <span class="o">=</span> <span class="n">num</span><span class="o">[</span><span class="n">b</span><span class="o">];</span>
		<span class="n">num</span><span class="o">[</span><span class="n">b</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>

		<span class="k">if</span><span class="o">(</span><span class="n">debug</span><span class="o">)</span> <span class="o">{</span>
			<span class="c1">//출력용</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">d</span><span class="o">&lt;</span><span class="n">num</span><span class="o">.</span><span class="na">length</span> <span class="o">;</span> <span class="n">d</span><span class="o">++)</span> <span class="o">{</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%4d"</span><span class="o">,</span><span class="n">num</span><span class="o">[</span><span class="n">d</span><span class="o">]);</span>
			<span class="o">}</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">print</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">//출력용</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">d</span><span class="o">&lt;</span><span class="n">num</span><span class="o">.</span><span class="na">length</span> <span class="o">;</span> <span class="n">d</span><span class="o">++)</span> <span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%4d "</span><span class="o">,</span><span class="n">num</span><span class="o">[</span><span class="n">d</span><span class="o">]);</span>
		<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>		
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		
		<span class="c1">// N/2*logN  (N이 클경우 logN은 값은 작은 값으로 결과적으로) &gt; O(N)</span>
		
		<span class="c1">//int[] num =	{1, 2, 3, 4, 5, 6, 7, 8, 9 , 10};</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">num</span> <span class="o">=</span>	<span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">9</span><span class="o">};</span>
		<span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="n">num</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
		
		<span class="c1">//자료 구조를 힙 구조로 정렬함.</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span> <span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">len</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span> <span class="c1">//1부터 시작함.</span>

			<span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span> <span class="c1">//자식 위치</span>
			<span class="k">do</span> <span class="o">{</span>
				<span class="kt">int</span> <span class="n">root</span> <span class="o">=</span> <span class="o">(</span><span class="n">c</span><span class="o">-</span><span class="mi">1</span><span class="o">)/</span><span class="mi">2</span><span class="o">;</span> <span class="c1">//부모의 위치</span>
				<span class="c1">//System.out.format("%d(%d) ", i, root);</span>
				<span class="c1">//1(0) 2(0) 3(1) 4(1) 5(2) 6(2) 7(3) 8(3) 9(4) </span>
				
				<span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">[</span><span class="n">root</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">num</span><span class="o">[</span><span class="n">c</span><span class="o">]){</span> <span class="c1">//자식이 부모보다 클 경우 swap </span>
					<span class="n">swap</span><span class="o">(</span><span class="n">num</span><span class="o">,</span> <span class="n">root</span><span class="o">,</span> <span class="n">c</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
				<span class="o">}</span>
				
				<span class="n">c</span> <span class="o">=</span> <span class="n">root</span><span class="o">;</span> <span class="c1">//자식을 부모로 이동하여, 재귀로 내려감</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d  "</span><span class="o">,</span> <span class="n">c</span><span class="o">);</span>
			
			<span class="o">}</span><span class="k">while</span> <span class="o">(</span><span class="n">c</span> <span class="o">!=</span> <span class="mi">0</span> <span class="o">);</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>	
		<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"------------------------------"</span><span class="o">);</span>	
		<span class="n">print</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"------------------------------"</span><span class="o">);</span>	
		<span class="c1">//크기 축소를 줄이고 힙을 만듬</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">len</span><span class="o">-</span><span class="mi">1</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">i</span><span class="o">--)</span> <span class="o">{</span>
			<span class="n">swap</span><span class="o">(</span><span class="n">num</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span> <span class="c1">// 0번째 원소가 가장 큰값으로 가장 큰 값과 가장 작은 값을 교체함.		</span>
			
			<span class="kt">int</span> <span class="n">root</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
			<span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
			
			<span class="k">do</span> <span class="o">{</span>
				<span class="n">c</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">root</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
				<span class="c1">//자식 좌우 중에 더 큰 값을 찾기</span>
				<span class="k">if</span><span class="o">(</span><span class="n">c</span> <span class="o">&lt;</span> <span class="n">i</span><span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">num</span><span class="o">[</span><span class="n">c</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">num</span><span class="o">[</span><span class="n">c</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span> <span class="o">)</span> <span class="o">{</span>
					<span class="n">c</span><span class="o">++;</span>
				<span class="o">}</span>
				<span class="c1">//루트보다 자식이 더 크면 교환함.</span>
				<span class="k">if</span><span class="o">(</span> <span class="n">c</span> <span class="o">&lt;</span> <span class="n">i</span>  <span class="o">&amp;&amp;</span> <span class="n">num</span><span class="o">[</span><span class="n">root</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">num</span><span class="o">[</span><span class="n">c</span><span class="o">]</span> <span class="o">)</span> <span class="o">{</span>
					<span class="n">swap</span><span class="o">(</span><span class="n">num</span><span class="o">,</span> <span class="n">root</span><span class="o">,</span> <span class="n">c</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
				<span class="o">}</span>
				<span class="n">root</span> <span class="o">=</span> <span class="n">c</span><span class="o">;</span>
			<span class="o">}</span><span class="k">while</span><span class="o">(</span> <span class="n">c</span> <span class="o">&lt;</span> <span class="n">i</span> <span class="o">);</span>
		<span class="o">}</span>

		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"------------------------------"</span><span class="o">);</span>	
		<span class="n">print</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
		
	<span class="o">}</span>

<span class="o">}</span>


<span class="c1">// 출력 결과</span>
<span class="mi">0</span>  
<span class="mi">0</span>  
<span class="mi">1</span>  <span class="mi">0</span>  
<span class="mi">1</span>  <span class="mi">0</span>  
<span class="mi">2</span>  <span class="mi">0</span>  
<span class="mi">2</span>  <span class="mi">0</span>  
<span class="mi">3</span>  <span class="mi">1</span>  <span class="mi">0</span>  
<span class="mi">3</span>  <span class="mi">1</span>  <span class="mi">0</span>  
<span class="mi">4</span>  <span class="mi">1</span>  <span class="mi">0</span>  
<span class="o">------------------------------</span>
  <span class="mi">10</span>    <span class="mi">9</span>    <span class="mi">6</span>    <span class="mi">3</span>    <span class="mi">8</span>    <span class="mi">5</span>    <span class="mi">4</span>    <span class="mi">1</span>    <span class="mi">2</span>    <span class="mi">7</span> 
<span class="o">------------------------------</span>
   <span class="mi">7</span>   <span class="mi">9</span>   <span class="mi">6</span>   <span class="mi">3</span>   <span class="mi">8</span>   <span class="mi">5</span>   <span class="mi">4</span>   <span class="mi">1</span>   <span class="mi">2</span>  <span class="mi">10</span>
   <span class="mi">9</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">3</span>   <span class="mi">8</span>   <span class="mi">5</span>   <span class="mi">4</span>   <span class="mi">1</span>   <span class="mi">2</span>  <span class="mi">10</span>
   <span class="mi">9</span>   <span class="mi">8</span>   <span class="mi">6</span>   <span class="mi">3</span>   <span class="mi">7</span>   <span class="mi">5</span>   <span class="mi">4</span>   <span class="mi">1</span>   <span class="mi">2</span>  <span class="mi">10</span>
   <span class="mi">2</span>   <span class="mi">8</span>   <span class="mi">6</span>   <span class="mi">3</span>   <span class="mi">7</span>   <span class="mi">5</span>   <span class="mi">4</span>   <span class="mi">1</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">8</span>   <span class="mi">2</span>   <span class="mi">6</span>   <span class="mi">3</span>   <span class="mi">7</span>   <span class="mi">5</span>   <span class="mi">4</span>   <span class="mi">1</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">8</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">5</span>   <span class="mi">4</span>   <span class="mi">1</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">7</span>   <span class="mi">6</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">5</span>   <span class="mi">4</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">7</span>   <span class="mi">1</span>   <span class="mi">6</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">5</span>   <span class="mi">4</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">7</span>   <span class="mi">3</span>   <span class="mi">6</span>   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">5</span>   <span class="mi">4</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">6</span>   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">5</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">6</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">5</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">6</span>   <span class="mi">3</span>   <span class="mi">5</span>   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">4</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">5</span>   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">5</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">1</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">4</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">1</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">3</span>   <span class="mi">2</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">3</span>   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">2</span>   <span class="mi">1</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>   <span class="mi">4</span>   <span class="mi">5</span>   <span class="mi">6</span>   <span class="mi">7</span>   <span class="mi">8</span>   <span class="mi">9</span>  <span class="mi">10</span>
<span class="o">------------------------------</span>
   <span class="mi">1</span>    <span class="mi">2</span>    <span class="mi">3</span>    <span class="mi">4</span>    <span class="mi">5</span>    <span class="mi">6</span>    <span class="mi">7</span>    <span class="mi">8</span>    <span class="mi">9</span>   <span class="mi">10</span> 


</code></pre></div></div>

<h1 id="counting-sort">Counting Sort.</h1>
<p>O(N) 특정 범위 조건</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">sort</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CountingSort</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// 특정 범위 조건이 있는 경우 빠름, O(N)</span>

		<span class="kt">int</span> <span class="n">count</span><span class="o">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">6</span><span class="o">];</span> <span class="c1">//1~5</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">num</span> <span class="o">=</span>	 <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span>
				 <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span>
				 <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">};</span>
		<span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="n">num</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
		
		<span class="c1">//count 초기화</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">count</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">count</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> 
		<span class="o">}</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">num</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">count</span><span class="o">[</span><span class="n">num</span><span class="o">[</span><span class="n">i</span><span class="o">]]++;</span> 
		<span class="o">}</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">count</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">count</span><span class="o">[</span><span class="n">i</span><span class="o">];</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d "</span><span class="o">,</span><span class="n">i</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>	
	
	<span class="o">}</span>

<span class="o">}</span>

<span class="c1">// 출력 결과</span>
<span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">3</span> <span class="mi">3</span> <span class="mi">3</span> <span class="mi">3</span> <span class="mi">3</span> <span class="mi">3</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">4</span> <span class="mi">4</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">5</span> <span class="mi">5</span> <span class="mi">5</span> 


</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="java" /><category term="Bubble" /><category term="Selection" /><category term="Insertion" /><category term="Quick" /><category term="Merge" /><category term="Heap" /><category term="Counting" /><summary type="html"><![CDATA[정렬 함수 테스트]]></summary></entry><entry><title type="html">[Java] 순열과 조합</title><link href="https://kimjaehyun.co.kr/algorithm/java/java-nPr_nCr/" rel="alternate" type="text/html" title="[Java] 순열과 조합" /><published>2022-05-28T00:00:00-05:00</published><updated>2022-05-28T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/java/java-nPr_nCr</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/java/java-nPr_nCr/"><![CDATA[<h1 id="순열-permutation--npr-">순열 Permutation ( nPr )</h1>
<p>순열이란 서로 다른 n개중에 r개를 선택하는 경우의 수(순서 상관 있음) = <code class="language-plaintext highlighter-rouge">n! / (n-r)!</code>   <br />
<a href="https://www.acmicpc.net/problem/15649" target="_blank">백준 순열문제</a></p>

<h1 id="조합-combination--ncr-">조합 Combination ( nCr )</h1>
<p>조합이란 서로 다른 n개중에 r개를 선택하는 경우의 수(순서 상관 없음) = <code class="language-plaintext highlighter-rouge">n! / ((n-r)! * r!)</code>  <br />
<a href="https://www.acmicpc.net/problem/2407" target="_blank">백준 조합문제</a></p>

<h1 id="소스-코드">소스 코드</h1>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">testcase</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CP</span> <span class="o">{</span>
	
	<span class="c1">//순열</span>
	<span class="kt">void</span> <span class="nf">p</span> <span class="o">(</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">out</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">ck</span><span class="o">,</span> <span class="kt">int</span> <span class="n">d</span><span class="o">,</span> <span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="k">if</span><span class="o">(</span> <span class="n">d</span> <span class="o">==</span> <span class="n">r</span><span class="o">){</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">r</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>						<span class="c1">// r 만큼</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d "</span><span class="o">,</span><span class="n">out</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>		<span class="c1">//출력 out</span>
			<span class="o">}</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>
			<span class="k">return</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>			
			<span class="k">if</span><span class="o">(</span> <span class="n">ck</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">)</span> <span class="o">{</span>
				<span class="n">ck</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
				
				<span class="n">out</span><span class="o">[</span><span class="n">d</span><span class="o">]</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>						<span class="c1">// 중요</span>
				<span class="n">p</span> <span class="o">(</span> <span class="n">arr</span><span class="o">,</span> <span class="n">out</span><span class="o">,</span> <span class="n">ck</span><span class="o">,</span> <span class="n">d</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">n</span><span class="o">,</span> <span class="n">r</span><span class="o">);</span>			<span class="c1">// d+1</span>
				
				<span class="n">ck</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span><span class="c1">// end for</span>
		
	<span class="o">}</span>
	
	<span class="c1">//조합</span>
	<span class="kt">void</span> <span class="nf">c</span> <span class="o">(</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">,</span>  <span class="kt">int</span><span class="o">[]</span> <span class="n">ck</span><span class="o">,</span> <span class="kt">int</span> <span class="n">d</span><span class="o">,</span> <span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>

		<span class="k">if</span><span class="o">(</span><span class="n">r</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span> <span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>  					<span class="c1">// 시작 i &lt; n</span>
				<span class="k">if</span><span class="o">(</span><span class="n">ck</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
					<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d "</span><span class="o">,</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>		<span class="c1">//출력 arr</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>
			<span class="k">return</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">d</span> <span class="o">;</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>  				<span class="c1">// 중요 시작점 d</span>
			<span class="n">ck</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
			
			<span class="n">c</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span>  <span class="n">ck</span><span class="o">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span> <span class="o">,</span> <span class="n">n</span> <span class="o">,</span> <span class="n">r</span><span class="o">-</span><span class="mi">1</span> <span class="o">);</span> 					<span class="c1">// i+1 ,  , r-1 </span>
			
			<span class="n">ck</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="o">}</span>
		
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> 	<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">};</span>
		<span class="kt">int</span> <span class="o">[]</span> <span class="n">ck</span> 	<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
		<span class="kt">int</span> <span class="o">[]</span> <span class="n">out</span> 	<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>

		<span class="no">CP</span> <span class="n">obj</span>	<span class="o">=</span> <span class="k">new</span> <span class="no">CP</span><span class="o">();</span>
		<span class="c1">//obj.p(arr, out, ck, 0, arr.length, 5);</span>
		
		<span class="n">obj</span><span class="o">.</span><span class="na">c</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span>  <span class="n">ck</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
	<span class="o">}</span>

<span class="o">}</span>

<span class="c1">// 출력  obj.p(arr, out, ck, 0, arr.length, 5);</span>
<span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> 
<span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">4</span> 
<span class="mi">1</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">5</span> 
<span class="mi">1</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">3</span> 
<span class="mi">1</span> <span class="mi">2</span> <span class="mi">5</span> <span class="mi">3</span> <span class="mi">4</span> 
<span class="mi">1</span> <span class="mi">2</span> <span class="mi">5</span> <span class="mi">4</span> <span class="mi">3</span> 
<span class="mi">1</span> <span class="mi">3</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">5</span> 
<span class="mi">1</span> <span class="mi">3</span> <span class="mi">2</span> <span class="mi">5</span> <span class="mi">4</span> 
<span class="mi">1</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">2</span> <span class="mi">5</span> 
<span class="mi">1</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">2</span> 
<span class="mi">1</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">2</span> <span class="mi">4</span> 
<span class="mi">1</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">4</span> <span class="mi">2</span> 
<span class="mi">1</span> <span class="mi">4</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">5</span> 
<span class="mi">1</span> <span class="mi">4</span> <span class="mi">2</span> <span class="mi">5</span> <span class="mi">3</span> 
<span class="mi">1</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">2</span> <span class="mi">5</span> 
<span class="mi">1</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">2</span> 
<span class="mi">1</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">2</span> <span class="mi">3</span> 
<span class="mi">1</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">3</span> <span class="mi">2</span> 
<span class="mi">1</span> <span class="mi">5</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> 
<span class="mi">1</span> <span class="mi">5</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">3</span> 
<span class="mi">1</span> <span class="mi">5</span> <span class="mi">3</span> <span class="mi">2</span> <span class="mi">4</span> 
<span class="mi">1</span> <span class="mi">5</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">2</span> 
<span class="mi">1</span> <span class="mi">5</span> <span class="mi">4</span> <span class="mi">2</span> <span class="mi">3</span> 
<span class="mi">1</span> <span class="mi">5</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">2</span> 
<span class="mi">2</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> 
<span class="mi">2</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">4</span> 
<span class="mi">2</span> <span class="mi">1</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">5</span> 
<span class="mi">2</span> <span class="mi">1</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">3</span> 
<span class="mi">2</span> <span class="mi">1</span> <span class="mi">5</span> <span class="mi">3</span> <span class="mi">4</span> 
<span class="mi">2</span> <span class="mi">1</span> <span class="mi">5</span> <span class="mi">4</span> <span class="mi">3</span> 
<span class="mi">2</span> <span class="mi">3</span> <span class="mi">1</span> <span class="mi">4</span> <span class="mi">5</span> 
<span class="mi">2</span> <span class="mi">3</span> <span class="mi">1</span> <span class="mi">5</span> <span class="mi">4</span> 
<span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">1</span> <span class="mi">5</span> 
<span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">1</span> 
<span class="mi">2</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">1</span> <span class="mi">4</span> 
<span class="mi">2</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">4</span> <span class="mi">1</span> 
<span class="mi">2</span> <span class="mi">4</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">5</span> 
<span class="mi">2</span> <span class="mi">4</span> <span class="mi">1</span> <span class="mi">5</span> <span class="mi">3</span> 
<span class="mi">2</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">1</span> <span class="mi">5</span> 
<span class="mi">2</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">1</span> 
<span class="mi">2</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">1</span> <span class="mi">3</span> 
<span class="mi">2</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">3</span> <span class="mi">1</span> 
<span class="mi">2</span> <span class="mi">5</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">4</span> 
<span class="mi">2</span> <span class="mi">5</span> <span class="mi">1</span> <span class="mi">4</span> <span class="mi">3</span> 
<span class="mi">2</span> <span class="mi">5</span> <span class="mi">3</span> <span class="mi">1</span> <span class="mi">4</span> 
<span class="mi">2</span> <span class="mi">5</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">1</span> 
<span class="mi">2</span> <span class="mi">5</span> <span class="mi">4</span> <span class="mi">1</span> <span class="mi">3</span> 
<span class="mi">2</span> <span class="mi">5</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">1</span> 
<span class="mi">3</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">5</span> 
<span class="mi">3</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">5</span> <span class="mi">4</span> 
<span class="mi">3</span> <span class="mi">1</span> <span class="mi">4</span> <span class="mi">2</span> <span class="mi">5</span> 
<span class="mi">3</span> <span class="mi">1</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">2</span> 
<span class="mi">3</span> <span class="mi">1</span> <span class="mi">5</span> <span class="mi">2</span> <span class="mi">4</span> 
<span class="mi">3</span> <span class="mi">1</span> <span class="mi">5</span> <span class="mi">4</span> <span class="mi">2</span> 
<span class="mi">3</span> <span class="mi">2</span> <span class="mi">1</span> <span class="mi">4</span> <span class="mi">5</span> 
<span class="mi">3</span> <span class="mi">2</span> <span class="mi">1</span> <span class="mi">5</span> <span class="mi">4</span> 
<span class="mi">3</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">1</span> <span class="mi">5</span> 
<span class="mi">3</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">1</span> 
<span class="mi">3</span> <span class="mi">2</span> <span class="mi">5</span> <span class="mi">1</span> <span class="mi">4</span> 
<span class="mi">3</span> <span class="mi">2</span> <span class="mi">5</span> <span class="mi">4</span> <span class="mi">1</span> 
<span class="mi">3</span> <span class="mi">4</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">5</span> 
<span class="mi">3</span> <span class="mi">4</span> <span class="mi">1</span> <span class="mi">5</span> <span class="mi">2</span> 
<span class="mi">3</span> <span class="mi">4</span> <span class="mi">2</span> <span class="mi">1</span> <span class="mi">5</span> 
<span class="mi">3</span> <span class="mi">4</span> <span class="mi">2</span> <span class="mi">5</span> <span class="mi">1</span> 
<span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">1</span> <span class="mi">2</span> 
<span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">2</span> <span class="mi">1</span> 
<span class="mi">3</span> <span class="mi">5</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">4</span> 
<span class="mi">3</span> <span class="mi">5</span> <span class="mi">1</span> <span class="mi">4</span> <span class="mi">2</span> 
<span class="mi">3</span> <span class="mi">5</span> <span class="mi">2</span> <span class="mi">1</span> <span class="mi">4</span> 
<span class="mi">3</span> <span class="mi">5</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">1</span> 
<span class="mi">3</span> <span class="mi">5</span> <span class="mi">4</span> <span class="mi">1</span> <span class="mi">2</span> 
<span class="mi">3</span> <span class="mi">5</span> <span class="mi">4</span> <span class="mi">2</span> <span class="mi">1</span> 
<span class="mi">4</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">5</span> 
<span class="mi">4</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">5</span> <span class="mi">3</span> 
<span class="mi">4</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">2</span> <span class="mi">5</span> 
<span class="mi">4</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">2</span> 
<span class="mi">4</span> <span class="mi">1</span> <span class="mi">5</span> <span class="mi">2</span> <span class="mi">3</span> 
<span class="mi">4</span> <span class="mi">1</span> <span class="mi">5</span> <span class="mi">3</span> <span class="mi">2</span> 
<span class="mi">4</span> <span class="mi">2</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">5</span> 
<span class="mi">4</span> <span class="mi">2</span> <span class="mi">1</span> <span class="mi">5</span> <span class="mi">3</span> 
<span class="mi">4</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">1</span> <span class="mi">5</span> 
<span class="mi">4</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">1</span> 
<span class="mi">4</span> <span class="mi">2</span> <span class="mi">5</span> <span class="mi">1</span> <span class="mi">3</span> 
<span class="mi">4</span> <span class="mi">2</span> <span class="mi">5</span> <span class="mi">3</span> <span class="mi">1</span> 
<span class="mi">4</span> <span class="mi">3</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">5</span> 
<span class="mi">4</span> <span class="mi">3</span> <span class="mi">1</span> <span class="mi">5</span> <span class="mi">2</span> 
<span class="mi">4</span> <span class="mi">3</span> <span class="mi">2</span> <span class="mi">1</span> <span class="mi">5</span> 
<span class="mi">4</span> <span class="mi">3</span> <span class="mi">2</span> <span class="mi">5</span> <span class="mi">1</span> 
<span class="mi">4</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">1</span> <span class="mi">2</span> 
<span class="mi">4</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">2</span> <span class="mi">1</span> 
<span class="mi">4</span> <span class="mi">5</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> 
<span class="mi">4</span> <span class="mi">5</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">2</span> 
<span class="mi">4</span> <span class="mi">5</span> <span class="mi">2</span> <span class="mi">1</span> <span class="mi">3</span> 
<span class="mi">4</span> <span class="mi">5</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">1</span> 
<span class="mi">4</span> <span class="mi">5</span> <span class="mi">3</span> <span class="mi">1</span> <span class="mi">2</span> 
<span class="mi">4</span> <span class="mi">5</span> <span class="mi">3</span> <span class="mi">2</span> <span class="mi">1</span> 
<span class="mi">5</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> 
<span class="mi">5</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">3</span> 
<span class="mi">5</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">2</span> <span class="mi">4</span> 
<span class="mi">5</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">2</span> 
<span class="mi">5</span> <span class="mi">1</span> <span class="mi">4</span> <span class="mi">2</span> <span class="mi">3</span> 
<span class="mi">5</span> <span class="mi">1</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">2</span> 
<span class="mi">5</span> <span class="mi">2</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">4</span> 
<span class="mi">5</span> <span class="mi">2</span> <span class="mi">1</span> <span class="mi">4</span> <span class="mi">3</span> 
<span class="mi">5</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">1</span> <span class="mi">4</span> 
<span class="mi">5</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">1</span> 
<span class="mi">5</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">1</span> <span class="mi">3</span> 
<span class="mi">5</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">1</span> 
<span class="mi">5</span> <span class="mi">3</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">4</span> 
<span class="mi">5</span> <span class="mi">3</span> <span class="mi">1</span> <span class="mi">4</span> <span class="mi">2</span> 
<span class="mi">5</span> <span class="mi">3</span> <span class="mi">2</span> <span class="mi">1</span> <span class="mi">4</span> 
<span class="mi">5</span> <span class="mi">3</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">1</span> 
<span class="mi">5</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">1</span> <span class="mi">2</span> 
<span class="mi">5</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">2</span> <span class="mi">1</span> 
<span class="mi">5</span> <span class="mi">4</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> 
<span class="mi">5</span> <span class="mi">4</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">2</span> 
<span class="mi">5</span> <span class="mi">4</span> <span class="mi">2</span> <span class="mi">1</span> <span class="mi">3</span> 
<span class="mi">5</span> <span class="mi">4</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">1</span> 
<span class="mi">5</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">1</span> <span class="mi">2</span> 
<span class="mi">5</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">2</span> <span class="mi">1</span> 


<span class="c1">// 출력 obj.c(arr,  ck, 0, arr.length, 3);</span>
<span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> 
<span class="mi">1</span> <span class="mi">2</span> <span class="mi">4</span> 
<span class="mi">1</span> <span class="mi">2</span> <span class="mi">5</span> 
<span class="mi">1</span> <span class="mi">3</span> <span class="mi">4</span> 
<span class="mi">1</span> <span class="mi">3</span> <span class="mi">5</span> 
<span class="mi">1</span> <span class="mi">4</span> <span class="mi">5</span> 
<span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> 
<span class="mi">2</span> <span class="mi">3</span> <span class="mi">5</span> 
<span class="mi">2</span> <span class="mi">4</span> <span class="mi">5</span> 
<span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> 


</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="java" /><category term="nPr" /><category term="nCr" /><category term="순열" /><category term="조합" /><category term="Permutation. Combination" /><summary type="html"><![CDATA[순열 Permutation ( nPr ) 순열이란 서로 다른 n개중에 r개를 선택하는 경우의 수(순서 상관 있음) = n! / (n-r)! 백준 순열문제]]></summary></entry><entry><title type="html">[알고리즘] 어떤 종류들이 있는지?</title><link href="https://kimjaehyun.co.kr/algorithm/algorithm-index/" rel="alternate" type="text/html" title="[알고리즘] 어떤 종류들이 있는지?" /><published>2022-05-28T00:00:00-05:00</published><updated>2022-05-28T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/algorithm-index</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/algorithm-index/"><![CDATA[<p>어떤 알고리즘이 있고, 어떤 때 쓰는지를 정리해보려는 목적 입니다.</p>

<p>정리하려고  알게된 몇가지 사실은 9세기 페르시아의 수학자인  <br />
무하마드 알콰리즈미 의 이름을 라틴어화한 algorismus 에서 유래 되었답니다.     <br />
<img src="\assets/images_post/algorithm/algorithm_muhamad.png" alt="무함마드 이븐 무사 알콰리즈미" width="200px" /></p>

<p>위키백과의 알고리즘 정의를 보면   <br />
수학과 컴퓨터 과학, 언어학 또는 관련 분야에서  <br />
어떠한 문제를 해결하기 위해 정해진  <br />
일련의 절차나 방법을 공식화한 형태로 표현한 것.</p>

<p>정리 시작!!!</p>

<h1 id="정렬-방식">정렬 방식</h1>
<ul>
  <li>Bubble Sort.			O(N^2)</li>
  <li>Selection Sort.		O(N^2)</li>
  <li>Insertion Sort.		O(N^2)</li>
  <li>Quick Sort.			avg O(N*logN), max O(N^2) - 이미정렬된 경우</li>
  <li>Merge Sort.			O(N*logN) 보장, 단점 정렬시 메모리 필요함.</li>
  <li>Heap Sort.			N/2*logN  (N이 클경우 logN은 값은 작은 값으로 결과적으로) &gt; O(N)</li>
  <li>
    <p>Counting Sort.		O(N) 특정 범위 조건</p>
  </li>
  <li>조건별 정리 : 위상정리 TopologySort  (임계 경로 찾기, 임계경로란 갈수있는 길의 최대 값)</li>
</ul>

<h1 id="최단경로-문제">최단경로 문제</h1>
<ul>
  <li>다익스트라 알고리즘 (특정 시작점에서 모든 지점에 최소점을 구할때)</li>
  <li>플로이드 마샬(모든 정점’에서 ‘모든 정점’으로의 최단 경로를 구할때)</li>
</ul>

<h1 id="최소-신장-트리">최소 신장 트리</h1>
<p>정의 (Node와 Node-1의 간선으로 이루어짐) - UnionFind</p>
<ul>
  <li>프림 알고리즘 (Prim)</li>
  <li>크루스칼 알고리즘(Kruskal)</li>
  <li>MST(Minimum Spanning Tree)</li>
</ul>

<h1 id="글자-검색">글자 검색</h1>
<ul>
  <li>KMP</li>
  <li>라빈카프</li>
</ul>

<h1 id="이진-트리">이진 트리</h1>
<ul>
  <li>전위 순회(Preorder Traversal)		(부) - L - R</li>
  <li>중위 순회(Inorder Traversal)		L - (부) - R</li>
  <li>후위 순회(Postorder Traversal)	L - R - (부)</li>
</ul>

<h1 id="그래프-검색">그래프 검색</h1>
<ul>
  <li>DFS (Stack)</li>
  <li>BFS (Queue)</li>
</ul>

<h1 id="동일-부모-검색">동일 부모 검색</h1>
<ul>
  <li>Union Find</li>
</ul>

<h1 id="최대-유량-문제네트워크-선로-지연우회-관련">최대 유량 문제(네트워크 선로 지연/우회 관련)</h1>
<ul>
  <li>NetworkFlow (BSF)</li>
</ul>

<h1 id="백트래킹">백트래킹</h1>
<ul>
  <li>조합, 순열 관련시</li>
</ul>

<h1 id="floodfill-기법">FloodFill 기법</h1>
<ul>
  <li>좌표중에 덩어리의 묶음을 찾는 방법 (*DFS, BSF)</li>
</ul>

<h1 id="bfs-검색시">BFS 검색시</h1>
<ul>
  <li>가중치가 동일한 경우 중복을 미허용시키고</li>
  <li>가중치가 다른 경우 중복방문을 허용하여 값을 overide함</li>
</ul>

<h1 id="최소-범위-검색">최소 범위 검색</h1>
<ul>
  <li>슬라이딩 윈도우 기법 (s, e를 이동하여 최소 범위 검색)</li>
</ul>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="Bubble" /><category term="Selection" /><category term="Insertion" /><category term="Quick" /><category term="Merge" /><category term="Heap" /><category term="Counting" /><category term="다익스트라" /><category term="플로이드마샬" /><category term="크루스칼" /><category term="프림" /><category term="KMP" /><category term="이진트리" /><category term="BFS" /><category term="DFS" /><summary type="html"><![CDATA[어떤 알고리즘이 있고, 어떤 때 쓰는지를 정리해보려는 목적 입니다.]]></summary></entry></feed>