<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://kimjaehyun.co.kr/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kimjaehyun.co.kr/" rel="alternate" type="text/html" /><updated>2022-07-08T03:27:15-05:00</updated><id>https://kimjaehyun.co.kr/feed.xml</id><title type="html">꿰보노트</title><subtitle>프로그래밍과 소프트웨어 정보 및 클라우드 개발에 대한 정보를 공유하는 블로그 입니다. 꿰보노트 / 꿰보Note / 꿰어야 보배</subtitle><author><name>devjaedol</name></author><entry><title type="html">[문제 유형 분석]키순서 랜덤 배열에 앞사람 보기 찾기</title><link href="https://kimjaehyun.co.kr/codingtest/Qtype-stack-sort-count/" rel="alternate" type="text/html" title="[문제 유형 분석]키순서 랜덤 배열에 앞사람 보기 찾기" /><published>2022-07-08T00:00:00-05:00</published><updated>2022-07-08T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/codingtest/Qtype-stack-sort-count</id><content type="html" xml:base="https://kimjaehyun.co.kr/codingtest/Qtype-stack-sort-count/"><![CDATA[<h1 id="문제-조건">문제 조건</h1>
<p>N 명의 사람이 다른 키를 가지로 일렬로 배치 합니다.  <br />
키가 높은 사람은 앞사람이 본인 보다 작은 경우 내려 볼수 있습니다.  <br />
랜덤으로 배치된 사람이 내려다 볼수 있는 사람의 총합을 구하시요.  <br />
조건 : 내려다 보는 방향은 순서대로 (오른쪽-&gt; 왼쪽) 한방향만 가능합니다.</p>

<p>예를 들어 아래 키의 순서로 N개의 배열이 제공될 때.  <br />
[0] index의 <code class="language-plaintext highlighter-rouge">170</code> 은 [1]<code class="language-plaintext highlighter-rouge">150</code> 은 내려다 볼수 있어서 1명을 내려다 볼수 있습니다.  <br />
[1] index의 <code class="language-plaintext highlighter-rouge">150</code> 은 [2]<code class="language-plaintext highlighter-rouge">180</code> 이 더 높으므로 내려다 볼수 없음.  <br />
[2] index의 <code class="language-plaintext highlighter-rouge">180</code> 은 [3]<code class="language-plaintext highlighter-rouge">170</code>, [4]<code class="language-plaintext highlighter-rouge">160</code> 은 내려다 볼수 있어서 2명을 내려다 볼수 있습니다.   <br />
[3] index의 <code class="language-plaintext highlighter-rouge">170</code> 은 [4]<code class="language-plaintext highlighter-rouge">160</code> 은 내려다 볼수 있어서 1명을 내려다 볼수 있습니다.    <br />
[4] index의 <code class="language-plaintext highlighter-rouge">160</code> 은 [5]<code class="language-plaintext highlighter-rouge">190</code> 이 더 높으므로 내려다 볼수 없음.  <br />
[5] index의 <code class="language-plaintext highlighter-rouge">190</code> 은 마지막으로 내려다 볼 대상이 없음.  <br />
각 단계가 볼수 있는 총합은 4 입니다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">[</span> <span class="mi">170</span><span class="o">,</span> <span class="mi">150</span> <span class="o">,</span> <span class="mi">180</span><span class="o">,</span> <span class="mi">170</span><span class="o">,</span> <span class="mi">160</span><span class="o">,</span> <span class="mi">190</span><span class="o">]</span>

<span class="o">[</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mi">4</span>
</code></pre></div></div>
<p>그림으로 그리면 높이 순서는 다음과 같다. (참고용)</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>170 ■■■■■■■     (1 개 앞이 보임)
150 ■■■■■       (0 개)
180 ■■■■■■■■    (2 개)
170 ■■■■■■■     (1 개)
160 ■■■■■■      (0 개)
190 ■■■■■■■■■   (0 개)

</code></pre></div></div>

<p>위 문제는 2중 for으로 풀면 로직은 간단히 해결 할 수 있습니다.  <br />
그러나, 시간 복잡도가 O(N^2)으로 N의 행렬이 높아질때 성능이 저하되는 문제를 가지고 있습니다. <br />
O(N) 의 시간 복잡도로 해결하는 방법을 찾는 것을 묻는 문제 입니다.</p>

<p>stack 자료형을 이용 합니다. (입력 값보다 높은 항목만 유지하는 정책)</p>

<h1 id="접근-방법">접근 방법</h1>
<ol>
  <li>[0] index의 <code class="language-plaintext highlighter-rouge">170</code> stack에 입력
    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>|       |
|       |
|       |
|       |
|  170  |
---------
</code></pre></div>    </div>
  </li>
  <li>[1] index의 <code class="language-plaintext highlighter-rouge">150</code> stack에 입력 시 stack에 마지막 값(peek) <code class="language-plaintext highlighter-rouge">170</code> 값이 큰값으로, stack의 item을 모두 count ( 1개 <code class="language-plaintext highlighter-rouge">170</code>)
    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>|       |
|       |
|       |
|  150  |
|  170  |
---------
</code></pre></div>    </div>
  </li>
  <li>[2] index의 <code class="language-plaintext highlighter-rouge">180</code> stack에 입력 시 stack에 마지막 값(peek) <code class="language-plaintext highlighter-rouge">150</code> 값이 작은 값은 모두 pop하고 큰값 존재할 경우에는  stack의 item을 모두 count ( 0개)
    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>|       |
|       |
|       |
|       |
|  180  |
---------
</code></pre></div>    </div>
  </li>
  <li>[3] index의 <code class="language-plaintext highlighter-rouge">170</code> stack에 입력 시 stack에 마지막 값(peek) <code class="language-plaintext highlighter-rouge">180</code> 값이 큰값으로, stack의 item을 모두 count ( 1개 <code class="language-plaintext highlighter-rouge">180</code>)
    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>|       |
|       |
|       |
|  170  |
|  180  |
---------
</code></pre></div>    </div>
  </li>
  <li>[4] index의 <code class="language-plaintext highlighter-rouge">160</code> stack에 입력 시 stack에 마지막 값(peek) <code class="language-plaintext highlighter-rouge">170</code> 값이 큰값으로, stack의 item을 모두 count ( 2개 <code class="language-plaintext highlighter-rouge">170, 180</code>)
    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>|       |
|       |
|  160  |
|  170  |
|  180  |
---------
</code></pre></div>    </div>
  </li>
  <li>[5] index의 <code class="language-plaintext highlighter-rouge">190</code> stack에 입력 시 stack에 마지막 값(peek) <code class="language-plaintext highlighter-rouge">160</code> 값이 작은 값으로 모두 pop시킴, stack의 item을 모두 count ( 0개 )
    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>|       |
|       |
|       |
|       |
|  190  |
---------
</code></pre></div>    </div>
  </li>
</ol>

<p>약간의 아이디어가 필요한 문제 입니다.  <br />
특히, 본 문제의 변형 형태로 나오는 문제가 많으며 <code class="language-plaintext highlighter-rouge">stack</code> 자료형의 <code class="language-plaintext highlighter-rouge">FILO</code> 특성을 생각하면 될 것 같습니다.</p>]]></content><author><name>devjaedol</name></author><category term="codingtest" /><category term="문자열 구문 분석" /><category term="stack" /><category term="FILO" /><summary type="html"><![CDATA[문제 조건 N 명의 사람이 다른 키를 가지로 일렬로 배치 합니다. 키가 높은 사람은 앞사람이 본인 보다 작은 경우 내려 볼수 있습니다. 랜덤으로 배치된 사람이 내려다 볼수 있는 사람의 총합을 구하시요. 조건 : 내려다 보는 방향은 순서대로 (오른쪽-&gt; 왼쪽) 한방향만 가능합니다.]]></summary></entry><entry><title type="html">[Python][Numpy] file Input and output</title><link href="https://kimjaehyun.co.kr/python/python_study_numpy_04_file/" rel="alternate" type="text/html" title="[Python][Numpy] file Input and output" /><published>2022-06-26T00:00:00-05:00</published><updated>2022-06-26T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_study_numpy_04_file</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_study_numpy_04_file/"><![CDATA[<p>numpy를 통해서 파일에 데이터를 읽고/쓰기를 진행 합니다. <br />
<a href="https://numpy.org/doc/stable/reference/routines.io.html" target="_blank">Input and output API 참조</a></p>

<h1 id="텍스트-파일-txt-csv">텍스트 파일 (txt, csv)</h1>
<h2 id="numpysavetxt">numpy.savetxt</h2>
<p>텍스트 파일을 저장 합니다. <br />
<code class="language-plaintext highlighter-rouge">numpy.savetxt(fname, X, fmt='%.18e', delimiter=' ', newline='\n', header='', footer='', comments='# ', encoding=None)</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.savetxt.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">t</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
<span class="c1"># [[6 5 4 1 1]
#  [9 8 3 9 8]
#  [9 7 7 4 9]
#  [6 4 9 5 7]
#  [5 7 4 9 9]]
</span>
<span class="n">np</span><span class="p">.</span><span class="n">savetxt</span><span class="p">(</span><span class="s">"t1.csv"</span><span class="p">,</span> <span class="n">t</span><span class="p">)</span>
<span class="n">np</span><span class="p">.</span><span class="n">savetxt</span><span class="p">(</span><span class="s">"t2.csv"</span><span class="p">,</span> <span class="n">t</span><span class="p">,</span> <span class="n">delimiter</span><span class="o">=</span><span class="s">','</span><span class="p">)</span>
<span class="n">np</span><span class="p">.</span><span class="n">savetxt</span><span class="p">(</span><span class="s">"t3.csv"</span><span class="p">,</span> <span class="n">t</span><span class="p">,</span> <span class="n">delimiter</span><span class="o">=</span><span class="s">','</span><span class="p">,</span> <span class="n">fmt</span><span class="o">=</span><span class="s">'%.2e'</span><span class="p">,</span> <span class="n">header</span><span class="o">=</span><span class="s">'c1,c2,c3,c4,c5'</span><span class="p">)</span>  <span class="c1">#소수점 포멧
</span></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">[t1.csv File]</code></p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>6.000000000000000000e+00 5.000000000000000000e+00 4.000000000000000000e+00 1.000000000000000000e+00 1.000000000000000000e+00
9.000000000000000000e+00 8.000000000000000000e+00 3.000000000000000000e+00 9.000000000000000000e+00 8.000000000000000000e+00
9.000000000000000000e+00 7.000000000000000000e+00 7.000000000000000000e+00 4.000000000000000000e+00 9.000000000000000000e+00
6.000000000000000000e+00 4.000000000000000000e+00 9.000000000000000000e+00 5.000000000000000000e+00 7.000000000000000000e+00
5.000000000000000000e+00 7.000000000000000000e+00 4.000000000000000000e+00 9.000000000000000000e+00 9.000000000000000000e+00
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">[t2.csv File]</code></p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>6.000000000000000000e+00,5.000000000000000000e+00,4.000000000000000000e+00,1.000000000000000000e+00,1.000000000000000000e+00
9.000000000000000000e+00,8.000000000000000000e+00,3.000000000000000000e+00,9.000000000000000000e+00,8.000000000000000000e+00
9.000000000000000000e+00,7.000000000000000000e+00,7.000000000000000000e+00,4.000000000000000000e+00,9.000000000000000000e+00
6.000000000000000000e+00,4.000000000000000000e+00,9.000000000000000000e+00,5.000000000000000000e+00,7.000000000000000000e+00
5.000000000000000000e+00,7.000000000000000000e+00,4.000000000000000000e+00,9.000000000000000000e+00,9.000000000000000000e+00
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">[t3.csv File]</code></p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code># c1,c2,c3,c4,c5
6.00e+00,5.00e+00,4.00e+00,1.00e+00,1.00e+00
9.00e+00,8.00e+00,3.00e+00,9.00e+00,8.00e+00
9.00e+00,7.00e+00,7.00e+00,4.00e+00,9.00e+00
6.00e+00,4.00e+00,9.00e+00,5.00e+00,7.00e+00
5.00e+00,7.00e+00,4.00e+00,9.00e+00,9.00e+00
</code></pre></div></div>

<h2 id="numpyloadtxt">numpy.loadtxt</h2>
<p>텍스트 파일을 조회 합니다.  <br />
<code class="language-plaintext highlighter-rouge">numpy.loadtxt(fname, dtype=&lt;class 'float'&gt;, comments='#', delimiter=None, converters=None, skiprows=0, usecols=None, unpack=False, ndmin=0, encoding='bytes', max_rows=None, *, quotechar=None, like=None)[source]</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.loadtxt.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">csv1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">loadtxt</span><span class="p">(</span><span class="s">"t1.csv"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">csv1</span><span class="p">)</span>

<span class="n">csv2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">loadtxt</span><span class="p">(</span><span class="s">"t2.csv"</span><span class="p">,</span> <span class="n">delimiter</span><span class="o">=</span><span class="s">','</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">csv2</span><span class="p">)</span>

<span class="n">csv3</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">loadtxt</span><span class="p">(</span><span class="s">"t3.csv"</span><span class="p">,</span> <span class="n">delimiter</span><span class="o">=</span><span class="s">','</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">csv3</span><span class="p">)</span>

<span class="c1"># 조회 결과
# [[6. 5. 4. 1. 1.]
#  [9. 8. 3. 9. 8.]
#  [9. 7. 7. 4. 9.]
#  [6. 4. 9. 5. 7.]
#  [5. 7. 4. 9. 9.]]
</span>
</code></pre></div></div>

<h1 id="numpy-이진-파일-npy-npz">NumPy 이진 파일 (NPY, NPZ)</h1>
<p><code class="language-plaintext highlighter-rouge">NPY</code>, <code class="language-plaintext highlighter-rouge">NPZ</code> 는 NumPy의 데이터를 저장하는 Binary 형태의 데이터 입니다.  <br />
 1개의 ndarray를, . npz 는 여러개의 ndarray를 저장하는 데 사용 됩니다.</p>

<h2 id="numpysave-npy">numpy.save (npy)</h2>
<p>한개의 데이터를 Binary 파일로 저장 합니다. <br />
<code class="language-plaintext highlighter-rouge">numpy.save(file, arr, allow_pickle=True, fix_imports=True)[source]</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.save.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">t</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
<span class="c1"># [[4 1 8 3 5]
#  [2 7 2 8 6]
#  [9 9 1 8 7]
#  [8 2 4 5 1]
#  [4 9 7 1 2]]
</span>
<span class="n">np</span><span class="p">.</span><span class="n">save</span><span class="p">(</span><span class="s">"sample"</span><span class="p">,</span> <span class="n">t</span><span class="p">)</span>    <span class="c1"># sample.npy 이 생성됨. binary 형태
</span></code></pre></div></div>

<h2 id="numpysavez-npz">numpy.savez (npz)</h2>
<p>여러 데이터를 Binary 파일로 저장 합니다. <br />
<code class="language-plaintext highlighter-rouge">numpy.savez(file, *args, **kwds)[source]</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.savez.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">t1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="n">t2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="n">np</span><span class="p">.</span><span class="n">savez</span><span class="p">(</span><span class="s">"sample2"</span><span class="p">,</span> <span class="n">t1</span><span class="p">,</span> <span class="n">t2</span><span class="p">)</span>  <span class="c1"># sample2.npz 이 생성됨. binary 형태
</span>
<span class="c1"># 데이터의 이름을 부여하고 저장하기
</span><span class="n">t1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="n">t2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="n">np</span><span class="p">.</span><span class="n">savez</span><span class="p">(</span><span class="s">"sample2"</span><span class="p">,</span> <span class="n">c1</span><span class="o">=</span><span class="n">t1</span><span class="p">,</span> <span class="n">c2</span><span class="o">=</span><span class="n">t2</span><span class="p">)</span>    <span class="c1">#c1, c2로 이름을 부여함
</span>
</code></pre></div></div>

<h2 id="numpyload">numpy.load</h2>
<p>저장된 데이터를 조회 합니다.   <br />
<code class="language-plaintext highlighter-rouge">numpy.load(file, mmap_mode=None, allow_pickle=False, fix_imports=True, encoding='ASCII')</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.load.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># npy 조회
</span><span class="n">t</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="s">"sample.npy"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>

<span class="c1"># npz 조회
</span><span class="n">data</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="s">"sample2.npz"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">.</span><span class="n">files</span><span class="p">)</span>
<span class="c1"># ['arr_0', 'arr_1']
</span>
<span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="s">'arr_0'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="s">'arr_1'</span><span class="p">])</span>

<span class="k">with</span> <span class="n">load</span><span class="p">(</span><span class="s">'sample2.npz'</span><span class="p">)</span> <span class="k">as</span> <span class="n">data</span><span class="p">:</span>
    <span class="n">t1</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s">'arr_0'</span><span class="p">]</span>
    <span class="n">t2</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s">'arr_1'</span><span class="p">]</span>

<span class="c1"># np.savez("sample2", c1=t1, c2=t2) 와 같이 이름을 부여하면, arr_0..N  이 이름으로 조회 가능합니다. 
</span></code></pre></div></div>

<p><a href="https://www.youtube.com/watch?v=mirZPrWwvao" target="_blank">학습 내용 참고처</a></p>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-python-basic)</span></p>
<ul>

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_10_package/">[Python Basic] 모듈 만들기, 패키지 만들기</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_09_exception/">[Python Basic] 예외처리</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_08_class/">[Python Basic] Class</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_07_function/">[Python Basic] 함수</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_06_set/">[Python Basic] 자료형 set 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_05_dictionary/">[Python Basic] 자료형 dictionary 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_04_tuple/">[Python Basic] 자료형 tuple 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_03_list/">[Python Basic] 자료형 list 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_02_init/">[Python Basic] 기본 자료 및 조건문</a></li>
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_01_install/">[Python Basic] 설치</a></li>
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="python강좌" /><category term="lecture-python-numpy" /><category term="numpy" /><summary type="html"><![CDATA[numpy를 통해서 파일에 데이터를 읽고/쓰기를 진행 합니다. Input and output API 참조]]></summary></entry><entry><title type="html">[Python][Numpy] 배열 연산(Array operations)</title><link href="https://kimjaehyun.co.kr/python/python_study_numpy_03_operations/" rel="alternate" type="text/html" title="[Python][Numpy] 배열 연산(Array operations)" /><published>2022-06-25T00:00:00-05:00</published><updated>2022-06-25T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_study_numpy_03_operations</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_study_numpy_03_operations/"><![CDATA[<p>nparray의 연산에 대해서 알아보겠습니다. <br />
mathematical function 메뉴에는 다양한 수학 관련 numpy 함수가 제공 되고 있으니 참고 바랍니다. <br />
<a href="https://numpy.org/doc/stable/reference/routines.math.html" target="_blank">API 참조</a></p>

<h1 id="numpy-operations">numpy operations</h1>
<h2 id="브로드캐스팅">브로드캐스팅</h2>
<p>nparray를 연산 하는 과정에서 부족한 배열 부분을 이전 배열의 패턴으로 채워서 연산되는 형태를 말합니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>       <span class="c1"># [1 2 3]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="o">+</span><span class="mi">5</span><span class="p">)</span>     <span class="c1"># [6 7 8]
</span>
<span class="n">a2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">).</span><span class="n">reshape</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[1 2 3]
#  [4 5 6]
#  [7 8 9]]
</span>

<span class="c1"># 빈값은 브로드캐스팅 되어 채워진 채로 더해짐
</span><span class="k">print</span><span class="p">(</span> <span class="n">a2</span> <span class="o">+</span> <span class="n">a1</span> <span class="p">)</span> 
<span class="c1"># [[ 2  4  6]
#  [ 5  7  9]
#  [ 8 10 12]]
</span>
<span class="n">b2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]).</span><span class="n">reshape</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
<span class="c1"># [1 2 3]
</span><span class="k">print</span><span class="p">(</span><span class="n">b2</span><span class="p">)</span>
<span class="c1"># [[1]
#  [2]
#  [3]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="o">+</span><span class="n">b2</span><span class="p">)</span>
<span class="c1"># [[2 3 4]
#  [3 4 5]
#  [4 5 6]]
</span>
</code></pre></div></div>

<h2 id="사칙연산">사칙연산</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>   
<span class="n">b1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">9</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">b1</span><span class="p">)</span>

<span class="c1"># [1 2 3 4 5 6 7 8 9]  al
# [3 9 6 5 6 9 2 9 6]  b1 램덤값
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span> <span class="o">+</span> <span class="n">b1</span><span class="p">)</span>  <span class="c1"># [ 4 11  9  9 11 15  9 17 15]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span> <span class="o">-</span> <span class="n">b1</span><span class="p">)</span>  <span class="c1"># [-2 -7 -3 -1 -1 -3  5 -1  3]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span> <span class="o">*</span> <span class="n">b1</span><span class="p">)</span>  <span class="c1"># [ 3 18 18 20 30 54 14 72 54]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span> <span class="o">/</span> <span class="n">b1</span><span class="p">)</span>  <span class="c1"># [0.33333333 0.22222222 0.5        0.8        0.83333333 0.66666667  3.5        0.88888889 1.5       ]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span> <span class="o">//</span> <span class="n">b1</span><span class="p">)</span> <span class="c1"># [0 0 0 0 0 0 3 0 1]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span> <span class="o">**</span> <span class="n">b1</span><span class="p">)</span> <span class="c1"># [        1       512       729      1024     15625  10077696        49   134217728    531441]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span> <span class="o">%</span> <span class="n">b1</span><span class="p">)</span>  <span class="c1"># [1 2 3 4 5 6 1 8 3]
</span>

</code></pre></div></div>

<h2 id="numpyadd">numpy.add</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.add(x1, x2, /, out=None, *, where=True, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj])</code>  <br />
nparray를 더하는 기능을 제공합니다.  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.add.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="o">+</span><span class="mi">10</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">a1</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>

<span class="c1"># [1 2 3 4 5 6 7 8 9]
# [11 12 13 14 15 16 17 18 19]
# [11 12 13 14 15 16 17 18 19]
</span>
</code></pre></div></div>

<h2 id="numpysubtract">numpy.subtract</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.subtract(x1, x2, /, out=None, *, where=True, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj])</code>  <br />
nparray를 빼는 기능을 제공합니다.  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.subtract.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">subtract</span><span class="p">(</span><span class="n">a1</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>

<span class="c1"># [1 2 3 4 5 6 7 8 9]
# [-1  0  1  2  3  4  5  6  7]
# [-1  0  1  2  3  4  5  6  7]
</span></code></pre></div></div>

<h2 id="numpynegative">numpy.negative</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.negative(x, /, out=None, *, where=True, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj])</code>  <br />
nparray를 부호를 반전 기능을 제공합니다.  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.negative.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="o">-</span><span class="n">a1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">negative</span><span class="p">(</span><span class="n">a1</span><span class="p">))</span>

<span class="c1"># [1 2 3 4 5 6 7 8 9]
# [-1 -2 -3 -4 -5 -6 -7 -8 -9]
# [-1 -2 -3 -4 -5 -6 -7 -8 -9]
</span></code></pre></div></div>

<h2 id="numpymultiply">numpy.multiply</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.multiply(x1, x2, /, out=None, *, where=True, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj])</code>  <br />
nparray를 곱하는 기능을 제공합니다.  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.multiply.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">multiply</span><span class="p">(</span><span class="n">a1</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>

<span class="c1"># [1 2 3 4 5 6 7 8 9]
# [ 2  4  6  8 10 12 14 16 18]
# [ 2  4  6  8 10 12 14 16 18]
</span>
</code></pre></div></div>

<h2 id="numpydivide">numpy.divide</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.divide(x1, x2, /, out=None, *, where=True, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj])</code>  <br />
nparray를 나누는 기능을 제공합니다.  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.divide.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">divide</span><span class="p">(</span><span class="n">a1</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>

<span class="c1"># [1 2 3 4 5 6 7 8 9]
# [0.5 1.  1.5 2.  2.5 3.  3.5 4.  4.5]
# [0.5 1.  1.5 2.  2.5 3.  3.5 4.  4.5]
</span></code></pre></div></div>

<h2 id="numpyfloor_divide">numpy.floor_divide</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.floor_divide(x1, x2, /, out=None, *, where=True, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj])</code>  <br />
nparray를 나누기 값의 소수부만 제공하는 기능을 제공합니다.(버림)  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.floor_divide.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="o">//</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">floor_divide</span><span class="p">(</span><span class="n">a1</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>

<span class="c1"># [0 1 1 2 2 3 3 4 4]
# [0 1 1 2 2 3 3 4 4]
</span></code></pre></div></div>

<h2 id="numpymod">numpy.mod</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.mod(x1, x2, /, out=None, *, where=True, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj])</code>  <br />
nparray를 나머지 값을 제공합니다.  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.mod.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span> <span class="o">%</span> <span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">mod</span><span class="p">(</span><span class="n">a1</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>

<span class="c1"># [1 2 3 4 5 6 7 8 9]
# [1 0 1 0 1 0 1 0 1]
# [1 0 1 0 1 0 1 0 1]
</span></code></pre></div></div>

<h2 id="numpyabsolute-npabs">numpy.absolute, np.abs</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.absolute(x, /, out=None, *, where=True, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj])</code>  <br />
np.abs is a shorthand for this function.
nparray를 절대값을 제공합니다.  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.absolute.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="o">-</span><span class="mf">1.2</span><span class="p">,</span> <span class="mf">1.2</span><span class="p">])</span>
<span class="n">np</span><span class="p">.</span><span class="n">absolute</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

<span class="c1"># array([ 1.2,  1.2])
</span></code></pre></div></div>

<h2 id="numpysquare">numpy.square</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.square(x, /, out=None, *, where=True, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj])</code>  <br />
nparray를 제곱값을 제공합니다.  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.square.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">square</span><span class="p">(</span><span class="n">a1</span><span class="p">))</span>

<span class="c1"># [1 2 3 4 5 6 7 8 9]
# [ 1  4  9 16 25 36 49 64 81]
</span></code></pre></div></div>

<h2 id="numpysqrt">numpy.sqrt</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.sqrt(x, /, out=None, *, where=True, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj])</code> <br />
루트 값을 제공 합니다.
<a href="https://numpy.org/doc/stable/reference/generated/numpy.sqrt.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">4</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">25</span><span class="p">,</span><span class="mi">36</span><span class="p">,</span><span class="mi">10</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">a2</span><span class="p">))</span>

<span class="c1"># [ 4  9 25 36 10]
# [2.         3.         5.         6.         3.16227766]
</span></code></pre></div></div>

<h2 id="numpyexp">numpy.exp</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.exp(x, /, out=None, *, where=True, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj])</code> <br />
밑이 자연상수 e인 지수함수(e^x)의 그래프 값을 제공 합니다.
<a href="https://numpy.org/doc/stable/reference/generated/numpy.exp.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span>    <span class="c1"># e^0 와 동일
# 1.0
</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>    <span class="c1"># e^1 와 동일
# 2.718281828459045
</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>   <span class="c1"># e^10 와 동일
# 22026.465794806718
</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.5</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span> <span class="p">,</span> <span class="mf">1.5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
<span class="c1">#[3.67879441e-01 6.06530660e-01 1.00000000e+00 2.71828183e+00 4.48168907e+00 1.48413159e+02 2.20264658e+04]
</span>
</code></pre></div></div>

<h2 id="numpysum">numpy.sum</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.sum(a, axis=None, dtype=None, out=None, keepdims=&lt;no value&gt;, initial=&lt;no value&gt;, where=&lt;no value&gt;)</code> <br />
nparray의 합산된 값을 제공 합니다.  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.sum.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[7 9 7]
#  [5 6 2]
#  [3 3 8]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">.</span><span class="nb">sum</span><span class="p">(),</span> <span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">a2</span><span class="p">))</span> <span class="c1">#전체 item을 합
# 50 50
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span> <span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="c1">#[15 18 17] [15 18 17]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span> <span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>
<span class="c1">#[23 13 14] [23 13 14]
</span>
</code></pre></div></div>

<h2 id="numpycumsum">numpy.cumsum</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.cumsum(a, axis=None, dtype=None, out=None)</code> <br />
nparray의 <code class="language-plaintext highlighter-rouge">누적</code> 합산된 값을 제공 합니다.  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.cumsum.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[7 9 7]
#  [5 6 2]
#  [3 3 8]]
</span><span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">cumsum</span><span class="p">(</span><span class="n">a2</span><span class="p">))</span> <span class="c1">#누적합을 제공함
# [ 7 16 23 28 34 36 39 42 50]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">cumsum</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>  <span class="c1"># 행방향의 누적된 합으로 naddray변경됨
# [[ 7  9  7]
#  [12 15  9]
#  [15 18 17]]
</span> 
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">cumsum</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span> <span class="c1"># 열 방향의 누적된 합으로 naddray변경됨
# [[ 7 16 23]
#  [ 5 11 13]
#  [ 3  6 14]]
</span>
</code></pre></div></div>

<h2 id="numpydiff">numpy.diff</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.diff(a, n=1, axis=-1, prepend=&lt;no value&gt;, append=&lt;no value&gt;)</code> <br />
naddray의 정해진 축의 방향으로 이전 값과의 차이 값을 제공 합니다.
<a href="https://numpy.org/doc/stable/reference/generated/numpy.diff.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[7 9 7]
#  [5 6 2]
#  [3 3 8]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">diff</span><span class="p">(</span><span class="n">a2</span><span class="p">))</span>  <span class="c1"># 기본 axis=1 값과 동일
# [[ 2 -2]
#  [ 1 -4]
#  [ 0  5]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">diff</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="c1"># [[-2 -3 -5]
#  [-2 -3  6]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">diff</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>
<span class="c1"># [[ 2 -2]
#  [ 1 -4]
#  [ 0  5]]
</span>
</code></pre></div></div>

<h2 id="numpyany">numpy.any</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.any(a, axis=None, out=None, keepdims=&lt;no value&gt;, *, where=&lt;no value&gt;)</code> <br />
ndarray 항목중 <code class="language-plaintext highlighter-rouge">True</code> 값이 1개 이상 존재한다면 <code class="language-plaintext highlighter-rouge">True</code> (or조건) 제공 합니다.
<a href="https://numpy.org/doc/stable/reference/generated/numpy.any.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span>
    <span class="p">[</span><span class="bp">False</span><span class="p">,</span><span class="bp">False</span><span class="p">,</span><span class="bp">False</span><span class="p">],</span>
    <span class="p">[</span><span class="bp">False</span><span class="p">,</span><span class="bp">True</span><span class="p">,</span><span class="bp">True</span><span class="p">],</span>
    <span class="p">[</span><span class="bp">False</span><span class="p">,</span><span class="bp">False</span><span class="p">,</span><span class="bp">False</span><span class="p">]</span>
<span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[False False False]
#  [False  True  True]
#  [False False False]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">any</span><span class="p">(</span><span class="n">a2</span><span class="p">))</span> <span class="c1"># 항목중에 하나라도 True 면 True 임 OR
# True   (전체중에 True가 한개 이상 있으므로 True반환)
</span><span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">any</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span> <span class="c1">#열단위
# [False  True  True]   
</span><span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">any</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span> <span class="c1">#행단위
# [False  True False]
</span></code></pre></div></div>

<h2 id="numpyall">numpy.all</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.all(a, axis=None, out=None, keepdims=&lt;no value&gt;, *, where=&lt;no value&gt;)</code> <br />
ndarray 항목 모두 <code class="language-plaintext highlighter-rouge">True</code> 값이이라면 <code class="language-plaintext highlighter-rouge">True</code> (and조건) 제공 합니다.
<a href="https://numpy.org/doc/stable/reference/generated/numpy.all.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[False False False]
#  [False  True  True]
#  [False False False]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">all</span><span class="p">(</span><span class="n">a2</span><span class="p">))</span> <span class="c1"># 전체가 True여야 True임 AND
# False
</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">all</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="c1"># [False False False]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">all</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>
<span class="c1"># [False False False]
</span></code></pre></div></div>

<h2 id="numpysort">numpy.sort</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.sort(a, axis=- 1, kind=None, order=None)</code>  <br />
ndarray의 정렬을 제공 합니다.  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.sort.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
<span class="c1"># [2 2 2 9 2 6 5 7 5 9]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">sort</span><span class="p">(</span><span class="n">a1</span><span class="p">))</span>
<span class="c1"># [2 2 2 2 5 5 6 7 9 9]
</span>
<span class="n">a</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">],[</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">]])</span>
<span class="n">np</span><span class="p">.</span><span class="n">sort</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>                <span class="c1"># sort along the last axis
# array([[1, 4],
#        [1, 3]])
</span><span class="n">np</span><span class="p">.</span><span class="n">sort</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>     <span class="c1"># sort the flattened array
# array([1, 1, 3, 4])
</span>
<span class="n">np</span><span class="p">.</span><span class="n">sort</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>        <span class="c1"># sort along the first axis
# array([[1, 1],
#        [3, 4]])
</span>
</code></pre></div></div>

<h2 id="numpyargosrt">numpy.argosrt</h2>
<p><code class="language-plaintext highlighter-rouge">numpy.argsort(a, axis=- 1, kind=None, order=None)</code>  <br />
ndarray의 정렬 <code class="language-plaintext highlighter-rouge">index</code> 값을 제공 합니다.  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.argsort.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
<span class="c1"># [2 2 2 9 2 6 5 7 5 9]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">argsort</span><span class="p">(</span><span class="n">a1</span><span class="p">))</span><span class="c1">#정렬의 index순서
# [0 1 2 4 6 8 5 7 3 9]
</span></code></pre></div></div>

<h2 id="그밖에-배열-연산-팁">그밖에 배열 연산 팁</h2>
<p>조건을 통한 배열의 필터링하여 재생성할 수도 있습니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span> <span class="o">==</span> <span class="mi">5</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span> <span class="o">!=</span> <span class="mi">5</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span> <span class="o">&gt;</span> <span class="mi">5</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">)</span>

<span class="c1"># [1 2 3 4 5 6 7 8 9]
# [False False False False  True False False False False]
# [ True  True  True  True False  True  True  True  True]
# [False False False False False  True  True  True  True]
# [ True  True  True  True  True False False False False]
</span>

<span class="n">a2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">).</span><span class="n">reshape</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[1 2 3]
#  [4 5 6]
#  [7 8 9]]
</span><span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">a2</span><span class="p">))</span>
<span class="c1"># 45
</span><span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">count_nonzero</span><span class="p">(</span><span class="n">a2</span><span class="o">&gt;</span><span class="mi">5</span><span class="p">))</span> <span class="c1"># 5초과 인 수량을 카운트함
# 4
</span><span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">a2</span><span class="o">&gt;</span><span class="mi">5</span><span class="p">))</span>
<span class="c1"># 4
</span><span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">a2</span><span class="o">&gt;</span><span class="mi">5</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span> <span class="c1"># 축에 해당하는 5초과 카운트가 출력됨
# [1 1 2]
</span><span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">a2</span><span class="o">&gt;</span><span class="mi">5</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span> <span class="c1"># 축에 해당하는 5초과 카운트가 출력됨
# [0 1 3]
</span>
</code></pre></div></div>

<p>그 밖에 표준편차 <code class="language-plaintext highlighter-rouge">numpy.std</code>, 분산 <code class="language-plaintext highlighter-rouge">numpy.var</code>, 로그 <code class="language-plaintext highlighter-rouge">numpy.log</code> 등 다양한 함수가 있습니다.  <br />
세부 내용은 공식 API를 참고 바랍니다.  <br />
필요할 때 찾아쓸 정도만 알고 있으면 될 것 같네요.</p>

<p><a href="https://www.youtube.com/watch?v=mirZPrWwvao" target="_blank">학습 내용 참고처</a></p>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-python-basic)</span></p>
<ul>

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_10_package/">[Python Basic] 모듈 만들기, 패키지 만들기</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_09_exception/">[Python Basic] 예외처리</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_08_class/">[Python Basic] Class</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_07_function/">[Python Basic] 함수</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_06_set/">[Python Basic] 자료형 set 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_05_dictionary/">[Python Basic] 자료형 dictionary 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_04_tuple/">[Python Basic] 자료형 tuple 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_03_list/">[Python Basic] 자료형 list 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_02_init/">[Python Basic] 기본 자료 및 조건문</a></li>
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_01_install/">[Python Basic] 설치</a></li>
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="python강좌" /><category term="lecture-python-numpy" /><category term="numpy" /><summary type="html"><![CDATA[nparray의 연산에 대해서 알아보겠습니다. mathematical function 메뉴에는 다양한 수학 관련 numpy 함수가 제공 되고 있으니 참고 바랍니다. API 참조]]></summary></entry><entry><title type="html">[Python][Numpy] 배열 생성(Array creation)</title><link href="https://kimjaehyun.co.kr/python/python_study_numpy_01_ndarray/" rel="alternate" type="text/html" title="[Python][Numpy] 배열 생성(Array creation)" /><published>2022-06-24T00:00:00-05:00</published><updated>2022-06-24T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_study_numpy_01_ndarray</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_study_numpy_01_ndarray/"><![CDATA[<p><code class="language-plaintext highlighter-rouge">Numpy(Numerical Python)</code> 는 python으로 행열 연산 등 대규모 다타원 배열과 행열 연산 등에 사용할 수 있는 라이브러 입니다. <br />
python이 데이터 분석 머신너링에 이용되기 위해서 데이터 전처리 등의 과정을 거치는데 numpy는 이런 전처리 과정에 사용됩니다. <br />
기본적은 사용법을 배워보겠습니다.<br />
Array creation routines :  <a href="https://numpy.org/doc/stable/reference/routines.array-creation.html" target="_blank">API 참조</a></p>

<p>Numpy 홈페이지 : <a href="https://numpy.org/doc" target="_blank">numpy.org</a></p>

<p>Numpy를 사용하려면 설치를 진행 해야됩니다.</p>
<h1 id="설치하기">설치하기</h1>
<p><code class="language-plaintext highlighter-rouge">pip install numpy</code> 로 설치를 진행 합니다. <br />
설치 후 <code class="language-plaintext highlighter-rouge">import numpy as np</code> 를 통해서 사용 합니다.</p>

<h1 id="numpy-배열">numpy 배열</h1>

<h2 id="배열-생성">배열 생성</h2>
<p>기본적인 배열을 만들어 봅니다.<br />
다양한 생성 방법이 있는데, 공식 문서에서 확인 바랍니다.  <br />
<a href="https://numpy.org/doc/stable/reference/routines.array-creation.html" target="_blank">Array creation routines</a>  <br />
type을 확인해보면, <code class="language-plaintext highlighter-rouge">list</code> 타입과 다른 <code class="language-plaintext highlighter-rouge">ndarray</code> 가 출력 됩니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="c1"># 1차원 생성
</span><span class="n">a1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]);</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>   <span class="c1"># [1 2 3 4 5]
</span>
<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]))</span>    <span class="c1">#&lt;class 'list'&gt;
</span><span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">a1</span><span class="p">))</span>             <span class="c1">#&lt;class 'numpy.ndarray'&gt;
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>             <span class="c1">#(5,)     
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">.</span><span class="n">ndim</span><span class="p">)</span>              <span class="c1">#1     
</span>
<span class="c1"># 2차원 생성
</span><span class="n">a2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]])</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>             <span class="c1">#(3,3)
</span><span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">.</span><span class="n">ndim</span><span class="p">)</span>              <span class="c1">#2     
</span>
<span class="c1"># 3차원 생성
</span><span class="n">a3</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">(</span> <span class="p">[</span>
    <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]],</span>
    <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]],</span>
    <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]]</span>
<span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">a3</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>             <span class="c1">#(3, 3, 3)
</span><span class="k">print</span><span class="p">(</span><span class="n">a3</span><span class="p">.</span><span class="n">ndim</span><span class="p">)</span>              <span class="c1">#3     
</span>
<span class="c1"># 배열의 타입 선택
</span><span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="nb">int</span><span class="p">)</span>
<span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mf">1.1</span><span class="p">,</span> <span class="mf">2.2</span><span class="p">,</span> <span class="mf">3.3</span><span class="p">,</span> <span class="mf">4.4</span><span class="p">,</span> <span class="mf">5.5</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="nb">float</span><span class="p">)</span>
<span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="nb">bool</span><span class="p">)</span> <span class="c1"># array([ True,  True, False,  True,  True])  0만 False
</span></code></pre></div></div>
<p>생성한 배열의 크기와 형태를 확인하는 방법은 <code class="language-plaintext highlighter-rouge">shape</code>은 tuple형태로 반환하고, 
<code class="language-plaintext highlighter-rouge">ndim</code>은 차원수를 반환한다.</p>

<h2 id="date-배열-생성">Date 배열 생성</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 데이터 타입 생성
</span><span class="n">date</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">(</span><span class="s">'2022-07-01'</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">datetime64</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">date</span><span class="p">)</span> <span class="c1"># 2022-07-01
</span>
<span class="n">date</span>        <span class="c1"># array('2022-07-01', dtype='datetime64[D]')
</span><span class="n">date</span> <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">40</span><span class="p">)</span>

<span class="c1"># array(['2022-07-01', '2022-07-02', '2022-07-03', '2022-07-04',
#        '2022-07-05', '2022-07-06', '2022-07-07', '2022-07-08',
#        '2022-07-09', '2022-07-10', '2022-07-11', '2022-07-12',
#        '2022-07-13', '2022-07-14', '2022-07-15', '2022-07-16',
#        '2022-07-17', '2022-07-18', '2022-07-19', '2022-07-20',
#        '2022-07-21', '2022-07-22', '2022-07-23', '2022-07-24',
#        '2022-07-25', '2022-07-26', '2022-07-27', '2022-07-28',
#        '2022-07-29', '2022-07-30', '2022-07-31', '2022-08-01',
#        '2022-08-02', '2022-08-03', '2022-08-04', '2022-08-05',
#        '2022-08-06', '2022-08-07', '2022-08-08', '2022-08-09'],
#       dtype='datetime64[D]')
</span>
<span class="n">datetime</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">datetime64</span><span class="p">(</span><span class="s">'2022-07-01 13:20'</span><span class="p">)</span>
<span class="n">datetime</span>
<span class="c1"># numpy.datetime64('2022-07-01T13:20')
</span>
</code></pre></div></div>
<p>생성한 배열의 크기와 형태를 확인하는 방법은 <code class="language-plaintext highlighter-rouge">shape</code>은 tuple형태로 반환하고, 
<code class="language-plaintext highlighter-rouge">ndim</code>은 차원수를 반환한다.</p>

<h2 id="배열-복사">배열 복사</h2>
<p>기존 생성된 ndarray를  복사하여 생성 할수 있습니다. <br />
아래 <code class="language-plaintext highlighter-rouge">new_1 = a1</code> 로 인해서 두 변수는 같이 변경되는 것을 알 수 있습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]);</span>
<span class="n">new_1</span> <span class="o">=</span> <span class="n">a1</span>
<span class="n">new_2</span> <span class="o">=</span> <span class="n">a1</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>

<span class="n">new_1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">200</span>

<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">new_1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">new_2</span><span class="p">)</span>

<span class="c1"># 결과
# [200   2   3   4   5]
# [200   2   3   4   5]
# [1 2 3 4 5]
</span>
</code></pre></div></div>

<h2 id="배열-정보-확인">배열 정보 확인</h2>
<p>다음 함수를 통해서 배열의 정보를 확인할 수 있습니다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">항목</th>
      <th style="text-align: center">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">ndim</td>
      <td style="text-align: center">배열 차원</td>
    </tr>
    <tr>
      <td style="text-align: center">shape</td>
      <td style="text-align: center">배열 shape</td>
    </tr>
    <tr>
      <td style="text-align: center">dtype</td>
      <td style="text-align: center">배열 데이터 타입</td>
    </tr>
    <tr>
      <td style="text-align: center">size</td>
      <td style="text-align: center">배열 요소 수</td>
    </tr>
    <tr>
      <td style="text-align: center">itemsize</td>
      <td style="text-align: center">배열 각 맴버의 바이트 크기</td>
    </tr>
    <tr>
      <td style="text-align: center">nbytes</td>
      <td style="text-align: center">배열의 요소가 소비 한 총 바이트</td>
    </tr>
    <tr>
      <td style="text-align: center">strides</td>
      <td style="text-align: center">배열을 탐색 할 때 각 차원에서 단계별로 이동할 바이트 수</td>
    </tr>
  </tbody>
</table>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">ainfo</span><span class="p">(</span><span class="n">array</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"ndim : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">ndim</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"shape : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"dytpe : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">dtype</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"size : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">size</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"itemsize : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">itemsize</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"nbytes : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">nbytes</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"strides : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">strides</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="배열-접근">배열 접근</h2>
<p><code class="language-plaintext highlighter-rouge">list</code> 배열과 같이 접근 할 수 있습니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 1차원 접근
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">a1</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="n">a1</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span> <span class="c1"># 1 2 3
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span> <span class="c1"># 5
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[:</span><span class="mi">2</span><span class="p">])</span> <span class="c1"># [1 2]
</span>
<span class="c1"># 2차원 접근
</span><span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="n">a2</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="n">a2</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span> <span class="c1"># 1 5 9
</span>
<span class="c1"># 3차원 접근
</span><span class="k">print</span><span class="p">(</span><span class="n">a3</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="n">a3</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="n">a3</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span> <span class="c1"># 1 5 9 
</span>
<span class="c1">#값 변경
</span><span class="n">a1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">15</span>


</code></pre></div></div>

<h2 id="numpyzeros">numpy.zeros</h2>
<p><code class="language-plaintext highlighter-rouge">0</code> 값으로 채우기 위해서 사용합니다.  <br />
<code class="language-plaintext highlighter-rouge">numpy.zeros(shape, dtype=float, order='C', *, like=None)</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.zeros.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 1차원
</span><span class="n">z</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">z</span><span class="p">))</span>      <span class="c1"># &lt;class 'numpy.ndarray'&gt;
</span><span class="k">print</span><span class="p">(</span><span class="n">z</span><span class="p">)</span>            <span class="c1"># [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
</span>
<span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>        <span class="c1"># array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
</span>

<span class="c1"># 2차원
</span><span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>

<span class="c1"># 형태
# array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]])
</span>
</code></pre></div></div>

<h2 id="numpyones">numpy.ones</h2>
<p><code class="language-plaintext highlighter-rouge">1</code> 값으로 채우기 위해서 사용합니다.  <br />
<code class="language-plaintext highlighter-rouge">numpy.ones(shape, dtype=None, order='C', *, like=None)</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.ones.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 1차원
</span><span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
<span class="c1"># array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
</span>
<span class="c1"># 2차원
</span><span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">((</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>
<span class="c1"># 형태
# array([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
#        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
#        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
#        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
#        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
#        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
#        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
#        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
#        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
#        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])
</span>
<span class="c1"># bool 타입 선언
</span>
<span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="nb">bool</span><span class="p">)</span>
<span class="c1"># 형태
# array([[ True,  True,  True],
</span>    <span class="c1">#    [ True,  True,  True],
</span>    <span class="c1">#    [ True,  True,  True]])
</span></code></pre></div></div>

<h2 id="numpyfull">numpy.full</h2>
<p><code class="language-plaintext highlighter-rouge">특정</code> 값으로 채우기 위해서 사용합니다.  <br />
<code class="language-plaintext highlighter-rouge">numpy.full(shape, fill_value, dtype=None, order='C', *, like=None)</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.full.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">full</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="mf">3.14</span> <span class="p">)</span>

<span class="c1"># 형태
# array([[3.14, 3.14, 3.14],
#        [3.14, 3.14, 3.14],
#        [3.14, 3.14, 3.14]])
</span></code></pre></div></div>

<h2 id="numpyeye">numpy.eye</h2>
<p>단위행렬 형태로 대각선의 <code class="language-plaintext highlighter-rouge">1</code>로 만들어진 정사각형 행열을 반환 합니다.  <br />
<code class="language-plaintext highlighter-rouge">numpy.eye(N, M=None, k=0, dtype=&lt;class 'float'&gt;, order='C', *, like=None)</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.eye.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">eye</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># 형태
# array([[1., 0., 0., 0., 0.],
#        [0., 1., 0., 0., 0.],
#        [0., 0., 1., 0., 0.],
#        [0., 0., 0., 1., 0.],
#        [0., 0., 0., 0., 1.]])
</span></code></pre></div></div>

<h2 id="numpytri">numpy.tri</h2>
<p>정사각형 행렬에서 3각 행렬 형태의 값을 <code class="language-plaintext highlighter-rouge">1</code>로 채운 행열을 반환 합니다. <br />
<code class="language-plaintext highlighter-rouge">numpy.tri(N, M=None, k=0, dtype=&lt;class 'float'&gt;, *, like=None)</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.tri.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">tri</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># 형태
# array([[1., 0., 0., 0., 0.],
#        [1., 1., 0., 0., 0.],
#        [1., 1., 1., 0., 0.],
#        [1., 1., 1., 1., 0.],
#        [1., 1., 1., 1., 1.]])
</span></code></pre></div></div>

<h2 id="numpyempty">numpy.empty</h2>
<p>초기화 하지 않은 배열을 반환하는데, 값은 기존 메모리에 값들이 출력되는 현상이 발생한다.   <br />
<code class="language-plaintext highlighter-rouge">numpy.empty(shape, dtype=float, order='C', *, like=None)</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.empty.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">empty</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>
<span class="c1"># 형태 (임의의 값)
# array([1., 1., 1., 1., 1.])
</span>
<span class="n">np</span><span class="p">.</span><span class="n">empty</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>
<span class="c1"># 형태 (임의의 값)
# array([[3.14, 3.14, 3.14],
#        [3.14, 3.14, 3.14],
#        [3.14, 3.14, 3.14]])
</span>       
</code></pre></div></div>

<h2 id="_like-ones_like--zeros_like-full_like-empty_like">*_like, ones_like,  zeros_like, full_like, empty_like</h2>
<p><code class="language-plaintext highlighter-rouge">*_like</code>는 인자로 제공된 데이터 형태와 같은 <code class="language-plaintext highlighter-rouge">shape</code>을 가지고 있는 배열을 반환합니다.  <br />
예 를 들어 <code class="language-plaintext highlighter-rouge">sample1</code>은 <code class="language-plaintext highlighter-rouge">(5,5)</code>의 sahpe을 가진 ndarray이고 <code class="language-plaintext highlighter-rouge">sample2</code>는 <code class="language-plaintext highlighter-rouge">sample1</code>의 형태(shape)을 동일하게 만들고 값은 <code class="language-plaintext highlighter-rouge">full_like</code>로 특정값을 선택하는 의미 입니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sample1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">((</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">sample1</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>        <span class="c1"># (5, 5) 
# print(sample1)
# [[1. 1. 1. 1. 1.]
#  [1. 1. 1. 1. 1.]
#  [1. 1. 1. 1. 1.]
#  [1. 1. 1. 1. 1.]
#  [1. 1. 1. 1. 1.]]
</span>
<span class="n">sample2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">full_like</span><span class="p">(</span><span class="n">sample1</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">sample2</span><span class="p">)</span>              <span class="c1"># (5, 5)
# print(sample2.shape)
# [[7. 7. 7. 7. 7.]
#  [7. 7. 7. 7. 7.]
#  [7. 7. 7. 7. 7.]
#  [7. 7. 7. 7. 7.]
#  [7. 7. 7. 7. 7.]]
</span></code></pre></div></div>

<h2 id="numpyarange">numpy.arange</h2>
<p><code class="language-plaintext highlighter-rouge">range</code> 함수와 동일한 형태로 ndarray를 생성하는 방법 입니다.
<code class="language-plaintext highlighter-rouge">numpy.arange([start, ]stop, [step, ]dtype=None, *, like=None)</code>  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.arange.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="c1"># array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
</span>
<span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="c1"># array([0, 2, 4, 6, 8])
</span>
</code></pre></div></div>

<p><a href="https://www.youtube.com/watch?v=mirZPrWwvao" target="_blank">학습 내용 참고처</a></p>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-python-basic)</span></p>
<ul>

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_10_package/">[Python Basic] 모듈 만들기, 패키지 만들기</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_09_exception/">[Python Basic] 예외처리</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_08_class/">[Python Basic] Class</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_07_function/">[Python Basic] 함수</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_06_set/">[Python Basic] 자료형 set 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_05_dictionary/">[Python Basic] 자료형 dictionary 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_04_tuple/">[Python Basic] 자료형 tuple 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_03_list/">[Python Basic] 자료형 list 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_02_init/">[Python Basic] 기본 자료 및 조건문</a></li>
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_01_install/">[Python Basic] 설치</a></li>
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="python강좌" /><category term="lecture-python-numpy" /><category term="numpy" /><summary type="html"><![CDATA[Numpy(Numerical Python) 는 python으로 행열 연산 등 대규모 다타원 배열과 행열 연산 등에 사용할 수 있는 라이브러 입니다. python이 데이터 분석 머신너링에 이용되기 위해서 데이터 전처리 등의 과정을 거치는데 numpy는 이런 전처리 과정에 사용됩니다. 기본적은 사용법을 배워보겠습니다. Array creation routines : API 참조]]></summary></entry><entry><title type="html">[Python][Numpy] 배열 사용(Array manipulation)</title><link href="https://kimjaehyun.co.kr/python/python_study_numpy_02_manage/" rel="alternate" type="text/html" title="[Python][Numpy] 배열 사용(Array manipulation)" /><published>2022-06-24T00:00:00-05:00</published><updated>2022-06-24T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_study_numpy_02_manage</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_study_numpy_02_manage/"><![CDATA[<p>이번에는 <code class="language-plaintext highlighter-rouge">Numpy(Numerical Python)</code> 배열을 조작하는 내용을 주로 공부해 보겠습니다.</p>

<p>Numpy 홈페이지 : <a href="https://numpy.org/doc" target="_blank">numpy.org</a>     <br />
Array manipulation routines :  <a href="https://numpy.org/doc/stable/reference/routines.array-manipulation.html" target="_blank">API 참조</a></p>

<h1 id="numpy-조작">numpy 조작</h1>

<h2 id="배열-정보">배열 정보</h2>
<p>배열 정보 확인을 위해서 아래 배열 함수를 작성하겠습니다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">항목</th>
      <th style="text-align: center">설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">ndim</td>
      <td style="text-align: center">배열 차원</td>
    </tr>
    <tr>
      <td style="text-align: center">shape</td>
      <td style="text-align: center">배열 shape</td>
    </tr>
    <tr>
      <td style="text-align: center">dtype</td>
      <td style="text-align: center">배열 데이터 타입</td>
    </tr>
    <tr>
      <td style="text-align: center">size</td>
      <td style="text-align: center">배열 요소 수</td>
    </tr>
    <tr>
      <td style="text-align: center">itemsize</td>
      <td style="text-align: center">배열 각 맴버의 바이트 크기</td>
    </tr>
    <tr>
      <td style="text-align: center">nbytes</td>
      <td style="text-align: center">배열의 요소가 소비 한 총 바이트</td>
    </tr>
    <tr>
      <td style="text-align: center">strides</td>
      <td style="text-align: center">배열을 탐색 할 때 각 차원에서 단계별로 이동할 바이트 수</td>
    </tr>
  </tbody>
</table>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">ainfo</span><span class="p">(</span><span class="n">array</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"ndim : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">ndim</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"shape : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"dytpe : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">dtype</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"size : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">size</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"itemsize : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">itemsize</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"nbytes : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">nbytes</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"strides : "</span><span class="p">,</span> <span class="n">array</span><span class="p">.</span><span class="n">strides</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>

<span class="n">ainfo</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]))</span>
<span class="c1"># ndim :  1
# shape :  (5,)
# dytpe :  int32
# size :  5
# itemsize :  4
# nbytes :  20
# strides :  (4,)
# [1 2 3 4 5]
</span>

</code></pre></div></div>

<h2 id="기본-인덱싱">기본 인덱싱</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]);</span>
<span class="n">a2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]])</span>
<span class="n">a3</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">(</span> <span class="p">[</span>
    <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]],</span>
    <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]],</span>
    <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]]</span>
<span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>           <span class="c1"># [1 2 3 4 5]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>        <span class="c1"># 1
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>        <span class="c1"># 2
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>        <span class="c1"># 3
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>       <span class="c1"># 4
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span>       <span class="c1"># 5
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">])</span>      <span class="c1"># 1
</span><span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>      <span class="c1"># 3
</span><span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span>      <span class="c1"># 5
</span><span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>     <span class="c1"># 9
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a3</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">])</span>    <span class="c1"># 1
</span><span class="k">print</span><span class="p">(</span><span class="n">a3</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span>    <span class="c1"># 5
</span><span class="k">print</span><span class="p">(</span><span class="n">a3</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>  <span class="c1"># 9
</span>
</code></pre></div></div>

<h2 id="boolean-indexing">Boolean Indexing</h2>
<p><code class="language-plaintext highlighter-rouge">True</code> 값인 인덱스의 배열을 생성 합니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
<span class="n">bi</span> <span class="o">=</span> <span class="p">[</span><span class="bp">False</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="bp">False</span><span class="p">,</span> <span class="bp">True</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">bi</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[</span><span class="n">bi</span><span class="p">])</span>

<span class="c1">#[1 2 3 4 5]
#[False, True, True, False, True]
#[2 3 5]
</span>

<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="n">bi</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="nb">bool</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">bi</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="n">bi</span><span class="p">])</span>

<span class="c1"># [[1 2 3]
#  [4 5 6]
#  [7 8 9]]
</span>
<span class="c1"># [[ True  True False]
#  [ True False  True]
#  [False False  True]]
</span> 
<span class="c1">#  [1 2 4 6 9] or random으로 선택된 배열이 출력됨
</span></code></pre></div></div>

<h2 id="fancy-indedxing">Fancy Indedxing</h2>
<p><code class="language-plaintext highlighter-rouge">index 번호</code>에 해당하는 데이터로 배열을 생성 합니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>                   <span class="c1"># [1 2 3 4 5]
</span><span class="k">print</span><span class="p">([</span><span class="n">a1</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="n">a1</span><span class="p">[</span><span class="mi">2</span><span class="p">]])</span>        <span class="c1"># [1, 3]
</span><span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[</span><span class="n">index</span><span class="p">])</span>            <span class="c1"># [1 3]  
</span>


<span class="c1">#2차원으로 전달할 경우, 출력도 2차원으로 반환됨
</span><span class="n">index</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],[</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">]])</span>
<span class="k">print</span><span class="p">(</span><span class="n">index</span><span class="p">)</span>
<span class="c1"># [[0 1]
#  [2 0]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[</span><span class="n">index</span><span class="p">])</span>  
<span class="c1"># [[1 2]
#  [3 1]]
</span>
<span class="c1"># 복합으로 인덱스를 만들어서 제공할 경우에도 출력됨
</span><span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[1 2 3]
#  [4 5 6]
#  [7 8 9]]
</span><span class="n">row</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>
<span class="n">col</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span><span class="p">])</span>         <span class="c1"># [2 9]
#위 (0,1) (2,2) 에 해당하는 값이 [2 9] 출력됨
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="n">row</span><span class="p">,</span> <span class="p">:])</span>  
<span class="c1"># [[1 2 3]
#  [7 8 9]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[:,</span> <span class="n">col</span><span class="p">])</span> 
<span class="c1"># [[2 3]
#  [5 6]
#  [8 9]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="n">row</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
<span class="c1"># [2 8]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="n">col</span><span class="p">])</span>
<span class="c1"># [8 9]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="n">row</span><span class="p">,</span> <span class="mi">1</span><span class="p">:])</span>
<span class="c1"># [[2 3]
#  [8 9]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="mi">1</span><span class="p">:,</span> <span class="n">col</span><span class="p">])</span>  
<span class="c1"># [[5 6]
#  [8 9]]
</span>
</code></pre></div></div>
<p>Fancy Indedxing 은 배열의 재정의 뿐 아니라, 배열의 연산에도 사용될 수 있습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">])</span>
<span class="n">i</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">])</span>
<span class="n">a1</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>   <span class="c1"># [1 0 3 0 0]   i의 index 번호의 값이 0으로 초기화됨 
</span>
<span class="n">a1</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span><span class="mi">4</span> <span class="c1"># i가 있는 index에 +4 가 된것을 확인함.
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>   <span class="c1"># [1 4 3 4 4]
</span></code></pre></div></div>

<h2 id="슬라이싱">슬라이싱</h2>
<p><code class="language-plaintext highlighter-rouge">list</code> 형의 슬라이싱과 동일한 비슷한 형태로 제공합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>       <span class="c1">#[1 2 3 4 5]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">2</span><span class="p">])</span>  <span class="c1">#[1 2]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[</span><span class="mi">0</span><span class="p">:])</span>   <span class="c1">#[1 2 3 4 5]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[:</span><span class="mi">1</span><span class="p">])</span>   <span class="c1">#[1]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[::</span><span class="mi">2</span><span class="p">])</span>  <span class="c1">#[1 3 5]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span> <span class="c1">#[5 4 3 2 1]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">[:])</span>    <span class="c1">#[1 2 3 4 5]
</span>

<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[1 2 3]
#  [4 5 6]
#  [7 8 9]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>            <span class="c1"># [4 5 6]
</span><span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="p">:])</span>         <span class="c1"># [4 5 6]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[:</span><span class="mi">2</span><span class="p">,:</span><span class="mi">2</span><span class="p">])</span>
<span class="c1"># [[1 2]
#  [4 5]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[</span><span class="mi">1</span><span class="p">:,::</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<span class="c1"># [[6 5 4]
#  [9 8 7]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">,::</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<span class="c1"># [[9 8 7]
#  [6 5 4]
#  [3 2 1]]
</span>

<span class="n">a2_sub</span> <span class="o">=</span> <span class="n">a2</span><span class="p">[:</span><span class="mi">2</span><span class="p">,:</span><span class="mi">2</span><span class="p">];</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2_sub</span><span class="p">)</span>
<span class="c1"># [[1 2]
#  [4 5]]
</span>
<span class="n">a2_sub</span><span class="p">[:,</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>     <span class="c1"># 값을 변경함.
</span><span class="k">print</span><span class="p">(</span><span class="n">a2_sub</span><span class="p">)</span>
<span class="c1"># [[1 0]
#  [4 0]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span> <span class="c1">#numpy의 slicing 했을떄 원본도 값이 변경됨
# [[1 0 3]
#  [4 0 6]
#  [7 8 9]]
</span>
<span class="c1"># a2_sub = a2[:2,:2].copy() 로 복사본 사용시 원본과 분리됨.
</span></code></pre></div></div>

<h2 id="numpyinsert">numpy.insert</h2>
<p>배열에 데이터를 삽입을 학습하겠습니다.   <br />
<code class="language-plaintext highlighter-rouge">numpy.insert(arr, obj, values, axis=None)</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.insert.html" target="_blank">API 참조</a>   <br />
데이터를 추가할때 <code class="language-plaintext highlighter-rouge">axis</code>을 추가할 수 있는데, <code class="language-plaintext highlighter-rouge">axis=0</code>는 <code class="language-plaintext highlighter-rouge">행</code>, <code class="language-plaintext highlighter-rouge">axis=1</code>은 <code class="language-plaintext highlighter-rouge">열</code>으로 인식합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>   <span class="c1"># [1 2 3 4 5]
</span><span class="n">b1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">a1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span> <span class="c1">#0번째 10값을 추가해서 b1 새로운 array를 반환함
</span><span class="k">print</span><span class="p">(</span><span class="n">b1</span><span class="p">)</span>   <span class="c1"># [10  1  2  3  4  5]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>   <span class="c1"># [1 2 3 4 5]
</span>

<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[1 2 3]
#  [4 5 6]
#  [7 8 9]]
</span>
<span class="n">b2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">b2</span><span class="p">)</span>

<span class="c1"># [[ 1  2  3]
#  [10 10 10]           &lt;- 1번 째 10 값을 axis=0(행) 단위로 추가함
#  [ 4  5  6]
#  [ 7  8  9]]
</span> 
<span class="n">b2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">b2</span><span class="p">)</span>

<span class="c1"># &lt;- 1번 째 10 값을 axis=1(열) 단위로 추가함
# [[ 1 10  2  3]    
#  [ 4 10  5  6]
#  [ 7 10  8  9]]
</span></code></pre></div></div>

<h2 id="numpydelete">numpy.delete</h2>
<p>배열에 데이터를 삽입을 학습하겠습니다.   <br />
<code class="language-plaintext highlighter-rouge">numpy.delete(arr, obj, axis=None)</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.delete.html" target="_blank">API 참조</a>   <br />
데이터를 삭제할때 <code class="language-plaintext highlighter-rouge">axis</code>을 추가할 수 있는데, <code class="language-plaintext highlighter-rouge">axis=0</code>는 <code class="language-plaintext highlighter-rouge">행</code>, <code class="language-plaintext highlighter-rouge">axis=1</code>은 <code class="language-plaintext highlighter-rouge">열</code>으로 인식합니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># 1차원에서 배열 삭제
</span><span class="n">a1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>               <span class="c1"># [1 2 3 4 5]
</span><span class="n">b1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">delete</span><span class="p">(</span><span class="n">a1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>   
<span class="k">print</span><span class="p">(</span><span class="n">b1</span><span class="p">)</span>               <span class="c1"># [1 3 4 5]
</span><span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>               <span class="c1"># [1 2 3 4 5] 원본 배열은 값을 유지함
</span>
<span class="c1"># 2 차원에서 배열 삭제
</span><span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[1 2 3]
#  [4 5 6]
#  [7 8 9]]
</span>
<span class="n">b3</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">delete</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="c1"># axis = 0
</span><span class="k">print</span><span class="p">(</span><span class="n">b3</span><span class="p">)</span>
<span class="c1"># 1번 행이 없어짐
# [[1 2 3]
#  [7 8 9]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="n">b4</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">delete</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="c1"># axis = 1
# [[1 3]
#  [4 6]
#  [7 9]]
</span></code></pre></div></div>

<h2 id="numpyndarrayt">numpy.ndarray.T</h2>
<p><code class="language-plaintext highlighter-rouge">ndarray.T</code>로 데이터 형태를 피벗을 합니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># 1차원은 변화 없음
</span><span class="n">a1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">a1</span><span class="p">.</span><span class="n">T</span><span class="p">)</span>
<span class="c1"># [1 2 3 4 5]  
</span>

<span class="c1"># 2차원
</span><span class="n">a2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]])</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[1 2 3]
#  [4 5 6]
#  [7 8 9]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">.</span><span class="n">T</span><span class="p">)</span> <span class="c1">#행열이 전환,
#  [[1 4 7]
#  [2 5 8]
#  [3 6 9]]
</span>
<span class="c1"># 3차원
</span><span class="n">a3</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">(</span> <span class="p">[</span>
    <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]],</span>
    <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]],</span>
    <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]]</span>
<span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">a3</span><span class="p">.</span><span class="n">T</span><span class="p">)</span> 
<span class="c1"># [[[1 1 1]
#   [4 4 4]
#   [7 7 7]]
#  [[2 2 2]
#   [5 5 5]
#   [8 8 8]]
#  [[3 3 3]
#   [6 6 6]
#   [9 9 9]]]
</span>
<span class="c1"># [[[1 1 1][4 4 4][7 7 7]]
#  [[2 2 2][5 5 5][8 8 8]]
#  [[3 3 3][6 6 6][9 9 9]]]
</span>
<span class="n">a4</span> <span class="o">=</span> <span class="n">a3</span><span class="p">.</span><span class="n">T</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">a4</span><span class="p">.</span><span class="n">T</span><span class="p">)</span> 
<span class="c1"># [[[1 2 3]
#   [4 5 6]
#   [7 8 9]]
</span>
<span class="c1">#  [[1 2 3]
#   [4 5 6]
#   [7 8 9]]
</span>
<span class="c1">#  [[1 2 3]
#   [4 5 6]
#   [7 8 9]]]
</span></code></pre></div></div>

<h2 id="numpyreshape">numpy.reshape</h2>
<p>배열의 shape 을 재 구조화 합니다. <br />
<code class="language-plaintext highlighter-rouge">numpy.reshape(a, newshape, order='C')[source]</code>  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.reshape.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">n1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">n1</span><span class="p">)</span>  <span class="c1"># [1 2 3 4 5 6 7 8 9]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">n1</span><span class="p">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>
<span class="c1"># [[1 2 3]
#  [4 5 6]
#  [7 8 9]]
</span>
<span class="c1"># 사이즈가 맞지 않는 경우, 다음 에러를 발생 시킵니다.
</span><span class="n">n2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">n2</span><span class="p">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>

<span class="o">------------------------------------------------</span>
<span class="nb">ValueError</span>     <span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">)</span>
<span class="n">Input</span> <span class="n">In</span> <span class="p">[</span><span class="mi">119</span><span class="p">],</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">cell</span> <span class="n">line</span><span class="p">:</span> <span class="mi">2</span><span class="o">&gt;</span><span class="p">()</span>
      <span class="mi">1</span> <span class="n">n2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="o">----&gt;</span> <span class="mi">2</span> <span class="k">print</span><span class="p">(</span><span class="n">n2</span><span class="p">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>

<span class="nb">ValueError</span><span class="p">:</span> <span class="n">cannot</span> <span class="n">reshape</span> <span class="n">array</span> <span class="n">of</span> <span class="n">size</span> <span class="mi">9</span> <span class="n">into</span> <span class="n">shape</span> <span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span>

</code></pre></div></div>

<h2 id="numpyappend">numpy.append</h2>
<p>배열의 병합하는 역할을 진행 합니다.  <br />
<code class="language-plaintext highlighter-rouge">numpy.append(arr, values, axis=None)</code> <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.append.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">).</span><span class="n">reshape</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
<span class="c1"># print(a2)
# [[1 2 3]
#  [4 5 6]
#  [7 8 9]]
</span>
<span class="n">b2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">19</span><span class="p">).</span><span class="n">reshape</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">b2</span><span class="p">)</span>
<span class="c1"># [[10 11 12]
#  [13 14 15]
#  [16 17 18]]
</span>
<span class="n">c2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="n">b2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">c2</span><span class="p">)</span> <span class="c1">#1차원으로 결과 반환
#[ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18]
</span>
<span class="c1"># 축을 지정하여 추가함.
</span><span class="n">c2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="n">b2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span> <span class="c1"># 행단위
</span><span class="k">print</span><span class="p">(</span><span class="n">c2</span><span class="p">)</span>

<span class="c1"># [[ 1  2  3]
#  [ 4  5  6]
#  [ 7  8  9]
#  [10 11 12]
#  [13 14 15]
#  [16 17 18]]
</span>
<span class="n">c2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="n">b2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">c2</span><span class="p">)</span>

<span class="c1"># [[ 1  2  3 10 11 12]
#  [ 4  5  6 13 14 15]
#  [ 7  8  9 16 17 18]]
</span></code></pre></div></div>
<h2 id="numpystack">numpy.stack</h2>
<p>nparray의 축을 선택 하여 누적 시킵니다. 
<code class="language-plaintext highlighter-rouge">numpy.stack(arrays, axis=0, out=None)</code>   <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.stack.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">])</span>
<span class="n">b</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">])</span>
<span class="n">np</span><span class="p">.</span><span class="n">stack</span><span class="p">((</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">))</span>       <span class="c1"># np.stack((a, b), axis=0) 과 동일
# array([[1, 2, 3],
#        [4, 5, 6]])
</span>
<span class="n">a</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">])</span>
<span class="n">b</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">])</span>
<span class="n">np</span><span class="p">.</span><span class="n">stack</span><span class="p">((</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">),</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="c1"># array([[1, 4],
#        [2, 5],
#        [3, 6]])
</span></code></pre></div></div>

<h2 id="numpyvstack">numpy.vstack</h2>
<p>nparray의 vertical 축의 병합 입니다. 
<code class="language-plaintext highlighter-rouge">np.append(a2, b2, axis=0)</code> 동일 결과를 나타납니다. 
<a href="https://numpy.org/doc/stable/reference/generated/numpy.vstack.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">vstack</span><span class="p">((</span><span class="n">a2</span><span class="p">,</span><span class="n">b2</span><span class="p">))</span>
<span class="c1"># array([[ 1,  2,  3],
#        [ 4,  5,  6],
#        [ 7,  8,  9],
#        [10, 11, 12],
#        [13, 14, 15],
#        [16, 17, 18]])
</span></code></pre></div></div>

<h2 id="numpyhstack">numpy.hstack</h2>
<p>nparray의 horizontal 축의 병합 입니다. 
<code class="language-plaintext highlighter-rouge">np.append(a2, b2, axis=1)</code> 동일 결과를 나타납니다. 
<a href="https://numpy.org/doc/stable/reference/generated/numpy.hstack.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">hstack</span><span class="p">((</span><span class="n">a2</span><span class="p">,</span><span class="n">b2</span><span class="p">))</span>
<span class="c1"># array([[ 1,  2,  3, 10, 11, 12],
#        [ 4,  5,  6, 13, 14, 15],
#        [ 7,  8,  9, 16, 17, 18]])
</span></code></pre></div></div>

<h2 id="numpyconcatenate">numpy.concatenate</h2>
<p>nparray를 연결 합니다. 
<code class="language-plaintext highlighter-rouge">numpy.concatenate((a1, a2, ...), axis=0, out=None, dtype=None, casting="same_kind")</code>
<a href="https://numpy.org/doc/stable/reference/generated/numpy.concatenate.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]])</span>
<span class="n">b</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]])</span>
<span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">((</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">),</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="c1"># array([[1, 2],
#        [3, 4],
#        [5, 6]])
</span>
<span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">((</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">),</span> <span class="n">axis</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>
<span class="c1"># array([1, 2, 3, 4, 5, 6])
</span>
<span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">((</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">.</span><span class="n">T</span><span class="p">),</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="c1"># array([[1, 2, 5],
#        [3, 4, 6]])
</span>
<span class="c1"># a        +    b.T
# [[1, 2],    [[5],
# [3, 4]]     [6]]
</span>

<span class="n">a1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">])</span>
<span class="n">b1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">])</span>
<span class="n">c1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">])</span>
<span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">([</span><span class="n">a1</span><span class="p">,</span><span class="n">b1</span><span class="p">,</span><span class="n">c1</span><span class="p">])</span>
<span class="c1"># array([1, 3, 5, 2, 4, 6, 7, 8, 9])
</span>

<span class="n">a2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]])</span>
<span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">([</span><span class="n">a2</span><span class="p">,</span><span class="n">a2</span><span class="p">])</span>
<span class="c1"># array([[1, 2, 3],
#        [4, 5, 6],
#        [1, 2, 3],
#        [4, 5, 6]])
</span>

<span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">([</span><span class="n">a2</span><span class="p">,</span><span class="n">a2</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="c1"># array([[1, 2, 3, 1, 2, 3],
#        [4, 5, 6, 4, 5, 6]])
</span>
<span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">([</span><span class="n">a2</span><span class="p">,</span><span class="n">a2</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="c1"># array([[1, 2, 3],
#        [4, 5, 6],
#        [1, 2, 3],
#        [4, 5, 6]])
</span>
</code></pre></div></div>

<h2 id="numpyvsplit">numpy.vsplit</h2>
<p>veritcal 기준으로 ndarrray를 분할 합니다.
<code class="language-plaintext highlighter-rouge">numpy.vsplit(ary, indices_or_sections)</code>  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.vsplit.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">).</span><span class="n">reshape</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[1 2 3]
#  [4 5 6]
#  [7 8 9]]
</span>
<span class="n">b2</span><span class="p">,</span> <span class="n">b3</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">vsplit</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">b2</span><span class="p">)</span>
<span class="c1"># [[1 2 3]
#  [4 5 6]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">b3</span><span class="p">)</span>
<span class="c1"># [[7 8 9]]
</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mf">16.0</span><span class="p">).</span><span class="n">reshape</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
<span class="c1"># array([[ 0.,   1.,   2.,   3.],
#        [ 4.,   5.,   6.,   7.],
#        [ 8.,   9.,  10.,  11.],
#        [12.,  13.,  14.,  15.]])
</span><span class="n">np</span><span class="p">.</span><span class="n">vsplit</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="c1"># [array([[0., 1., 2., 3.],
#        [4., 5., 6., 7.]]), 
#  array([[ 8.,  9., 10., 11.],
#        [12., 13., 14., 15.]])]
</span>
</code></pre></div></div>

<h2 id="numpyhsplit">numpy.hsplit</h2>
<p>Horizontal 기준으로 ndarrray를 분할 합니다.
<code class="language-plaintext highlighter-rouge">numpy.hsplit(ary, indices_or_sections)</code>  <br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.hsplit.html" target="_blank">API 참조</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">).</span><span class="n">reshape</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a2</span><span class="p">)</span>
<span class="c1"># [[1 2 3]
#  [4 5 6]
#  [7 8 9]]
</span>
<span class="n">b2</span><span class="p">,</span> <span class="n">b3</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">hvsplit</span><span class="p">(</span><span class="n">a2</span><span class="p">,</span> <span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">b2</span><span class="p">)</span>
<span class="c1"># [[1 2]
#  [4 5]
#  [7 8]]
</span>
<span class="k">print</span><span class="p">(</span><span class="n">b3</span><span class="p">)</span>
<span class="c1"># [[3]
#  [6]
#  [9]]
</span>
</code></pre></div></div>

<h1 id="numpyrandom">numpy.random</h1>
<p>자료를 임의로 만들어야 할때 자주 사용되는 라이브러리 입니다.</p>

<h2 id="numpyrandomrand">numpy.random.rand</h2>
<p>0~1의 균일분포 표준정규분포 난수를 생성하여 반환합니다.  <br />
<code class="language-plaintext highlighter-rouge">random.rand(d0, d1, ..., dn)</code>  <br />
<a href="https://numpy.org/doc/stable/reference/random/generated/numpy.random.rand.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">rand</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="c1"># array([0.42734205, 0.95354301, 0.80731892, 0.6908605 , 0.64658099])
</span>
<span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">rand</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="c1"># array([[0.85155709, 0.25876853],
#        [0.63304735, 0.12171615],
#        [0.11996824, 0.71999629],
#        [0.45233059, 0.77861135],
#        [0.43984419, 0.69105062]])
</span>
</code></pre></div></div>

<h2 id="numpyrandomrandn">numpy.random.randn</h2>
<p>평균<code class="language-plaintext highlighter-rouge">0</code>, 표준편차 <code class="language-plaintext highlighter-rouge">1</code>인 가우시안 표준 정규분포의 난수를 생성하여 반환합니다.  <br />
<code class="language-plaintext highlighter-rouge">random.randn(d0, d1, ..., dn)</code>  <br />
<a href="https://numpy.org/doc/stable/reference/random/generated/numpy.random.randn.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="c1"># array([ 0.74225719, -0.39754649,  0.8966088 ,  0.30346421,  0.71134092])
</span>
<span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="c1"># array([[-0.76182035, -0.51200261],
#        [ 0.51620442,  0.77368734],
#        [-0.23963806,  0.53549214],
#        [ 1.37556231, -0.87648979],
#        [ 0.51587644, -0.93696996]])
</span>
</code></pre></div></div>

<h2 id="numpyrandomrandint">numpy.random.randint</h2>
<p>범위내 int 타입의 난수를 생성하여 반환합니다.  <br />
<code class="language-plaintext highlighter-rouge">random.randint(low, high=None, size=None, dtype=int)</code>  <br />
<a href="https://numpy.org/doc/stable/reference/random/generated/numpy.random.randint.html" target="_blank">API 참조</a></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># 0~9 까지의 임의의 수 반환
</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span> <span class="c1"># 5이상 ~ 10미만의 임의의 숫자 
</span>

<span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
<span class="c1"># array([5, 3, 9, 1, 0])
</span>
<span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
<span class="c1"># array([[2, 2, 3, 4],
#        [2, 4, 2, 4]])
</span>
</code></pre></div></div>

<p><a href="https://www.youtube.com/watch?v=mirZPrWwvao" target="_blank">학습 내용 참고처</a></p>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-python-basic)</span></p>
<ul>

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_10_package/">[Python Basic] 모듈 만들기, 패키지 만들기</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_09_exception/">[Python Basic] 예외처리</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_08_class/">[Python Basic] Class</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_07_function/">[Python Basic] 함수</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_06_set/">[Python Basic] 자료형 set 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_05_dictionary/">[Python Basic] 자료형 dictionary 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_04_tuple/">[Python Basic] 자료형 tuple 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_03_list/">[Python Basic] 자료형 list 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_02_init/">[Python Basic] 기본 자료 및 조건문</a></li>
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_01_install/">[Python Basic] 설치</a></li>
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="python강좌" /><category term="lecture-python-numpy" /><category term="numpy" /><category term="manipulation" /><summary type="html"><![CDATA[이번에는 Numpy(Numerical Python) 배열을 조작하는 내용을 주로 공부해 보겠습니다.]]></summary></entry><entry><title type="html">[Python Basic] 함수</title><link href="https://kimjaehyun.co.kr/python/python_study_07_function/" rel="alternate" type="text/html" title="[Python Basic] 함수" /><published>2022-06-22T00:00:00-05:00</published><updated>2022-06-22T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_study_07_function</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_study_07_function/"><![CDATA[<h1 id="함수">함수</h1>
<h2 id="선언">선언</h2>
<p>자주 사용하는 기능을 Function으로 정의할 수 있습니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#반환값이 있는 경우
</span><span class="k">def</span> <span class="nf">함수명</span><span class="p">(</span><span class="n">인자정의</span><span class="p">)</span>
    <span class="n">함수</span> <span class="n">내용부</span>
    <span class="k">return</span> <span class="n">반환값</span>

<span class="c1">#반환값이 없는 경우
</span><span class="k">def</span> <span class="nf">함수명</span><span class="p">(</span><span class="n">인자정의</span><span class="p">)</span>
    <span class="n">함수</span> <span class="n">내용부</span>

<span class="k">def</span> <span class="nf">함수명</span><span class="p">(</span><span class="n">인자정의</span><span class="p">)</span>
    <span class="n">함수</span> <span class="n">내용부</span>
    <span class="k">return</span>      <span class="c1">#값이 없는 경우 `None`
</span>
<span class="k">def</span> <span class="nf">sum</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">):</span>
    <span class="n">s</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
    <span class="k">return</span> <span class="n">s</span>
 
<span class="n">total</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">total</span><span class="p">)</span>

</code></pre></div></div>

<p>단일 값 또는 다중 값(튜플)을 반환 할수 있습니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">sum</span><span class="p">(</span><span class="n">v1</span><span class="p">,</span> <span class="n">v2</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">v1</span><span class="o">+</span><span class="n">v2</span>

<span class="n">total</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">total</span><span class="p">)</span>

<span class="o">&gt;&gt;&gt;</span> <span class="mi">30</span>


<span class="c1">#다중값 반환 함수
</span><span class="k">def</span> <span class="nf">multi</span><span class="p">(</span><span class="n">v1</span><span class="p">,</span> <span class="n">v2</span><span class="p">):</span>
    <span class="n">s1</span> <span class="o">=</span> <span class="n">v1</span> <span class="o">+</span> <span class="n">v2</span>
    <span class="n">s2</span> <span class="o">=</span> <span class="n">v1</span> <span class="o">-</span> <span class="n">v2</span>
    <span class="k">return</span> <span class="n">s1</span><span class="p">,</span> <span class="n">s2</span>

<span class="n">t1</span><span class="p">,</span> <span class="n">t2</span> <span class="o">=</span> <span class="n">multi</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span> <span class="n">t2</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">30</span> <span class="mi">10</span>

<span class="n">t</span> <span class="o">=</span> <span class="n">multi</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">t</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">t</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</code></pre></div></div>

<h2 id="파라메터-초기값-설정">파라메터 초기값 설정</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#빈값 입력시 기본값으로 설정 
</span><span class="k">def</span> <span class="nf">sum</span><span class="p">(</span><span class="n">v1</span><span class="p">,</span> <span class="n">v2</span> <span class="o">=</span> <span class="mi">10</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">v1</span><span class="o">+</span><span class="n">v2</span>

<span class="n">s</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">15</span>
</code></pre></div></div>

<h2 id="파라메터-이름-설정">파라메터 이름 설정</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#이름으로 설정할 수 있습니다.
</span><span class="k">def</span> <span class="nf">info</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">age</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">age</span><span class="p">)</span>

<span class="n">info</span><span class="p">(</span><span class="n">age</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">'Hong Gil Dong'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">Hong</span> <span class="n">Gil</span> <span class="n">Dong</span> <span class="mi">30</span>

</code></pre></div></div>

<h2 id="가변-길이-파라메터">가변 길이 파라메터</h2>
<p>가변 파라메터의 제약사항</p>
<ul>
  <li>가변 매개변수 뒤에는 일반 매개변수 올수 없음.</li>
  <li>가변 매개변수는 한개만 사용가능함.</li>
  <li>가변 매개변수 압 일반 매개변수의 기본값은 무시된다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#가변형 파라메터 입력 
</span><span class="k">def</span> <span class="nf">keyList</span><span class="p">(</span><span class="o">*</span><span class="n">keys</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">keys</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>

<span class="n">keyList</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">3</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">4</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">5</span>

<span class="c1">#일반 파라메터 , 가변형 파라메터 입력 
</span><span class="k">def</span> <span class="nf">keyList</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="o">*</span><span class="n">keys</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">keys</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>

<span class="n">keyList</span><span class="p">(</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'a'</span> <span class="s">'b'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">3</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">4</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">5</span>

<span class="c1"># 가변형 파라메터 + 키워드 일반 파라메터
</span><span class="k">def</span> <span class="nf">keyList</span><span class="p">(</span><span class="o">*</span><span class="n">keys</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'abc'</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">keys</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">end</span><span class="p">)</span>

<span class="n">keyList</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">3</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">4</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">5</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">abc</span>

</code></pre></div></div>

<h2 id="함수내-값의-유지immutable-mutable">함수내 값의 유지(immutable, mutable)</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="nb">list</span><span class="p">):</span>
    <span class="n">i</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
    <span class="nb">list</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
 
<span class="n">k</span> <span class="o">=</span> <span class="mi">10</span>       <span class="c1"># k는 int (immutable)
</span><span class="n">l</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>  <span class="c1"># l은 리스트 (mutable)
</span> 
<span class="n">f</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">l</span><span class="p">)</span>      <span class="c1"># 함수 호출
</span><span class="k">print</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">m</span><span class="p">)</span>  <span class="c1"># 호출자 값 체크
# 출력: 10 [1, 2, 3, 0]
</span>
</code></pre></div></div>

<h1 id="python-함수-호출">python 함수 호출</h1>
<p><code class="language-plaintext highlighter-rouge">math</code> 함수를 예로 들어서 설명 합니다.</p>

<h2 id="전체-import">전체 import</h2>
<p><code class="language-plaintext highlighter-rouge">math</code> 전체를 import 후 호출 시 <code class="language-plaintext highlighter-rouge">math.xxx()</code>의 형태로 사용함.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">math</span>
<span class="n">a</span> <span class="o">=</span> <span class="n">math</span><span class="p">.</span><span class="n">fabs</span><span class="p">(</span><span class="o">-</span><span class="mi">7</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="일부-함수-import">일부 함수 import</h2>
<p><code class="language-plaintext highlighter-rouge">math</code> 전체가 아닌 일부 함수 import</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">math</span> <span class="kn">import</span> <span class="p">(</span><span class="n">acos</span><span class="p">,</span><span class="n">fabs</span><span class="p">)</span>
<span class="n">a</span> <span class="o">=</span> <span class="n">fabs</span><span class="p">(</span><span class="o">-</span><span class="mi">7</span><span class="p">)</span>    <span class="c1"># math. 을 사용하지 않음
</span><span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

</code></pre></div></div>

<h2 id="일부한개-함수-import">일부(한개) 함수 import</h2>
<p><code class="language-plaintext highlighter-rouge">math</code> 전체가 아닌 일부 함수 import</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">math</span> <span class="kn">import</span> <span class="n">fabs</span>
<span class="n">a</span> <span class="o">=</span> <span class="n">fabs</span><span class="p">(</span><span class="o">-</span><span class="mi">7</span><span class="p">)</span>    <span class="c1"># math. 을 사용하지 않음
</span><span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

</code></pre></div></div>

<h2 id="import-alias">import alias</h2>
<p><code class="language-plaintext highlighter-rouge">math</code> 전체가 아닌 일부 함수 import</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">math</span> <span class="kn">import</span> <span class="n">fabs</span> <span class="k">as</span> <span class="n">f</span>
<span class="n">a</span> <span class="o">=</span> <span class="n">f</span><span class="p">(</span><span class="o">-</span><span class="mi">7</span><span class="p">)</span>    <span class="c1"># f로 사용함
</span><span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

</code></pre></div></div>

<h2 id="함수가-가진-목록">함수가 가진 목록</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">dir</span><span class="p">(</span><span class="n">math</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="python-내장-함수">python 내장 함수</h1>
<p>다음은 별도의 import없이 사용이 가능한 자주 사용하는 내장 함수 입니다.</p>
<ul>
  <li>len()</li>
  <li>type()</li>
  <li>int()</li>
  <li>str()</li>
  <li>round()</li>
  <li>abs()</li>
  <li>max()</li>
  <li>min()</li>
  <li>sum()</li>
  <li>sorted() , sort()  -&gt;   list.sort(), sorted(list)</li>
  <li>range()</li>
  <li>chr()</li>
  <li>ord()</li>
  <li>isalpha() -&gt; ‘a’.isalpha() True</li>
  <li>isalnum() -&gt; ‘123’.isalnum() True</li>
  <li>eval()  -&gt; eval(‘1+2’) , eval(‘round(1.2)’)</li>
</ul>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-python-basic)</span></p>
<ul>

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_10_package/">[Python Basic] 모듈 만들기, 패키지 만들기</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_09_exception/">[Python Basic] 예외처리</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_08_class/">[Python Basic] Class</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_07_function/">[Python Basic] 함수</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_06_set/">[Python Basic] 자료형 set 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_05_dictionary/">[Python Basic] 자료형 dictionary 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_04_tuple/">[Python Basic] 자료형 tuple 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_03_list/">[Python Basic] 자료형 list 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_02_init/">[Python Basic] 기본 자료 및 조건문</a></li>
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_01_install/">[Python Basic] 설치</a></li>
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="python강좌" /><category term="초급" /><category term="lecture-python-basic" /><category term="function" /><summary type="html"><![CDATA[함수 선언 자주 사용하는 기능을 Function으로 정의할 수 있습니다. ```python #반환값이 있는 경우 def 함수명(인자정의) 함수 내용부 return 반환값]]></summary></entry><entry><title type="html">[Python Basic] Class</title><link href="https://kimjaehyun.co.kr/python/python_study_08_class/" rel="alternate" type="text/html" title="[Python Basic] Class" /><published>2022-06-22T00:00:00-05:00</published><updated>2022-06-22T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_study_08_class</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_study_08_class/"><![CDATA[<p>객체 지향 프로그램에서 사용하는 클래스를 학습해 보겠습니다.</p>

<h1 id="class">Class</h1>
<h2 id="형태">형태</h2>
<p><code class="language-plaintext highlighter-rouge">class 클래스이름</code>으로 클래스를 생성 할 수 있습니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">클래스이름</span><span class="p">:</span>
    <span class="n">클래스</span> <span class="n">내용</span>        

<span class="c1">#내용이 빈 클래스를 만들 경우.
</span><span class="k">class</span> <span class="nc">클래스이름</span><span class="p">:</span>
    <span class="k">pass</span>        
</code></pre></div></div>

<h2 id="사용법">사용법</h2>
<p>인스턴스 형태로 생성하여 사용 합니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">변수</span>  <span class="o">=</span> <span class="n">클래스이름</span><span class="p">();</span>
</code></pre></div></div>

<h2 id="생성자-소멸자-사용자-함수">생성자, 소멸자, 사용자 함수</h2>
<p>생성자의 첫번째 매개 변수는 <code class="language-plaintext highlighter-rouge">self</code> 를 꼭 포함해야 한다.  <br />
클래스 내부에 <code class="language-plaintext highlighter-rouge">__xxx__</code> 로 구성된 메소드는 특수 기능으로 존재하는 메소드 입니다.
<code class="language-plaintext highlighter-rouge">__str__</code>, <code class="language-plaintext highlighter-rouge">__eq__</code>,<code class="language-plaintext highlighter-rouge">__dir__</code> 등등</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">클래스이름</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sample</span><span class="p">,</span> <span class="n">사용자</span> <span class="n">정의</span> <span class="n">매개변수</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">sample</span> <span class="o">=</span> <span class="n">sample</span>
        <span class="k">pass</span>

    <span class="k">def</span> <span class="nf">사용자함수명</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">사용자</span> <span class="n">정의</span> <span class="n">매개변수</span><span class="p">):</span>
        <span class="k">pass</span>

    <span class="k">def</span> <span class="nf">__del__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'객체가 소멸됩니다.'</span><span class="p">)</span>

</code></pre></div></div>

<h2 id="생성-예-및-소속-확인방법">생성 예 및 소속 확인방법</h2>
<p><code class="language-plaintext highlighter-rouge">isinstance(인스턴스, 클래스)</code> 를 사용해서 소속을 확인 할 수 있습니다. <br />
<code class="language-plaintext highlighter-rouge">type(인스턴스) == 클래스</code> 로도 확인 할 수 있습니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">class</span> <span class="nc">Car</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">pass</span>

<span class="n">truck</span> <span class="o">=</span> <span class="n">Car</span><span class="p">()</span>  <span class="c1">#객체 생성
</span>
<span class="k">print</span><span class="p">(</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">truck</span><span class="p">,</span> <span class="n">Car</span><span class="p">))</span> <span class="c1"># True
</span><span class="k">print</span><span class="p">(</span> <span class="nb">type</span><span class="p">(</span><span class="n">truck</span><span class="p">)</span> <span class="o">==</span> <span class="n">Car</span><span class="p">)</span> <span class="c1"># True
</span></code></pre></div></div>

<h2 id="sample-code">Sample Code</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Car</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
    <span class="k">def</span> <span class="nf">setDoor</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">door</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">door</span> <span class="o">=</span> <span class="n">door</span>
    <span class="k">def</span> <span class="nf">getDoor</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">door</span>
    <span class="k">def</span> <span class="nf">getFeatures</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">pass</span>

<span class="n">c</span> <span class="o">=</span> <span class="n">Car</span><span class="p">(</span><span class="s">'NewCar'</span><span class="p">)</span>
<span class="n">c</span><span class="p">.</span><span class="n">setDoor</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">c</span><span class="p">.</span><span class="n">getDoor</span><span class="p">())</span> <span class="c1"># 4
</span></code></pre></div></div>

<h1 id="상속">상속</h1>
<p>부모 클래스를 상속 합니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Bus</span> <span class="p">(</span><span class="n">Car</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">getFeatures</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"this is a bus:"</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="p">)</span>
 
<span class="k">class</span> <span class="nc">Truck</span> <span class="p">(</span><span class="n">Car</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">getFeatures</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"this is a Truck:"</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="p">)</span>

<span class="n">b</span> <span class="o">=</span> <span class="n">Bus</span><span class="p">(</span><span class="s">'시내버스'</span><span class="p">)</span> 
<span class="n">t</span> <span class="o">=</span> <span class="n">Truck</span><span class="p">(</span><span class="s">'화물트럭'</span><span class="p">)</span>

<span class="nb">list</span> <span class="o">=</span> <span class="p">[</span><span class="n">b</span><span class="p">,</span> <span class="n">t</span><span class="p">]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">:</span>
    <span class="n">i</span><span class="p">.</span><span class="n">getFeatures</span><span class="p">()</span>

<span class="c1">#출력
</span><span class="n">this</span> <span class="ow">is</span> <span class="n">a</span> <span class="n">bus</span><span class="p">:</span> <span class="n">시내버스</span>
<span class="n">this</span> <span class="ow">is</span> <span class="n">a</span> <span class="n">Truck</span><span class="p">:</span> <span class="n">화물트럭</span>

</code></pre></div></div>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-python-basic)</span></p>
<ul>

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_10_package/">[Python Basic] 모듈 만들기, 패키지 만들기</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_09_exception/">[Python Basic] 예외처리</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_08_class/">[Python Basic] Class</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_07_function/">[Python Basic] 함수</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_06_set/">[Python Basic] 자료형 set 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_05_dictionary/">[Python Basic] 자료형 dictionary 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_04_tuple/">[Python Basic] 자료형 tuple 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_03_list/">[Python Basic] 자료형 list 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_02_init/">[Python Basic] 기본 자료 및 조건문</a></li>
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_01_install/">[Python Basic] 설치</a></li>
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="python강좌" /><category term="초급" /><category term="lecture-python-basic" /><category term="class" /><summary type="html"><![CDATA[객체 지향 프로그램에서 사용하는 클래스를 학습해 보겠습니다.]]></summary></entry><entry><title type="html">[Python Basic] 모듈 만들기, 패키지 만들기</title><link href="https://kimjaehyun.co.kr/python/python_study_10_package/" rel="alternate" type="text/html" title="[Python Basic] 모듈 만들기, 패키지 만들기" /><published>2022-06-22T00:00:00-05:00</published><updated>2022-06-22T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_study_10_package</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_study_10_package/"><![CDATA[<p>Python 만든 함수를 모듈화 또는 패키지화를 만들어 봅시다.  <br />
자주 사용하는 함수, 변수 또는 클래스 등을 재사용성을 높이기 위해서 모듈화를 진행할 수 있습니다.</p>

<h1 id="모듈-만들기">모듈 만들기</h1>
<p>함수에서 작성한 아래 함수를 <code class="language-plaintext highlighter-rouge">module.py</code> 로 작성합니다.</p>
<h2 id="modulepy">module.py</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">def</span> <span class="nf">sum</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">):</span>
    <span class="n">s</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
    <span class="k">return</span> <span class="n">s</span>

</code></pre></div></div>

<p>모듈을 사용할 <code class="language-plaintext highlighter-rouge">main.py</code> 를 만듭니다. <br />
<code class="language-plaintext highlighter-rouge">module.py</code> 와 <code class="language-plaintext highlighter-rouge">main.py</code>는 동일 경로에 위치 합니다.</p>

<h2 id="mainpy">main.py</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">module</span> <span class="k">as</span> <span class="n">m</span>

<span class="n">c</span> <span class="o">=</span> <span class="n">m</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="c1"># 3
</span></code></pre></div></div>

<h1 id="패키지-만들기">패키지 만들기</h1>
<h2 id="구성-형태">구성 형태</h2>
<p>위 모듈 만들기에서 만들어지는 모듈파일이 여러개로 구성될때, 여러 모듈을 기능에 맞게 패키지로 만들수 있습니다.    <br />
예를 들어 다음 모듈을 만들었다고 할때, 하나의 특정 폴더 <code class="language-plaintext highlighter-rouge">custom</code> 밑에 위치 시킵니다.</p>
<ul>
  <li>\main.py</li>
  <li>\custom\module_sum.py</li>
  <li>\custom\module_min.py</li>
  <li>\custom\module_max.py</li>
  <li>\custom\module_avg.py</li>
</ul>

<p>위와 같은 경우 아래와 같이 사용할 수 있습니다.</p>
<h2 id="mainpy-1">main.py</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">custom.module_sum</span> <span class="k">as</span> <span class="n">p</span>

<span class="n">c</span> <span class="o">=</span> <span class="n">p</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="c1"># 3
</span></code></pre></div></div>
<h2 id="main-실행-구성">main 실행 구성</h2>
<p>실행 메인이 되는 함수를 파악하기 위해서 <code class="language-plaintext highlighter-rouge">__name__</code> 속성을 통해서 실행 주체를 확인 할 수 있습니다. <br />
<code class="language-plaintext highlighter-rouge">main()</code> 함수를 <code class="language-plaintext highlighter-rouge">__name__ == "__main__"</code> 조건에 맞을 경우에만 실행하도록 할 수 있습니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">custom.module_sum</span> <span class="k">as</span> <span class="n">p</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">c</span> <span class="o">=</span> <span class="n">p</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="c1"># 3
</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>  
    
</code></pre></div></div>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-python-basic)</span></p>
<ul>

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_10_package/">[Python Basic] 모듈 만들기, 패키지 만들기</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_09_exception/">[Python Basic] 예외처리</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_08_class/">[Python Basic] Class</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_07_function/">[Python Basic] 함수</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_06_set/">[Python Basic] 자료형 set 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_05_dictionary/">[Python Basic] 자료형 dictionary 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_04_tuple/">[Python Basic] 자료형 tuple 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_03_list/">[Python Basic] 자료형 list 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_02_init/">[Python Basic] 기본 자료 및 조건문</a></li>
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_01_install/">[Python Basic] 설치</a></li>
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="python강좌" /><category term="초급" /><category term="lecture-python-basic" /><category term="package" /><summary type="html"><![CDATA[Python 만든 함수를 모듈화 또는 패키지화를 만들어 봅시다. 자주 사용하는 함수, 변수 또는 클래스 등을 재사용성을 높이기 위해서 모듈화를 진행할 수 있습니다.]]></summary></entry><entry><title type="html">[Python Basic] 예외처리</title><link href="https://kimjaehyun.co.kr/python/python_study_09_exception/" rel="alternate" type="text/html" title="[Python Basic] 예외처리" /><published>2022-06-22T00:00:00-05:00</published><updated>2022-06-22T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_study_09_exception</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_study_09_exception/"><![CDATA[<p>Python에서 예외 처리 방법에 대해서 알아 봅시다.</p>

<h1 id="try--except">try ~ except</h1>
<h2 id="형태">형태</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">try</span><span class="p">:</span>
    <span class="c1"># 실행 로직
</span>    <span class="c1"># 실행 로직
</span><span class="k">except</span><span class="p">:</span>                     
    <span class="c1"># 에러 발생시 진행 로직
</span><span class="k">else</span><span class="p">:</span>
    <span class="c1"># 예외가 발생하지 않을떄 실행하는 영역
</span><span class="k">finally</span><span class="p">:</span>
    <span class="c1"># 최종 실행이 보장되는 영역
</span></code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">except:</code> 은 <code class="language-plaintext highlighter-rouge">except 예외클래스 as 변수:</code> 형태로 예외 객체 별로 분리 할 수 있습니다.</p>

<h2 id="sample-code">Sample Code</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">try</span><span class="p">:</span>
    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'f.txt'</span><span class="p">,</span> <span class="s">"w"</span><span class="p">)</span>
    <span class="n">f</span><span class="p">.</span><span class="n">test</span><span class="p">()</span> <span class="c1">#없는 함수 호출
</span><span class="k">except</span> <span class="nb">FileExistsError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
    <span class="k">pass</span>        <span class="c1"># pass 아무 일도 하지 않음 처리
</span><span class="k">except</span> <span class="nb">IOError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>    
    <span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">e</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
<span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">e</span><span class="p">))</span>
    <span class="k">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"정상 실행"</span><span class="p">)</span>
<span class="k">finally</span><span class="p">:</span>
    <span class="n">f</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div></div>

<h1 id="raise-예외-발생">raise 예외 발생</h1>
<p>임의로 예외를 발생 시킬 수 있습니다.  <br />
<code class="language-plaintext highlighter-rouge">raise 예외 객체</code> 형태로 발생시킵니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">try</span><span class="p">:</span>
    <span class="c1"># 실행 로직
</span>    <span class="k">raise</span> <span class="nb">Exception</span><span class="p">(</span><span class="s">'사용자 Error'</span><span class="p">)</span>
    <span class="c1"># 실행 로직
</span><span class="k">except</span><span class="p">:</span>                     
    <span class="c1"># 에러 발생시 진행 로직
</span><span class="k">else</span><span class="p">:</span>
    <span class="c1"># 예외가 발생하지 않을떄 실행하는 영역
</span><span class="k">finally</span><span class="p">:</span>
    <span class="c1"># 최종 실행이 보장되는 영역
</span></code></pre></div></div>

<h1 id="사용자-정의-예외-클래스">사용자 정의 예외 클래스</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">CustomException</span><span class="p">(</span><span class="nb">Exception</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">code</span><span class="p">,</span> <span class="n">msg</span><span class="p">):</span>
        <span class="nb">Exception</span><span class="p">.</span><span class="n">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">code</span> <span class="o">=</span> <span class="n">code</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">msg</span> <span class="o">=</span> <span class="n">msg</span>
    
    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="nb">str</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">code</span><span class="p">)</span><span class="o">+</span><span class="bp">self</span><span class="p">.</span><span class="n">msg</span>

<span class="k">raise</span> <span class="n">CustomException</span><span class="p">(</span><span class="mi">500</span><span class="p">,</span><span class="s">'InternalError'</span><span class="p">)</span>
</code></pre></div></div>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-python-basic)</span></p>
<ul>

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_10_package/">[Python Basic] 모듈 만들기, 패키지 만들기</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_09_exception/">[Python Basic] 예외처리</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_08_class/">[Python Basic] Class</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_07_function/">[Python Basic] 함수</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_06_set/">[Python Basic] 자료형 set 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_05_dictionary/">[Python Basic] 자료형 dictionary 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_04_tuple/">[Python Basic] 자료형 tuple 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_03_list/">[Python Basic] 자료형 list 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_02_init/">[Python Basic] 기본 자료 및 조건문</a></li>
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_01_install/">[Python Basic] 설치</a></li>
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="python강좌" /><category term="초급" /><category term="lecture-python-basic" /><category term="예외처리" /><summary type="html"><![CDATA[Python에서 예외 처리 방법에 대해서 알아 봅시다.]]></summary></entry><entry><title type="html">[Python Basic] 자료형 set 타입</title><link href="https://kimjaehyun.co.kr/python/python_study_06_set/" rel="alternate" type="text/html" title="[Python Basic] 자료형 set 타입" /><published>2022-06-22T00:00:00-05:00</published><updated>2022-06-22T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_study_06_set</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_study_06_set/"><![CDATA[<p>순서와 중복이 보장되지 않는 자료형 입니다.</p>

<h1 id="list-vs-tuple-vs-dictionary-vs-set">list vs tuple vs dictionary vs set</h1>

<table>
  <thead>
    <tr>
      <th style="text-align: center"> </th>
      <th style="text-align: center">list</th>
      <th style="text-align: center">tuple</th>
      <th style="text-align: center">dictionary</th>
      <th style="text-align: center">set</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">순서</td>
      <td style="text-align: center">O</td>
      <td style="text-align: center">O</td>
      <td style="text-align: center">X</td>
      <td style="text-align: center">X</td>
    </tr>
    <tr>
      <td style="text-align: center">중복</td>
      <td style="text-align: center">O</td>
      <td style="text-align: center">O</td>
      <td style="text-align: center">X</td>
      <td style="text-align: center">X</td>
    </tr>
    <tr>
      <td style="text-align: center">변경</td>
      <td style="text-align: center">O</td>
      <td style="text-align: center">X</td>
      <td style="text-align: center">O</td>
      <td style="text-align: center">O</td>
    </tr>
    <tr>
      <td style="text-align: center">형태</td>
      <td style="text-align: center">[1,2,3,4,5]</td>
      <td style="text-align: center">(1,2,3,4,5)</td>
      <td style="text-align: center">{“java”:10, “key”:5}</td>
      <td style="text-align: center">{1, 2, 3}</td>
    </tr>
    <tr>
      <td style="text-align: center">type</td>
      <td style="text-align: center">&lt;class ‘list’&gt;</td>
      <td style="text-align: center">&lt;class ‘tuple’&gt;</td>
      <td style="text-align: center">&lt;class ‘dict’&gt;</td>
      <td style="text-align: center">&lt;class ‘set’&gt;</td>
    </tr>
  </tbody>
</table>

<p>형태 <code class="language-plaintext highlighter-rouge">{값, 값,...., 값}</code> 의 형태의 자료형  <br />
예)  <br />
 <code class="language-plaintext highlighter-rouge">a = {1, 2, 3, 4, 5}</code> <br />
 <code class="language-plaintext highlighter-rouge">a = {1, 2, 3, 3, 4, 5}</code> - 중복 <code class="language-plaintext highlighter-rouge">3</code> 값 포함 불가능</p>

<h1 id="기본-사용법">기본 사용법</h1>
<h2 id="선언">선언</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>  <span class="c1"># {1, 2, 3, 4, 5}
</span>

<span class="n">s</span> <span class="o">=</span> <span class="p">{</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)}</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="c1"># {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
</span>
</code></pre></div></div>

<h2 id="추가-삭제">추가, 삭제</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">}</span>
<span class="n">a</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>  <span class="c1"># {1, 2, 3, 4, 5, 6}
</span>
<span class="c1">#여러개 추가
</span><span class="n">a</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">})</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>  <span class="c1"># {1, 2, 3, 4, 5, 6, 7, 8, 9}
</span>
<span class="c1">#한개 삭제
</span><span class="n">a</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>  <span class="c1"># {1, 2, 4, 5, 6, 7, 8, 9}
</span>
<span class="c1">#모두 삭제
</span><span class="n">a</span><span class="p">.</span><span class="n">clear</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>  <span class="c1"># {}
</span></code></pre></div></div>

<h2 id="연산">연산</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">}</span>
<span class="n">b</span> <span class="o">=</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">}</span>

<span class="c1"># 합집합
</span><span class="n">u</span> <span class="o">=</span> <span class="n">a</span> <span class="o">|</span> <span class="n">b</span>
<span class="c1"># u = a.union(b)
</span><span class="k">print</span><span class="p">(</span><span class="n">u</span><span class="p">)</span> <span class="c1"># {1, 2, 3, 4, 5, 6, 7}
</span>
<span class="c1"># 교집합
</span><span class="n">i</span> <span class="o">=</span> <span class="n">a</span> <span class="o">&amp;</span> <span class="n">b</span>
<span class="c1"># i = a.intersection(b)
</span><span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="c1">#  {3, 4, 5}
</span>  
<span class="c1"># 차집합
</span><span class="n">d</span> <span class="o">=</span> <span class="n">a</span> <span class="o">-</span> <span class="n">b</span>
<span class="c1"># d = a.difference(b)
</span><span class="k">print</span><span class="p">(</span><span class="n">d</span><span class="p">)</span> <span class="c1"># {1, 2}
</span>
</code></pre></div></div>

<h2 id="set-의-길이-len">set 의 길이 len</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">a</span><span class="p">))</span> <span class="c1"># len
</span>
</code></pre></div></div>

<h2 id="list-to-set-변환">list to set 변환</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
<span class="n">s</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>   <span class="c1"># {1, 2, 3, 4, 5}
</span>
</code></pre></div></div>

<h2 id="string-to-set">string to set</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">str</span> <span class="o">=</span> <span class="s">'ABCDE'</span>
<span class="n">s</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span> <span class="c1"># {'C', 'E', 'B', 'D', 'A'}
</span>

</code></pre></div></div>

<h2 id="list-to-set">list to set</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">list</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span> <span class="c1"># ['a','b','c','d']
</span>
<span class="n">s</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span> <span class="c1"># {'a','b','c','d'}
</span><span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>

</code></pre></div></div>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-python-basic)</span></p>
<ul>

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_10_package/">[Python Basic] 모듈 만들기, 패키지 만들기</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_09_exception/">[Python Basic] 예외처리</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_08_class/">[Python Basic] Class</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_07_function/">[Python Basic] 함수</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_06_set/">[Python Basic] 자료형 set 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_05_dictionary/">[Python Basic] 자료형 dictionary 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_04_tuple/">[Python Basic] 자료형 tuple 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_03_list/">[Python Basic] 자료형 list 타입</a></li>
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_02_init/">[Python Basic] 기본 자료 및 조건문</a></li>
             
        
      

    
        
             
        
             
        
             
        
              
                <li><a href="/python/python_study_01_install/">[Python Basic] 설치</a></li>
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="python강좌" /><category term="초급" /><category term="lecture-python-basic" /><category term="set" /><summary type="html"><![CDATA[순서와 중복이 보장되지 않는 자료형 입니다.]]></summary></entry></feed>