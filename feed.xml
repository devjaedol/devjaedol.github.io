<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://kimjaehyun.co.kr/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kimjaehyun.co.kr/" rel="alternate" type="text/html" /><updated>2022-06-09T09:16:45-05:00</updated><id>https://kimjaehyun.co.kr/feed.xml</id><title type="html">꿰보노트</title><subtitle>프로그래밍과 소프트웨어 정보 및 클라우드 개발에 대한 정보를 공유하는 블로그 입니다. 꿰보노트 / 꿰보Note / 꿰어야 보배</subtitle><author><name>devjaedol</name></author><entry><title type="html">[백준 2667]단지번호붙이기, DFS</title><link href="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q2667-dfs/" rel="alternate" type="text/html" title="[백준 2667]단지번호붙이기, DFS" /><published>2022-06-09T00:00:00-05:00</published><updated>2022-06-09T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q2667-dfs</id><content type="html" xml:base="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q2667-dfs/"><![CDATA[<p>Map이 주어지고, 탐색을 통해서 넓이나 지역의 수량을 찾는 문제 유형.</p>

<p><a href="https://www.acmicpc.net/problem/2667" target="_blank">백준 Q2667</a></p>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

	<span class="kd">static</span> <span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	<span class="c1">//static Stack&lt;Integer[]&gt; st;</span>
	<span class="kd">static</span> <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">dfs</span><span class="o">(</span><span class="kt">int</span> <span class="n">r</span><span class="o">,</span> <span class="kt">int</span> <span class="n">c</span><span class="o">,</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">ck</span><span class="o">,</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">map</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">count</span><span class="o">++;</span>
		<span class="n">ck</span><span class="o">[</span><span class="n">r</span><span class="o">][</span><span class="n">c</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="c1">//방문 처리</span>
		
		<span class="kt">int</span><span class="o">[]</span> <span class="n">_r</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">,-</span><span class="mi">1</span><span class="o">};</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">_c</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span><span class="mi">1</span><span class="o">,-</span><span class="mi">1</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">};</span>
	
		<span class="c1">//st.add(new Integer[] {r, c});	</span>
		<span class="c1">//Integer[] curr = st.pop();</span>

		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">4</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="kt">int</span> <span class="n">new_r</span> <span class="o">=</span> <span class="n">r</span> <span class="o">+</span> <span class="n">_r</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
			<span class="kt">int</span> <span class="n">new_c</span> <span class="o">=</span> <span class="n">c</span> <span class="o">+</span> <span class="n">_c</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
			<span class="k">if</span><span class="o">(</span><span class="n">new_r</span> <span class="o">&gt;</span> <span class="no">N</span> <span class="o">||</span> <span class="n">new_c</span> <span class="o">&gt;</span><span class="no">N</span> <span class="o">||</span> <span class="n">new_r</span> <span class="o">&lt;</span><span class="mi">0</span> <span class="o">||</span> <span class="n">new_c</span><span class="o">&lt;</span><span class="mi">0</span> <span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">ck</span><span class="o">[</span><span class="n">new_r</span><span class="o">][</span><span class="n">new_c</span><span class="o">]==</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">map</span><span class="o">[</span><span class="n">new_r</span><span class="o">][</span><span class="n">new_c</span><span class="o">]==</span><span class="mi">1</span><span class="o">){</span>
				<span class="n">dfs</span><span class="o">(</span><span class="n">new_r</span><span class="o">,</span> <span class="n">new_c</span><span class="o">,</span> <span class="n">ck</span><span class="o">,</span> <span class="n">map</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>
		
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
	

		<span class="k">try</span> <span class="o">{</span>
			<span class="c1">// 입력 처리</span>
			<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
			<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
			
			<span class="no">N</span> 	<span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			
			<span class="kt">int</span><span class="o">[][]</span> <span class="n">map</span>	<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">][</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			<span class="kt">int</span><span class="o">[][]</span> <span class="n">ck</span>	<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">][</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			
			<span class="c1">//st = new Stack&lt;Integer[]&gt;();</span>
			 
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
					<span class="c1">//map[i][j+1] = str.charAt(j) - '0'; //방법 1</span>
					<span class="n">map</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Character</span><span class="o">.</span><span class="na">getNumericValue</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">));</span> <span class="c1">//방법 2</span>
				<span class="o">}</span>
			<span class="o">}</span>
	
			<span class="c1">//System.out.println(Arrays.toString(map));</span>
			
			<span class="kt">int</span> <span class="n">zone</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
			<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">al</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">();</span>
			
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>	
					<span class="c1">//System.out.format("%d, %d \n",i,j);</span>
					<span class="k">if</span><span class="o">(</span> <span class="n">map</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">ck</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">){</span> 
						<span class="n">zone</span><span class="o">++;</span>
						<span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
						<span class="n">dfs</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">j</span><span class="o">,</span> <span class="n">ck</span><span class="o">,</span> <span class="n">map</span><span class="o">);</span>						
						<span class="n">al</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">count</span><span class="o">);</span>
					<span class="o">}</span>
					
				<span class="o">}</span>
			<span class="o">}</span>
			
			<span class="c1">//Arrays.sort();</span>
			<span class="nc">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">al</span><span class="o">);</span>
			
<span class="c1">//			System.out.println("Zone 	: "+zone);</span>
<span class="c1">//			System.out.println("Count 	: "+al.toString());</span>
<span class="c1">//			System.out.println("END");</span>
			
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">zone</span><span class="o">);</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">al</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++)</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">al</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>
	
	<span class="o">}</span>
<span class="o">}</span>
<span class="cm">/*
입력
7
0110100
0110101
1110101
0000111
0100000
0111110
0111000

출력
3
7
8
9

*/</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="baekjoon" /><category term="java" /><category term="DFS" /><category term="깊이탐색" /><category term="Q2667" /><category term="백준2667" /><summary type="html"><![CDATA[Map이 주어지고, 탐색을 통해서 넓이나 지역의 수량을 찾는 문제 유형.]]></summary></entry><entry><title type="html">[백준 1926]그림, BFS</title><link href="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1926-bfs/" rel="alternate" type="text/html" title="[백준 1926]그림, BFS" /><published>2022-06-04T00:00:00-05:00</published><updated>2022-06-04T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1926-bfs</id><content type="html" xml:base="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1926-bfs/"><![CDATA[<p>Map이 주어지고, 탐색을 통해서 넓이나 길을 찾는 문제 유형.</p>

<p><a href="https://www.acmicpc.net/problem/1926" target="_blank">백준 Q1926</a></p>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Queue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="k">try</span> <span class="o">{</span>
			<span class="c1">// 입력 처리</span>
			<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
			<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
			
			<span class="kt">int</span> <span class="no">R</span> 	<span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			<span class="kt">int</span> <span class="no">C</span> 	<span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			
			<span class="kt">int</span><span class="o">[][]</span> <span class="n">map</span>	<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">R</span><span class="o">+</span><span class="mi">1</span><span class="o">][</span><span class="no">C</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			<span class="kt">int</span><span class="o">[][]</span> <span class="n">ck</span>	<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">R</span><span class="o">+</span><span class="mi">1</span><span class="o">][</span><span class="no">C</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">R</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="no">C</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
					<span class="n">map</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="o">}</span>
			<span class="o">}</span>
			
			<span class="kt">int</span><span class="o">[]</span> <span class="n">dx</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">0</span><span class="o">,-</span><span class="mi">1</span><span class="o">,</span><span class="mi">0</span><span class="o">};</span>
			<span class="kt">int</span><span class="o">[]</span> <span class="n">dy</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">0</span><span class="o">,-</span><span class="mi">1</span><span class="o">};</span>
			
			
			<span class="kt">int</span> <span class="n">max_zone</span> 	<span class="o">=</span> <span class="mi">0</span><span class="o">;</span><span class="c1">//영역의 갯수</span>
			<span class="kt">int</span> <span class="n">max_count</span>	<span class="o">=</span> <span class="mi">0</span><span class="o">;</span><span class="c1">//최대 영역의 수</span>
			
			<span class="nc">Queue</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">[]&gt;</span> <span class="n">q</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">();</span>
			
			
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">R</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="no">C</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
					
					<span class="kt">int</span> <span class="n">temp_count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
					
					<span class="k">if</span><span class="o">(</span> <span class="n">map</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">ck</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="mi">0</span><span class="o">){</span>
						<span class="n">ck</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
						<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span><span class="n">i</span><span class="o">,</span><span class="n">j</span><span class="o">});</span> <span class="c1">// 행, 열</span>
						<span class="n">max_zone</span><span class="o">++;</span>
						<span class="n">temp_count</span><span class="o">++;</span>
					<span class="o">}</span><span class="c1">//end if</span>
					
					<span class="k">while</span><span class="o">(!</span> <span class="n">q</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">)</span> <span class="o">{</span>
						<span class="kt">int</span><span class="o">[]</span> <span class="n">cur</span>  	<span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
						<span class="kt">int</span> <span class="n">r</span> 		<span class="o">=</span> <span class="n">cur</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
						<span class="kt">int</span> <span class="n">c</span> 		<span class="o">=</span> <span class="n">cur</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
						
						<span class="c1">//현재 방문 처리</span>
						<span class="c1">//ck[r][c] 	= 1;</span>
						
						<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="o">;</span><span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
							<span class="kt">int</span> <span class="n">new_r</span> <span class="o">=</span> <span class="n">r</span> <span class="o">+</span> <span class="n">dy</span><span class="o">[</span><span class="n">k</span><span class="o">];</span>
							<span class="kt">int</span> <span class="n">new_c</span> <span class="o">=</span> <span class="n">c</span> <span class="o">+</span> <span class="n">dx</span><span class="o">[</span><span class="n">k</span><span class="o">];</span>
							
							<span class="k">if</span><span class="o">(</span> <span class="n">new_c</span> <span class="o">&gt;</span> <span class="no">C</span> <span class="o">||</span> <span class="n">new_c</span> <span class="o">&lt;</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">new_r</span> <span class="o">&gt;</span> <span class="no">R</span> <span class="o">||</span> <span class="n">new_r</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
							
							<span class="c1">//System.out.format("%d, %d\n",new_c,new_r);</span>
							
							<span class="k">if</span><span class="o">(</span> <span class="n">map</span><span class="o">[</span><span class="n">new_r</span><span class="o">][</span><span class="n">new_c</span><span class="o">]</span> <span class="o">==</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">ck</span><span class="o">[</span><span class="n">new_r</span><span class="o">][</span><span class="n">new_c</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">){</span> <span class="c1">//ck[행][열]</span>
								<span class="n">ck</span><span class="o">[</span><span class="n">new_r</span><span class="o">][</span><span class="n">new_c</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
								<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span><span class="n">new_r</span><span class="o">,</span><span class="n">new_c</span><span class="o">});</span>
								<span class="n">temp_count</span><span class="o">++;</span>
							<span class="o">}</span>
						<span class="o">}</span>
						
						<span class="n">max_count</span>	<span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">max_count</span><span class="o">,</span> <span class="n">temp_count</span><span class="o">);</span>
					<span class="o">}</span><span class="c1">//while</span>
					
					
				<span class="o">}</span><span class="c1">//end for</span>
			<span class="o">}</span><span class="c1">//end for</span>
			
			
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">max_zone</span><span class="o">);</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">max_count</span><span class="o">);</span>
			
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>
	
	
	<span class="o">}</span>
<span class="o">}</span>
<span class="cm">/*
입력
6 5
1 1 0 1 1
0 1 1 0 0
0 0 0 0 0
1 0 1 1 1
0 0 1 1 1
0 0 1 1 1

출력
4
9

*/</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="baekjoon" /><category term="java" /><category term="BFS" /><category term="넓이탐색" /><category term="Q1926" /><category term="백준1926" /><summary type="html"><![CDATA[Map이 주어지고, 탐색을 통해서 넓이나 길을 찾는 문제 유형.]]></summary></entry><entry><title type="html">[백준 1948]임계경로, Topology Sort</title><link href="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1948-topology/" rel="alternate" type="text/html" title="[백준 1948]임계경로, Topology Sort" /><published>2022-06-04T00:00:00-05:00</published><updated>2022-06-04T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1948-topology</id><content type="html" xml:base="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1948-topology/"><![CDATA[<p>토플로지 관련 줄세우기 문제.   <br />
원리 알고리즘은 알고리즘 내용 참조.</p>

<p>임계경로를 구하는 문제로, 임계 경로란 A에서 B지점 까지 가는 최대 소요 시간이 걸리는 경로를 임계경로라고 한다.(최대값이 소모되는 길)</p>

<p><a href="https://www.acmicpc.net/problem/1948" target="_blank">백준 Q1948</a></p>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Queue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">try</span> <span class="o">{</span>
			<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
			<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
			
			<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			<span class="kt">int</span> <span class="no">M</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			
			<span class="kt">int</span><span class="o">[]</span> <span class="n">line</span> 		<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			<span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">q</span><span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">();</span>
			<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;[]</span> <span class="n">al</span>	<span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span>
				<span class="n">al</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">();</span>
			
			<span class="c1">//System.out.format("N: %d M: %d \n",N,M);</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="no">M</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">st</span> 	<span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
				<span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="c1">//System.out.format("%d %d \n",s,e);</span>
				<span class="n">al</span><span class="o">[</span><span class="n">s</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
				<span class="n">line</span><span class="o">[</span><span class="n">e</span><span class="o">]++;</span> 
			<span class="o">}</span>
			
			<span class="c1">//line 이 0인 item을 q에 넣는다.</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">line</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
					<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			
			<span class="k">while</span><span class="o">(!</span><span class="n">q</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
				<span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>
				
				<span class="c1">//연결 선을 빼면서 line을 제거, 제거후에 0인경우 q에 입력</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">al</span><span class="o">[</span><span class="n">t</span><span class="o">].</span><span class="na">size</span><span class="o">()</span> <span class="o">;</span> <span class="n">i</span><span class="o">++</span> <span class="o">)</span> <span class="o">{</span>
					<span class="kt">int</span> <span class="n">sub</span> <span class="o">=</span> <span class="n">al</span><span class="o">[</span><span class="n">t</span><span class="o">].</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">intValue</span><span class="o">();</span>
					<span class="k">if</span><span class="o">(--</span><span class="n">line</span><span class="o">[</span><span class="n">sub</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">){</span>
						<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">sub</span><span class="o">);</span>
					<span class="o">}</span>
				<span class="o">}</span>				
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d "</span><span class="o">,</span> <span class="n">t</span><span class="o">);</span>
			<span class="o">}</span>
			
			<span class="c1">//System.out.println(Arrays.toString(line));</span>
			<span class="c1">//System.out.println("End");</span>
			
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>	
	
	
	<span class="o">}</span>
<span class="o">}</span>

<span class="cm">/*
입력
4 2
4 2
3 1

출력
3 4 1 2 

*/</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="baekjoon" /><category term="java" /><category term="Topology" /><category term="위상정렬" /><category term="줄세우기" /><category term="임계 경로" /><category term="Q1948" /><category term="백준2252" /><category term="백준1516" /><category term="백준1948" /><summary type="html"><![CDATA[토플로지 관련 줄세우기 문제. 원리 알고리즘은 알고리즘 내용 참조.]]></summary></entry><entry><title type="html">[백준 1516]게임 개발, Topology Sort</title><link href="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1516-topology/" rel="alternate" type="text/html" title="[백준 1516]게임 개발, Topology Sort" /><published>2022-06-02T00:00:00-05:00</published><updated>2022-06-02T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1516-topology</id><content type="html" xml:base="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1516-topology/"><![CDATA[<p>토플로지 관련 누적 비용 최대값 계산.       <br />
원리 알고리즘은 알고리즘 내용 참조.</p>

<p><a href="https://www.acmicpc.net/problem/1516" target="_blank">백준 Q1516</a></p>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Queue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="k">try</span> <span class="o">{</span>
			<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
			<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
			
			<span class="c1">// N(1 ≤ N ≤ 500)</span>
			<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>	<span class="c1">//line수 </span>
			
			
			
			<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;[]</span> <span class="n">al</span>	<span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span> <span class="c1">//(연결 건물) </span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">al</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">();</span>
			<span class="o">}</span>
			
			<span class="kt">int</span><span class="o">[]</span> <span class="n">result</span>	<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>	<span class="c1">// 위상순서를 저장하기</span>
			
			<span class="kt">int</span><span class="o">[]</span> <span class="n">time</span>		<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span> <span class="c1">//누적 해당 건물을 짓는 시간</span>
			<span class="kt">int</span><span class="o">[]</span> <span class="n">time_sum</span>	<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span> <span class="c1">//누적 해당 건물을 짓는 시간</span>
			<span class="kt">int</span><span class="o">[]</span> <span class="n">line</span>		<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span> <span class="c1">//나를 의존하는 line</span>
			<span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">q</span><span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">();</span>
		
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">st</span> 			<span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
				
				<span class="kt">int</span> <span class="n">t</span> 		<span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>	
				<span class="n">time</span><span class="o">[</span><span class="n">i</span><span class="o">]</span>		<span class="o">=</span> <span class="n">t</span><span class="o">;</span>
				
				<span class="c1">//필요 건물이 여러개 나올수 있음.				</span>
				<span class="k">for</span><span class="o">(;;)</span> <span class="o">{</span>
					<span class="kt">int</span> <span class="n">s</span> 		<span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
					<span class="k">if</span><span class="o">(</span><span class="n">s</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
						<span class="k">break</span><span class="o">;</span>
					<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
						<span class="n">al</span><span class="o">[</span><span class="n">s</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
						<span class="n">line</span><span class="o">[</span><span class="n">i</span><span class="o">]++;</span>
					<span class="o">}</span>					
				<span class="o">}</span>				
				<span class="c1">//System.out.format("%d %d \n",s,e);</span>
			<span class="o">}</span>
			
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">line</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
					<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>	
					<span class="n">time_sum</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">time</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
				<span class="o">}</span>
			<span class="o">}</span>
			
			
			
			<span class="c1">//System.out.println("L : "+Arrays.toString(line));</span>
			
			<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
			<span class="k">while</span><span class="o">(!</span> <span class="n">q</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">){</span>
				<span class="kt">int</span> <span class="n">parent</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>
				<span class="n">result</span><span class="o">[</span><span class="n">x</span><span class="o">++]</span> <span class="o">=</span> <span class="n">parent</span><span class="o">;</span>
				
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">al</span><span class="o">[</span><span class="n">parent</span><span class="o">].</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
					<span class="kt">int</span> <span class="n">child</span> <span class="o">=</span> <span class="n">al</span><span class="o">[</span><span class="n">parent</span><span class="o">].</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">intValue</span><span class="o">();</span>

					<span class="n">time_sum</span><span class="o">[</span><span class="n">child</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">time_sum</span><span class="o">[</span><span class="n">child</span><span class="o">],</span> <span class="n">time_sum</span><span class="o">[</span><span class="n">parent</span><span class="o">]</span> <span class="o">+</span> <span class="n">time</span><span class="o">[</span><span class="n">child</span><span class="o">]);</span>
					
					<span class="k">if</span><span class="o">(--</span><span class="n">line</span><span class="o">[</span><span class="n">child</span><span class="o">]==</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
						<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">child</span><span class="o">);</span>
					<span class="o">}</span>
				<span class="o">}</span>
				<span class="c1">//total을 Sum처리함.</span>
				<span class="c1">//System.out.format("%d -&gt;", parent);</span>
			<span class="o">}</span>

			<span class="c1">//순서</span>
<span class="c1">//			for(int i=0;i&lt;result.length-1;i++) {</span>
<span class="c1">//				System.out.format("%d -&gt;", result[i]);				</span>
<span class="c1">//			}</span>
<span class="c1">//			System.out.println("");</span>
<span class="c1">//			</span>
<span class="c1">//			System.out.println("Line : "+Arrays.toString(line));</span>
<span class="c1">//			System.out.println("Time : "+Arrays.toString(time));</span>
<span class="c1">//			System.out.println("TimeS : "+Arrays.toString(time_sum));</span>

			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">time_sum</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d\n"</span><span class="o">,</span> <span class="n">time_sum</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>				
			<span class="o">}</span>
			<span class="c1">//System.out.println("End");</span>
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>
	
	
	<span class="o">}</span>
<span class="o">}</span>

<span class="cm">/*
입력
5
10 -1
10 1 -1
4 1 -1
4 3 1 -1
3 3 -1

출력
10
20
14
18
17

*/</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="baekjoon" /><category term="java" /><category term="Topology" /><category term="위상정렬" /><category term="줄세우기" /><category term="Q1516" /><category term="백준1516" /><category term="백준1516" /><category term="백준1948" /><summary type="html"><![CDATA[토플로지 관련 누적 비용 최대값 계산. 원리 알고리즘은 알고리즘 내용 참조.]]></summary></entry><entry><title type="html">[백준 2252]줄세우기, Topology Sort</title><link href="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q2252-topology/" rel="alternate" type="text/html" title="[백준 2252]줄세우기, Topology Sort" /><published>2022-06-02T00:00:00-05:00</published><updated>2022-06-02T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q2252-topology</id><content type="html" xml:base="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q2252-topology/"><![CDATA[<p>토플로지 관련 줄세우기 문제.   <br />
원리 알고리즘은 알고리즘 내용 참조.</p>

<p><a href="https://www.acmicpc.net/problem/2252" target="_blank">백준 Q2252</a></p>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Queue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">try</span> <span class="o">{</span>
			<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
			<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
			
			<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			<span class="kt">int</span> <span class="no">M</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			
			<span class="kt">int</span><span class="o">[]</span> <span class="n">line</span> 		<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			<span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">q</span><span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">();</span>
			<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;[]</span> <span class="n">al</span>	<span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span>
				<span class="n">al</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">();</span>
			
			<span class="c1">//System.out.format("N: %d M: %d \n",N,M);</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="no">M</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">st</span> 	<span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
				<span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="c1">//System.out.format("%d %d \n",s,e);</span>
				<span class="n">al</span><span class="o">[</span><span class="n">s</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
				<span class="n">line</span><span class="o">[</span><span class="n">e</span><span class="o">]++;</span> 
			<span class="o">}</span>
			
			<span class="c1">//line 이 0인 item을 q에 넣는다.</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">line</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
					<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			
			<span class="k">while</span><span class="o">(!</span><span class="n">q</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
				<span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>
				
				<span class="c1">//연결 선을 빼면서 line을 제거, 제거후에 0인경우 q에 입력</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">al</span><span class="o">[</span><span class="n">t</span><span class="o">].</span><span class="na">size</span><span class="o">()</span> <span class="o">;</span> <span class="n">i</span><span class="o">++</span> <span class="o">)</span> <span class="o">{</span>
					<span class="kt">int</span> <span class="n">sub</span> <span class="o">=</span> <span class="n">al</span><span class="o">[</span><span class="n">t</span><span class="o">].</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">intValue</span><span class="o">();</span>
					<span class="k">if</span><span class="o">(--</span><span class="n">line</span><span class="o">[</span><span class="n">sub</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">){</span>
						<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">sub</span><span class="o">);</span>
					<span class="o">}</span>
				<span class="o">}</span>				
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d "</span><span class="o">,</span> <span class="n">t</span><span class="o">);</span>
			<span class="o">}</span>
			
			<span class="c1">//System.out.println(Arrays.toString(line));</span>
			<span class="c1">//System.out.println("End");</span>
			
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>	
	
	
	<span class="o">}</span>
<span class="o">}</span>

<span class="cm">/*
입력
4 2
4 2
3 1

출력
3 4 1 2 

*/</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="baekjoon" /><category term="java" /><category term="Topology" /><category term="위상정렬" /><category term="줄세우기" /><category term="Q2252" /><category term="백준2252" /><category term="백준1516" /><category term="백준1948" /><summary type="html"><![CDATA[토플로지 관련 줄세우기 문제. 원리 알고리즘은 알고리즘 내용 참조.]]></summary></entry><entry><title type="html">[Java][Python] 범위 줄이기</title><link href="https://kimjaehyun.co.kr/algorithm/codingtest/algorithm-binary_range_search/" rel="alternate" type="text/html" title="[Java][Python] 범위 줄이기" /><published>2022-06-01T00:00:00-05:00</published><updated>2022-06-01T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/codingtest/algorithm-binary_range_search</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/codingtest/algorithm-binary_range_search/"><![CDATA[<p>이진 검색 알고리즘 (Binary search algorithm)또는 슬라이딩 윈도우 방법을 활용하여, 시작과 끝 범위를 좁히는 알고리즘 입니다.  <br />
다음은 중간 값을 비교해서 이상, 이하로 검색 범위를 좁히는 방식(이진 검색)에서 착한한 문제 풀이 패턴 입니다.</p>

<h1 id="범위-검색-패턴">범위 검색 패턴</h1>
<p>시작 범위, 종료 범위 중 조건을 검사하여 좁히는 문제에 사용하는 방식,
이중 For문 출제 문제에서 O(N^2) 을 O(N) 수준으로 복잡도를 졸이기 위해서 사용됩니다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="mi">10000</span><span class="o">;</span> <span class="c1">// 종료 지점</span>

<span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span> 

<span class="k">while</span> <span class="o">(</span> <span class="n">s</span> <span class="o">&lt;=</span> <span class="n">e</span> <span class="o">){</span>
    <span class="n">m</span> <span class="o">=</span> <span class="o">(</span><span class="n">s</span><span class="o">+</span><span class="mi">2</span><span class="o">)/</span><span class="mi">2</span><span class="o">;</span> <span class="c1">// 중간 값</span>
    <span class="k">if</span><span class="o">(</span> <span class="n">check_function</span><span class="o">(</span><span class="n">m</span><span class="o">)</span> <span class="o">){</span>
        <span class="n">s</span> <span class="o">=</span> <span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span><span class="k">else</span><span class="o">{</span>
        <span class="n">e</span> <span class="o">=</span> <span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// check_function </span>
<span class="c1">//s 값을 조정할지, e 값을 조정할지 판단하는 함수를 구현</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">s</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">e</span> <span class="o">=</span> <span class="mi">10000</span>

<span class="k">while</span>  <span class="n">s</span> <span class="o">&lt;=</span> <span class="n">e</span> <span class="p">:</span>
    <span class="n">m</span> <span class="o">=</span> <span class="p">(</span><span class="n">s</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span><span class="p">;</span> 
    <span class="k">if</span> <span class="n">check_function</span><span class="p">(</span><span class="n">m</span><span class="p">):</span>
        <span class="n">s</span> <span class="o">=</span> <span class="n">m</span><span class="o">+</span><span class="mi">1</span>
    <span class="k">else</span>
        <span class="n">e</span> <span class="o">=</span> <span class="n">m</span><span class="o">-</span><span class="mi">1</span>
    
<span class="c1"># check_function 
#s 값을 조정할지, e 값을 조정할지 판단하는 함수를 구현
</span></code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="codingtest" /><category term="Binary" /><category term="슬라이딩 윈도우" /><summary type="html"><![CDATA[이진 검색 알고리즘 (Binary search algorithm)또는 슬라이딩 윈도우 방법을 활용하여, 시작과 끝 범위를 좁히는 알고리즘 입니다. 다음은 중간 값을 비교해서 이상, 이하로 검색 범위를 좁히는 방식(이진 검색)에서 착한한 문제 풀이 패턴 입니다.]]></summary></entry><entry><title type="html">[Java] 위상정렬, 줄세우기, Topology Sort</title><link href="https://kimjaehyun.co.kr/algorithm/java/java-topology-sort/" rel="alternate" type="text/html" title="[Java] 위상정렬, 줄세우기, Topology Sort" /><published>2022-06-01T00:00:00-05:00</published><updated>2022-06-01T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/java/java-topology-sort</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/java/java-topology-sort/"><![CDATA[<p>데이터의 주어진 조건만으로 특정 순서를 정렬시키는 문제들에서 사용되는 알고리즘.  <br />
예를 들면 다음 조건이 제공될때, 주어진 조건을 조합하여 조건을 만들어 보면,</p>

<ul>
  <li>줄을 세워서 정렬이 가능한지? 불가능한지?</li>
  <li>가능하면 정렬을 하는 미션</li>
</ul>

<p><a href="https://www.acmicpc.net/problem/2252" target="_blank">백준 2252</a></p>

<p>Queue 를 사용하여 정렬하며, 정렬하는 방법  <br />
<img src="\assets/images_post/java/topology_sort_01.png" alt="Topology순서" /></p>

<p>![topology]</p>
<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TopologySort</span> <span class="o">{</span>

	<span class="kd">static</span> <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
	<span class="kd">static</span> <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">max</span><span class="o">;</span>
	
	<span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">inputline</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span> <span class="c1">// 진입하는 선의 수를 만듬</span>
	<span class="kd">static</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">[</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">topologySort</span><span class="o">()</span> <span class="o">{</span>
		
		<span class="kt">int</span><span class="o">[]</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
		
		<span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">q</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">();</span>
		
		<span class="c1">// 나를 향하는 input 선이 0개인 노드를 큐에 삽입합니다. </span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">inputline</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span>
				<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
		<span class="o">}</span>
		
		<span class="c1">// 정렬이 완전히 수행되려면 정확히 n개의 노드를 방문합니다.		</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="c1">// n개를 방문하기 전에 큐가 비어버리면 사이클이 발생한 상황</span>
			<span class="k">if</span><span class="o">(</span> <span class="n">q</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">)</span> <span class="o">{</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"사이클이 발생"</span><span class="o">);</span>
				<span class="k">return</span><span class="o">;</span>
			<span class="o">}</span>
			
			<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>

			<span class="n">result</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
			
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">arr</span><span class="o">[</span><span class="n">x</span><span class="o">].</span><span class="na">size</span><span class="o">();</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
				
				<span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="n">x</span><span class="o">].</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">).</span><span class="na">intValue</span><span class="o">();</span>

				<span class="c1">// 나를 향하는 input 선을 제거하고 남은 수량이 0이 된 정점을 큐에 삽입합니다. </span>
				<span class="k">if</span><span class="o">(--</span><span class="n">inputline</span><span class="o">[</span><span class="n">y</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span>
					<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">y</span><span class="o">);</span>
			<span class="o">}</span>
			
		<span class="o">}</span><span class="c1">//end for</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d "</span><span class="o">,</span> <span class="n">result</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="n">n</span> <span class="o">=</span> <span class="mi">5</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="c1">//arr 초기화</span>
			<span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">();</span>
		<span class="o">}</span>
		
		<span class="n">arr</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>		<span class="n">inputline</span><span class="o">[</span><span class="mi">2</span><span class="o">]++;</span>
		<span class="n">arr</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="mi">4</span><span class="o">);</span>		<span class="n">inputline</span><span class="o">[</span><span class="mi">4</span><span class="o">]++;</span>
		<span class="n">arr</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>		<span class="n">inputline</span><span class="o">[</span><span class="mi">5</span><span class="o">]++;</span>

		<span class="n">arr</span><span class="o">[</span><span class="mi">2</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>		<span class="n">inputline</span><span class="o">[</span><span class="mi">3</span><span class="o">]++;</span>
		<span class="n">arr</span><span class="o">[</span><span class="mi">2</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="mi">4</span><span class="o">);</span>		<span class="n">inputline</span><span class="o">[</span><span class="mi">4</span><span class="o">]++;</span>
	
		<span class="n">arr</span><span class="o">[</span><span class="mi">3</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>		<span class="n">inputline</span><span class="o">[</span><span class="mi">5</span><span class="o">]++;</span>
		
		<span class="n">topologySort</span><span class="o">();</span>
		
	<span class="o">}</span>

<span class="o">}</span>

<span class="c1">//출력</span>
<span class="c1">//arr[2].add(3);		inputline[3]++;</span>
<span class="c1">//arr[2].add(4);		inputline[4]++;</span>
<span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> 

<span class="c1">//출력(순서를 변경하여 등록할 경우)</span>
<span class="c1">//arr[2].add(4);		inputline[4]++;</span>
<span class="c1">//arr[2].add(3);		inputline[3]++;</span>
<span class="mi">1</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">5</span> 

</code></pre></div></div>

<p><a href="https://blog.naver.com/ndb796/221236874984" target="_blank">참고 문헌 : 안경잡개발자 블로그</a></p>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="java" /><category term="Topology" /><category term="위상정렬" /><category term="줄세우기" /><category term="백준2252" /><category term="백준1516" /><category term="백준1948" /><summary type="html"><![CDATA[데이터의 주어진 조건만으로 특정 순서를 정렬시키는 문제들에서 사용되는 알고리즘. 예를 들면 다음 조건이 제공될때, 주어진 조건을 조합하여 조건을 만들어 보면,]]></summary></entry><entry><title type="html">[Java] Input값 처리</title><link href="https://kimjaehyun.co.kr/java/codingtest/java-input-test/" rel="alternate" type="text/html" title="[Java] Input값 처리" /><published>2022-06-01T00:00:00-05:00</published><updated>2022-06-01T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/java/codingtest/java-input-test</id><content type="html" xml:base="https://kimjaehyun.co.kr/java/codingtest/java-input-test/"><![CDATA[<p>백준 사이트와 같은 온라인저지 사이트에서 Input 처리시 <code class="language-plaintext highlighter-rouge">Scanner</code>를 사용하는데, <code class="language-plaintext highlighter-rouge">BufferedReader</code>를 사용할때와 성능 차이가 나는 것으로 생각됩니다.  <br />
특히 대량 데이트 Row 전달시 성능저하 현상이 발생하것으로 판단되네요.</p>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">InputTest</span> <span class="o">{</span>

	<span class="kd">static</span> <span class="kt">void</span> <span class="nf">inputType1</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
		<span class="k">try</span> <span class="o">{</span>
			<span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
			
			<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="kt">int</span> <span class="no">M</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"N: %d M: %d \n"</span><span class="o">,</span><span class="no">N</span><span class="o">,</span><span class="no">M</span><span class="o">);</span>
			
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="no">M</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				
				<span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
				<span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
				<span class="c1">//System.out.format("%d %d \n",s,e);</span>
			<span class="o">}</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"End"</span><span class="o">);</span>
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>	
		
	<span class="o">}</span>
	
	<span class="kd">static</span> <span class="kt">void</span> <span class="nf">inputType2</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
		<span class="k">try</span> <span class="o">{</span>
			<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
			<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
			
			<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			<span class="kt">int</span> <span class="no">M</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"N: %d M: %d \n"</span><span class="o">,</span><span class="no">N</span><span class="o">,</span><span class="no">M</span><span class="o">);</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="no">M</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">st</span> 	<span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
				<span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="c1">//System.out.format("%d %d \n",s,e);</span>
			<span class="o">}</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"End"</span><span class="o">);</span>
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>	
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

		<span class="k">try</span> <span class="o">{</span>
			<span class="c1">// inputType2();</span>
			<span class="c1">// inputType2();</span>
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>	
		
		
	<span class="o">}</span>

<span class="o">}</span>


<span class="cm">/*

4 2
4 2
3 1

*/</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="java" /><category term="codingtest" /><category term="Input값" /><category term="백준" /><category term="코딩테스트" /><category term="Scanner" /><category term="BufferedReader" /><summary type="html"><![CDATA[백준 사이트와 같은 온라인저지 사이트에서 Input 처리시 Scanner를 사용하는데, BufferedReader를 사용할때와 성능 차이가 나는 것으로 생각됩니다. 특히 대량 데이트 Row 전달시 성능저하 현상이 발생하것으로 판단되네요.]]></summary></entry><entry><title type="html">[알고리즘] 자료 구조의 종류</title><link href="https://kimjaehyun.co.kr/algorithm/algorithm-datastructure/" rel="alternate" type="text/html" title="[알고리즘] 자료 구조의 종류" /><published>2022-05-31T00:00:00-05:00</published><updated>2022-05-31T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/algorithm-datastructure</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/algorithm-datastructure/"><![CDATA[<p>몇몇은 자주 사용하지만, 알고 있으면 편리한 자료구조 목차.  <br />
자세한 샘플들은 CodingTest 메뉴에서 확인 필수.</p>

<h1 id="단순-구조">단순 구조</h1>
<ul>
  <li>정수</li>
  <li>실수</li>
  <li>문자</li>
  <li>문자열</li>
</ul>

<h1 id="선형-구조">선형 구조</h1>
<ul>
  <li>(선형/순차) 리스트
    <ul>
      <li>배열 (Array)</li>
      <li>레코드</li>
    </ul>
  </li>
  <li>연결 리스트 (Linked List)
    <ul>
      <li>단순 연결 리스트</li>
      <li>이중 연결 리스트</li>
      <li>원형 연결 리스트</li>
    </ul>
  </li>
  <li>스택 (Stack)</li>
  <li>큐 (Queue)</li>
  <li>데크 (Deque)</li>
</ul>

<h1 id="비선형-구조">비선형 구조</h1>
<ul>
  <li>트리 (Tree)
    <ul>
      <li>일반 트리</li>
      <li>이진 트리</li>
    </ul>
  </li>
  <li>그래프 (Graph)
    <ul>
      <li>방향 그래프</li>
      <li>무방향 그래프</li>
    </ul>
  </li>
</ul>

<h1 id="파일구조">파일구조</h1>
<ul>
  <li>순차 파일</li>
  <li>색인 파일</li>
  <li>직접 파일</li>
</ul>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="정수" /><category term="실수" /><category term="문자" /><category term="문자열" /><category term="리스트" /><category term="배열" /><category term="연결리스트" /><category term="스택" /><category term="큐" /><category term="데크" /><category term="트리" /><category term="그래프" /><category term="순차파일" /><category term="색인파일" /><category term="직접파일" /><summary type="html"><![CDATA[몇몇은 자주 사용하지만, 알고 있으면 편리한 자료구조 목차. 자세한 샘플들은 CodingTest 메뉴에서 확인 필수.]]></summary></entry><entry><title type="html">[Python] input 처리</title><link href="https://kimjaehyun.co.kr/codingtest/python/input/python-input/" rel="alternate" type="text/html" title="[Python] input 처리" /><published>2022-05-29T00:00:00-05:00</published><updated>2022-05-29T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/codingtest/python/input/python-input</id><content type="html" xml:base="https://kimjaehyun.co.kr/codingtest/python/input/python-input/"><![CDATA[<p>Python에서 코딩 테스트시에 입력을 처리하는 방법</p>

<h1 id="배열-생성-및-초기화">배열 생성 및 초기화</h1>
<h2 id="1차원-배열-초기화">1차원 배열 초기화</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="mi">5</span>
<span class="n">arr</span>
<span class="c1">#출력 
</span><span class="o">&gt;</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>
</code></pre></div></div>

<h2 id="2차원-배열-초기화">2차원 배열 초기화</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">row</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">col</span> <span class="o">=</span> <span class="mi">2</span>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">col</span><span class="p">]</span><span class="o">*</span><span class="n">row</span>
<span class="n">arr</span>
<span class="c1">#출력 
</span><span class="o">&gt;</span> <span class="p">[[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]]</span>

<span class="n">arr</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">col</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">row</span><span class="p">)]</span>
<span class="n">arr</span>
<span class="c1">#출력 
</span><span class="o">&gt;</span> <span class="p">[[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]]</span>

</code></pre></div></div>

<h1 id="입력-값-처리">입력 값 처리</h1>
<h2 id="입력-샘플">입력 샘플</h2>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>5
10  10
20  35
22  34
58  60
123 2148
</code></pre></div></div>

<h2 id="input-사용법">input() 사용법</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>

<span class="n">N</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
        <span class="n">a</span><span class="p">,</span><span class="n">b</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>
        <span class="k">print</span><span class="p">(</span> <span class="n">a</span> <span class="p">,</span> <span class="n">b</span> <span class="p">)</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="mi">10</span>  <span class="mi">10</span>
<span class="o">&gt;</span> <span class="mi">20</span>  <span class="mi">35</span>
<span class="o">&gt;</span> <span class="mi">22</span>  <span class="mi">34</span>
<span class="o">&gt;</span> <span class="mi">58</span>  <span class="mi">60</span>
<span class="o">&gt;</span> <span class="mi">123</span> <span class="mi">2148</span>

</code></pre></div></div>

<h2 id="sysstdinreadline">sys.stdin.readline()</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>

<span class="n">N</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">())</span>  <span class="c1">## 동일 하고 이부분만 ㅂ녁여되ㅏㅁ
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
        <span class="n">a</span><span class="p">,</span><span class="n">b</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>
        <span class="k">print</span><span class="p">(</span> <span class="n">a</span> <span class="p">,</span> <span class="n">b</span> <span class="p">)</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="mi">10</span>  <span class="mi">10</span>
<span class="o">&gt;</span> <span class="mi">20</span>  <span class="mi">35</span>
<span class="o">&gt;</span> <span class="mi">22</span>  <span class="mi">34</span>
<span class="o">&gt;</span> <span class="mi">58</span>  <span class="mi">60</span>
<span class="o">&gt;</span> <span class="mi">123</span> <span class="mi">2148</span>

</code></pre></div></div>

<h2 id="라인단위-처리">라인단위 처리</h2>
<h3 id="한줄에-한개의-변수-저장-하기">한줄에 한개의 변수 저장 하기</h3>
<p>입력 형태</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>79
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">int</code>을 변한화여 대입</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="n">a</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">())</span>

</code></pre></div></div>

<h3 id="한줄에-여러개의-변수를-split-하기">한줄에 여러개의 변수를 Split 하기</h3>
<p>입력 형태</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1 3 5 7 9 
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">split</code>을 이용하여, <code class="language-plaintext highlighter-rouge">map-&gt;int</code>로 변한화여 개별 대입 방법</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>

<span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">d</span><span class="p">,</span> <span class="n">e</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">split</code>을 이용하여, <code class="language-plaintext highlighter-rouge">map-&gt;int</code>로 변한화여 리스트에 저장</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>

<span class="n">listdata</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">()))</span>

</code></pre></div></div>

<h1 id="활용-예제">활용 예제</h1>
<h2 id="n줄의-리스트-저장">N줄의 리스트 저장</h2>
<p>입력 형태 ( 5줄의 이름 출력 경우)</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>5       
홍길동
김철수
이귀남
하현수
이진수
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">strip()</code>는 trim()과 같이 앞뒤 공백 제거 역할.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="n">N</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">())</span>
<span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">strip</span><span class="p">()</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">)]</span>
</code></pre></div></div>

<h2 id="n줄의-2차원을-1차원-리스트로-처리">N줄의 2차원을 1차원 리스트로 처리</h2>
<p>입력 형태 ( 3행 3열의의미)</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3       
1 2 3
4 5 6
7 8 9
</code></pre></div></div>
<p>1차원 리스트로 모두 등록될 때</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="n">N</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">())</span>
<span class="n">arr</span> <span class="o">=</span><span class="p">[];</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
    <span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">())))</span>
<span class="n">arr</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]</span>
</code></pre></div></div>

<h2 id="n줄의-2차원을2차원-리스트로-처리">N줄의 2차원을2차원 리스트로 처리</h2>
<p>입력 형태 ( 3행 3열의의미)</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3       
1 2 3
4 5 6
7 8 9
</code></pre></div></div>

<p>2차원 리스트로 모두 등록될 때</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>

<span class="n">INF</span><span class="o">=-</span><span class="mi">1</span>  <span class="c1">#초기값
</span><span class="n">N</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">())</span>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[[</span><span class="n">INF</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">)]</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">)]</span> <span class="c1"># _ 의미 값을 사용하지 않는 무시의 의미
</span><span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>

<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="p">[[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">],</span>
<span class="o">&gt;</span>  <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">],</span>
<span class="o">&gt;</span>  <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">],</span>
<span class="o">&gt;</span>  <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">],</span>
<span class="o">&gt;</span>  <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">],</span>
<span class="o">&gt;</span>  <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">]]</span>


<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span><span class="p">().</span><span class="n">split</span><span class="p">();</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
        <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">(</span><span class="n">j</span><span class="p">);</span>
<span class="n">arr</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]]</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="codingtest" /><category term="python" /><category term="input" /><category term="python" /><category term="python" /><category term="stdin" /><category term="readline" /><summary type="html"><![CDATA[Python에서 코딩 테스트시에 입력을 처리하는 방법]]></summary></entry></feed>