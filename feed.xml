<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://kimjaehyun.co.kr/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kimjaehyun.co.kr/" rel="alternate" type="text/html" /><updated>2022-06-22T06:48:39-05:00</updated><id>https://kimjaehyun.co.kr/feed.xml</id><title type="html">꿰보노트</title><subtitle>프로그래밍과 소프트웨어 정보 및 클라우드 개발에 대한 정보를 공유하는 블로그 입니다. 꿰보노트 / 꿰보Note / 꿰어야 보배</subtitle><author><name>devjaedol</name></author><entry><title type="html">[OpenCV] 마우스이벤트</title><link href="https://kimjaehyun.co.kr/python/python-opencv-mouse-event/" rel="alternate" type="text/html" title="[OpenCV] 마우스이벤트" /><published>2022-06-21T00:00:00-05:00</published><updated>2022-06-21T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python-opencv-mouse-event</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python-opencv-mouse-event/"><![CDATA[<p>OpenCV 마우스 이벤트에 대해서 정의 합니다.  <br />
마우스 움직임에 대한 콜백 함수를 구현하여, 전달되는 파라메터 인자를 통해서 마우스 관련 정보를 얻을 수 있습니다.  <br />
ex) <code class="language-plaintext highlighter-rouge">mouseCallbcak(event, x, y, flags, param)</code> 함수의</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">event</code> 항목의 <code class="language-plaintext highlighter-rouge">cv2.EVENT_XXXX</code> 형태로 마우스 이벤트</li>
  <li><code class="language-plaintext highlighter-rouge">x</code>, <code class="language-plaintext highlighter-rouge">y</code>는 마우스의 자표</li>
  <li><code class="language-plaintext highlighter-rouge">flags</code> 키보드 등의 추가 적인 정보 제공</li>
</ul>

<p><a href="https://docs.opencv.org/3.4/d0/d90/group__highgui__window__flags.html" target="_blank">마우스 관련 API</a></p>

<p>event 종류</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_MOUSEMOVE</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_LBUTTONDOWN</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_RBUTTONDOWN</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_MBUTTONDOWN</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_LBUTTONUP</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_RBUTTONUP</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_MBUTTONUP</span> <span class="o">=</span> <span class="mi">6</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_LBUTTONDBLCLK</span> <span class="o">=</span> <span class="mi">7</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_RBUTTONDBLCLK</span> <span class="o">=</span> <span class="mi">8</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_MBUTTONDBLCLK</span> <span class="o">=</span> <span class="mi">9</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_MOUSEWHEEL</span> <span class="o">=</span> <span class="mi">10</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_MOUSEHWHEEL</span> <span class="o">=</span> <span class="mi">11</span>
</code></pre></div></div>

<p>flags 종류</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_FLAG_LBUTTON</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_FLAG_RBUTTON</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_FLAG_MBUTTON</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_FLAG_CTRLKEY</span> <span class="o">=</span> <span class="mi">8</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_FLAG_SHIFTKEY</span> <span class="o">=</span> <span class="mi">16</span><span class="p">,</span>
  <span class="n">cv</span><span class="p">::</span><span class="n">EVENT_FLAG_ALTKEY</span> <span class="o">=</span> <span class="mi">32</span>
</code></pre></div></div>

<h1 id="source-code">Source Code</h1>
<p>마우스 누르는 동작과 키보드 <code class="language-plaintext highlighter-rouge">shift</code>에 따라서 그려지는 샘플소스 입니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span>
<span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="mi">512</span><span class="p">,</span><span class="mi">512</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="n">np</span><span class="p">.</span><span class="n">uint8</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">namedWindow</span><span class="p">(</span><span class="n">windowName</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">draw_circle</span><span class="p">(</span><span class="n">event</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">flags</span><span class="p">,</span> <span class="n">param</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">event</span> <span class="o">==</span> <span class="n">cv2</span><span class="p">.</span><span class="n">EVENT_LBUTTONDOWN</span> <span class="ow">and</span> <span class="n">flags</span> <span class="o">&amp;</span> <span class="n">cv2</span><span class="p">.</span><span class="n">EVENT_FLAG_SHIFTKEY</span> <span class="p">:</span> 
        <span class="n">cv2</span><span class="p">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">),</span> <span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">20</span><span class="p">,</span> <span class="n">y</span><span class="o">+</span><span class="mi">20</span><span class="p">),</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">event</span> <span class="o">==</span> <span class="n">cv2</span><span class="p">.</span><span class="n">EVENT_LBUTTONDBLCLK</span><span class="p">:</span>
        <span class="n">cv2</span><span class="p">.</span><span class="n">circle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">),</span> <span class="mi">40</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">event</span> <span class="o">==</span> <span class="n">cv2</span><span class="p">.</span><span class="n">EVENT_RBUTTONDOWN</span><span class="p">:</span>
        <span class="n">cv2</span><span class="p">.</span><span class="n">circle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">),</span> <span class="mi">20</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">event</span> <span class="o">==</span> <span class="n">cv2</span><span class="p">.</span><span class="n">EVENT_MBUTTONDOWN</span><span class="p">:</span>
        <span class="n">cv2</span><span class="p">.</span><span class="n">circle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">),</span> <span class="mi">30</span><span class="p">,</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>

<span class="n">cv2</span><span class="p">.</span><span class="n">setMouseCallback</span><span class="p">(</span><span class="n">windowName</span><span class="p">,</span> <span class="n">draw_circle</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="n">cv2</span><span class="p">.</span><span class="n">__version__</span><span class="p">)</span>
    <span class="k">while</span><span class="p">(</span><span class="bp">True</span><span class="p">):</span>
        <span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'sample'</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="o">==</span> <span class="mi">27</span><span class="p">:</span> <span class="c1">#27키   ESC
</span>            <span class="k">break</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>  

</code></pre></div></div>

<p>OpenCV의 이벤트 확인 방법</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">events</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">dir</span><span class="p">(</span><span class="n">cv2</span><span class="p">)</span> <span class="k">if</span> <span class="s">'EVENT'</span> <span class="ow">in</span> <span class="n">i</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">events</span><span class="p">)</span>

<span class="c1">#출력
</span><span class="p">[</span><span class="s">'EVENT_FLAG_ALTKEY'</span><span class="p">,</span> <span class="s">'EVENT_FLAG_CTRLKEY'</span><span class="p">,</span>
 <span class="s">'EVENT_FLAG_LBUTTON'</span><span class="p">,</span> <span class="s">'EVENT_FLAG_MBUTTON'</span><span class="p">,</span> 
<span class="s">'EVENT_FLAG_RBUTTON'</span><span class="p">,</span> <span class="s">'EVENT_FLAG_SHIFTKEY'</span><span class="p">,</span>
 <span class="s">'EVENT_LBUTTONDBLCLK'</span><span class="p">,</span> <span class="s">'EVENT_LBUTTONDOWN'</span><span class="p">,</span> 
 <span class="s">'EVENT_LBUTTONUP'</span><span class="p">,</span> <span class="s">'EVENT_MBUTTONDBLCLK'</span><span class="p">,</span> 
 <span class="s">'EVENT_MBUTTONDOWN'</span><span class="p">,</span> <span class="s">'EVENT_MBUTTONUP'</span><span class="p">,</span> 
 <span class="s">'EVENT_MOUSEHWHEEL'</span><span class="p">,</span> <span class="s">'EVENT_MOUSEMOVE'</span><span class="p">,</span> 
 <span class="s">'EVENT_MOUSEWHEEL'</span><span class="p">,</span> <span class="s">'EVENT_RBUTTONDBLCLK'</span><span class="p">,</span> 
 <span class="s">'EVENT_RBUTTONDOWN'</span><span class="p">,</span> <span class="s">'EVENT_RBUTTONUP'</span><span class="p">]</span>

</code></pre></div></div>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-opencv)</span></p>
<ul>

    
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-mouse-event/">[OpenCV] 마우스이벤트</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-window-event/">[OpenCV] 윈도우 처리, 키이벤트</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-video-rw/">[OpenCV] 비디오/캠 불러오기, 저장하기</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-image-rw/">[OpenCV] 이미지 불러오기, 저장하기, 사이즈 변경</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-basic-draw/">[OpenCV] 기본 도형 그리기</a></li>
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="opencv" /><category term="mouse" /><category term="event" /><category term="mouse event" /><category term="lecture-opencv" /><summary type="html"><![CDATA[OpenCV 마우스 이벤트에 대해서 정의 합니다. 마우스 움직임에 대한 콜백 함수를 구현하여, 전달되는 파라메터 인자를 통해서 마우스 관련 정보를 얻을 수 있습니다. ex) mouseCallbcak(event, x, y, flags, param) 함수의 event 항목의 cv2.EVENT_XXXX 형태로 마우스 이벤트 x, y는 마우스의 자표 flags 키보드 등의 추가 적인 정보 제공]]></summary></entry><entry><title type="html">[OpenCV] 기본 도형 그리기</title><link href="https://kimjaehyun.co.kr/python/python-opencv-basic-draw/" rel="alternate" type="text/html" title="[OpenCV] 기본 도형 그리기" /><published>2022-06-20T00:00:00-05:00</published><updated>2022-06-20T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python-opencv-basic-draw</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python-opencv-basic-draw/"><![CDATA[<p>영상 또는 이미지 데이터 위에 Text, 선, 사각형, 다각형 등을 그리기.  <br />
하기 표시되는 color는 <code class="language-plaintext highlighter-rouge">BGR</code> 입니다. 참고 바랍니다.</p>

<h1 id="도형-그리기">도형 그리기</h1>
<h2 id="text-그리기cv2puttext">Text 그리기(cv2.putText)</h2>
<p><code class="language-plaintext highlighter-rouge">cv2.putText(img, text, position, fontFace, fontSize, color [,thickness, linetype])</code></p>
<ul>
  <li>position 입력될 글자의 좌측 하단 기준의 배치 위치 입니다.</li>
  <li>fontFace
    <ul>
      <li>cv2.FONT_HERSHEY_PLAIN</li>
      <li>cv2.FONT_HERSHEY_SIMPLEX</li>
      <li>cv2.FONT_HERSHEY_DUPLEX</li>
      <li>cv2.FONT_HERSHEY_COMPLEX_SMALL</li>
      <li>cv2.FONT_HERSHEY_COMPLEX</li>
      <li>cv2.FONT_HERSHEY_TRIPLEX</li>
      <li>cv2.FONT_ITALIC</li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">full</span><span class="p">((</span><span class="mi">500</span><span class="p">,</span><span class="mi">500</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="mi">255</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">uint8</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">putText</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="s">'Plain'</span><span class="p">,</span> <span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">50</span><span class="p">),</span> <span class="n">cv2</span><span class="p">.</span><span class="n">FONT_HERSHEY_PLAIN</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">))</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">putText</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="s">'Simplex'</span><span class="p">,</span> <span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">),</span> <span class="n">cv2</span><span class="p">.</span><span class="n">FONT_HERSHEY_SIMPLEX</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">))</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">putText</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="s">'Duplex'</span><span class="p">,</span> <span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">150</span><span class="p">),</span> <span class="n">cv2</span><span class="p">.</span><span class="n">FONT_HERSHEY_DUPLEX</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">))</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">putText</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="s">'Duplex'</span><span class="p">,</span> <span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">200</span><span class="p">),</span> <span class="n">cv2</span><span class="p">.</span><span class="n">FONT_HERSHEY_PLAIN</span> <span class="o">|</span> <span class="n">cv2</span><span class="p">.</span><span class="n">FONT_ITALIC</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">))</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'SAMPLE'</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="선-그리기cv2line">선 그리기(cv2.line)</h2>
<p><code class="language-plaintext highlighter-rouge">cv2.line(img, start, end, color [,thickness, linetype])</code></p>
<ul>
  <li>start/end 위치(x, y)</li>
  <li>linetype
    <ul>
      <li>cv2.LINE_4</li>
      <li>cv2.LINE_8</li>
      <li>cv2.LINE_AA : 안티알라아싱</li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">full</span><span class="p">((</span><span class="mi">500</span><span class="p">,</span><span class="mi">500</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="mi">255</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">uint8</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">line</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="mi">50</span><span class="p">),</span> <span class="p">(</span><span class="mi">300</span><span class="p">,</span><span class="mi">50</span><span class="p">),</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">line</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">150</span><span class="p">),</span> <span class="p">(</span><span class="mi">400</span><span class="p">,</span><span class="mi">150</span><span class="p">),</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">line</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">350</span><span class="p">),</span> <span class="p">(</span><span class="mi">400</span><span class="p">,</span><span class="mi">400</span><span class="p">),</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">),</span> <span class="mi">10</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">LINE_AA</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'SAMPLE'</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="사각형그리기cv2rectangle">사각형그리기(cv2.rectangle)</h2>
<p><code class="language-plaintext highlighter-rouge">cv2.rectangle(img, start, end, color [,thickness, linetype])</code></p>
<ul>
  <li>thickness <code class="language-plaintext highlighter-rouge">-1</code> 인 경우 채우기 상태</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">full</span><span class="p">((</span><span class="mi">500</span><span class="p">,</span><span class="mi">500</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="mi">255</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">uint8</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">),</span> <span class="p">(</span><span class="mi">200</span><span class="p">,</span><span class="mi">500</span><span class="p">),</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="mi">200</span><span class="p">),</span> <span class="p">(</span><span class="mi">200</span><span class="p">,</span><span class="mi">400</span><span class="p">),</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>    <span class="c1">#-1은 채워짐
</span><span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'SAMPLE'</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="다각형그리기cv2polylines">다각형그리기(cv2.polylines)</h2>
<p><code class="language-plaintext highlighter-rouge">cv2.polylines(img, points, isClosed, color [,thickness, linetype])</code></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">full</span><span class="p">((</span><span class="mi">500</span><span class="p">,</span><span class="mi">500</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="mi">255</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">uint8</span><span class="p">)</span>

<span class="n">p1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">10</span><span class="p">,</span><span class="mi">15</span><span class="p">],</span> <span class="p">[</span><span class="mi">30</span><span class="p">,</span><span class="mi">25</span><span class="p">],</span> <span class="p">[</span><span class="mi">100</span><span class="p">,</span> <span class="mi">150</span><span class="p">],</span> <span class="p">[</span><span class="mi">200</span><span class="p">,</span><span class="mi">300</span><span class="p">],</span> <span class="p">[</span><span class="mi">150</span><span class="p">,</span><span class="mi">400</span><span class="p">]],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">int32</span><span class="p">)</span>
<span class="n">p2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">30</span><span class="p">,</span><span class="mi">60</span><span class="p">],</span> <span class="p">[</span><span class="mi">210</span><span class="p">,</span><span class="mi">170</span><span class="p">],</span> <span class="p">[</span><span class="mi">140</span><span class="p">,</span> <span class="mi">220</span><span class="p">]],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">int32</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">polylines</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">[</span><span class="n">p1</span><span class="p">],</span> <span class="bp">False</span><span class="p">,</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">polylines</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">[</span><span class="n">p2</span><span class="p">],</span> <span class="bp">True</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="mi">10</span><span class="p">)</span>

<span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'SAMPLE'</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="원-타원-그리기cv2circle">원, 타원 그리기(cv2.circle)</h2>
<p><code class="language-plaintext highlighter-rouge">cv2.circle(img, center, radius, color [,thickness, linetype])</code></p>
<ul>
  <li>center 원 또는 타원의 중심 좌표(x, y)</li>
  <li>radius 원의 반지름</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">full</span><span class="p">((</span><span class="mi">500</span><span class="p">,</span><span class="mi">500</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="mi">255</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">uint8</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">circle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">150</span><span class="p">,</span><span class="mi">150</span><span class="p">),</span> <span class="mi">100</span><span class="p">,</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">circle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">400</span><span class="p">,</span><span class="mi">150</span><span class="p">),</span> <span class="mi">50</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'SAMPLE'</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="호그리기cv2ellipse">호그리기(cv2.ellipse)</h2>
<p><code class="language-plaintext highlighter-rouge">cv2.ellipse(img, center, axes, angle, from, to, color [,thickness, linetype])</code></p>
<ul>
  <li>center 중심 좌표(x, y)</li>
  <li>axes 기준축 길이</li>
  <li>angle 기준축 회전 각도</li>
  <li>from 호의 시작 각도</li>
  <li>to 호의 종료 각도</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">full</span><span class="p">((</span><span class="mi">500</span><span class="p">,</span><span class="mi">500</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="mi">255</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">uint8</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">ellipse</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="mi">300</span><span class="p">),</span> <span class="p">(</span><span class="mi">50</span><span class="p">,</span><span class="mi">75</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">360</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">))</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">ellipse</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">250</span><span class="p">,</span> <span class="mi">300</span><span class="p">),</span> <span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="mi">50</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">180</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span> <span class="c1">#30도 부터 180도까지 호를 그림
</span><span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'SAMPLE'</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="sample-code">Sample Code</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span>
<span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="n">cv2</span><span class="p">.</span><span class="n">__version__</span><span class="p">)</span>

    <span class="n">img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="mi">512</span><span class="p">,</span><span class="mi">512</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="n">np</span><span class="p">.</span><span class="n">uint8</span><span class="p">)</span>

    <span class="k">print</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>

    <span class="n">cv2</span><span class="p">.</span><span class="n">line</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">99</span><span class="p">),</span> <span class="p">(</span><span class="mi">99</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>     
    <span class="n">cv2</span><span class="p">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">40</span><span class="p">,</span><span class="mi">60</span><span class="p">),</span> <span class="p">(</span><span class="mi">200</span><span class="p">,</span><span class="mi">170</span><span class="p">),</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="mi">1</span><span class="p">)</span> 
    <span class="n">cv2</span><span class="p">.</span><span class="n">circle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">150</span><span class="p">,</span><span class="mi">180</span><span class="p">),</span> <span class="mi">50</span> <span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">),</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># 두께를 -1로 주면 원의 색이 모두 채워짐
</span>    <span class="n">cv2</span><span class="p">.</span><span class="n">ellipse</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">160</span><span class="p">,</span><span class="mi">260</span><span class="p">),(</span><span class="mi">50</span><span class="p">,</span><span class="mi">20</span><span class="p">),</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">360</span><span class="p">,</span> <span class="p">(</span><span class="mi">127</span><span class="p">,</span><span class="mi">127</span><span class="p">,</span><span class="mi">127</span><span class="p">),</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">ellipse</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="mi">260</span><span class="p">,</span><span class="mi">360</span><span class="p">),(</span><span class="mi">70</span><span class="p">,</span><span class="mi">40</span><span class="p">),</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">180</span><span class="p">,</span> <span class="p">(</span><span class="mi">127</span><span class="p">,</span><span class="mi">127</span><span class="p">,</span><span class="mi">255</span><span class="p">),</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>  <span class="c1">#회전
</span>
    <span class="n">points</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">80</span><span class="p">,</span><span class="mi">10</span><span class="p">],[</span><span class="mi">125</span><span class="p">,</span><span class="mi">75</span><span class="p">],[</span><span class="mi">179</span><span class="p">,</span><span class="mi">10</span><span class="p">],[</span><span class="mi">230</span><span class="p">,</span><span class="mi">160</span><span class="p">],[</span><span class="mi">80</span><span class="p">,</span><span class="mi">90</span><span class="p">]],</span> <span class="n">np</span><span class="p">.</span><span class="n">int32</span><span class="p">)</span>
    <span class="n">points</span> <span class="o">=</span> <span class="n">points</span><span class="p">.</span><span class="n">reshape</span><span class="p">((</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">polylines</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">[</span><span class="n">points</span><span class="p">],</span> <span class="bp">True</span><span class="p">,(</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">))</span>

    <span class="n">text1</span> <span class="o">=</span><span class="s">'Test Text'</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">putText</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">text1</span><span class="p">,</span> <span class="p">(</span><span class="mi">200</span><span class="p">,</span><span class="mi">300</span><span class="p">),</span> <span class="n">cv2</span><span class="p">.</span><span class="n">FONT_HERSHEY_SIMPLEX</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mi">0</span><span class="p">))</span>

    <span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'Lena'</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>    
    <span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">(</span><span class="s">'Lena'</span><span class="p">)</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>  
</code></pre></div></div>

<h1 id="color-색상">Color 색상</h1>
<p>cv2에서 제공하는 색상 관련 상수을 출력 합니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">filename</span> <span class="ow">in</span> <span class="nb">dir</span><span class="p">(</span><span class="n">cv2</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">filename</span><span class="p">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">'COLOR_'</span><span class="p">):</span>
            <span class="k">print</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
            <span class="n">j</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="mi">1</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'count: '</span><span class="o">+</span><span class="nb">str</span><span class="p">((</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">)))</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>  

<span class="c1"># 출력 
</span><span class="n">COLOR_BAYER_BG2BGR</span>
<span class="n">COLOR_BAYER_BG2BGRA</span>
<span class="n">COLOR_BAYER_BG2BGR_EA</span>
<span class="n">COLOR_BAYER_BG2BGR_VNG</span>
<span class="n">COLOR_BAYER_BG2GRAY</span>
<span class="n">COLOR_BAYER_BG2RGB</span>
<span class="n">COLOR_BAYER_BG2RGBA</span>
<span class="n">COLOR_BAYER_BG2RGB_EA</span>
<span class="n">COLOR_BAYER_BG2RGB_VNG</span>
<span class="n">COLOR_BAYER_BGGR2BGR</span>
<span class="n">COLOR_BAYER_BGGR2BGRA</span>
<span class="n">COLOR_BAYER_BGGR2BGR_EA</span>
<span class="n">COLOR_BAYER_BGGR2BGR_VNG</span>
<span class="n">COLOR_BAYER_BGGR2GRAY</span>
<span class="n">COLOR_BAYER_BGGR2RGB</span>
<span class="n">COLOR_BAYER_BGGR2RGBA</span>
<span class="n">COLOR_BAYER_BGGR2RGB_EA</span>
<span class="n">COLOR_BAYER_BGGR2RGB_VNG</span>
<span class="n">COLOR_BAYER_GB2BGR</span>
<span class="n">COLOR_BAYER_GB2BGRA</span>
<span class="n">COLOR_BAYER_GB2BGR_EA</span>
<span class="n">COLOR_BAYER_GB2BGR_VNG</span>
<span class="n">COLOR_BAYER_GB2GRAY</span>
<span class="n">COLOR_BAYER_GB2RGB</span>
<span class="n">COLOR_BAYER_GB2RGBA</span>
<span class="n">COLOR_BAYER_GB2RGB_EA</span>
<span class="n">COLOR_BAYER_GB2RGB_VNG</span>
<span class="n">COLOR_BAYER_GBRG2BGR</span>
<span class="n">COLOR_BAYER_GBRG2BGRA</span>
<span class="n">COLOR_BAYER_GBRG2BGR_EA</span>
<span class="n">COLOR_BAYER_GBRG2BGR_VNG</span>
<span class="n">COLOR_BAYER_GBRG2GRAY</span>
<span class="n">COLOR_BAYER_GBRG2RGB</span>
<span class="n">COLOR_BAYER_GBRG2RGBA</span>
<span class="n">COLOR_BAYER_GBRG2RGB_EA</span>
<span class="n">COLOR_BAYER_GBRG2RGB_VNG</span>
<span class="n">COLOR_BAYER_GR2BGR</span>
<span class="n">COLOR_BAYER_GR2BGRA</span>
<span class="n">COLOR_BAYER_GR2BGR_EA</span>
<span class="n">COLOR_BAYER_GR2BGR_VNG</span>
<span class="n">COLOR_BAYER_GR2GRAY</span>
<span class="n">COLOR_BAYER_GR2RGB</span>
<span class="n">COLOR_BAYER_GR2RGBA</span>
<span class="n">COLOR_BAYER_GR2RGB_EA</span>
<span class="n">COLOR_BAYER_GR2RGB_VNG</span>
<span class="n">COLOR_BAYER_GRBG2BGR</span>
<span class="n">COLOR_BAYER_GRBG2BGRA</span>
<span class="n">COLOR_BAYER_GRBG2BGR_EA</span>
<span class="n">COLOR_BAYER_GRBG2BGR_VNG</span>
<span class="n">COLOR_BAYER_GRBG2GRAY</span>
<span class="n">COLOR_BAYER_GRBG2RGB</span>
<span class="n">COLOR_BAYER_GRBG2RGBA</span>
<span class="n">COLOR_BAYER_GRBG2RGB_EA</span>
<span class="n">COLOR_BAYER_GRBG2RGB_VNG</span>
<span class="n">COLOR_BAYER_RG2BGR</span>
<span class="n">COLOR_BAYER_RG2BGRA</span>
<span class="n">COLOR_BAYER_RG2BGR_EA</span>
<span class="n">COLOR_BAYER_RG2BGR_VNG</span>
<span class="n">COLOR_BAYER_RG2GRAY</span>
<span class="n">COLOR_BAYER_RG2RGB</span>
<span class="n">COLOR_BAYER_RG2RGBA</span>
<span class="n">COLOR_BAYER_RG2RGB_EA</span>
<span class="n">COLOR_BAYER_RG2RGB_VNG</span>
<span class="n">COLOR_BAYER_RGGB2BGR</span>
<span class="n">COLOR_BAYER_RGGB2BGRA</span>
<span class="n">COLOR_BAYER_RGGB2BGR_EA</span>
<span class="n">COLOR_BAYER_RGGB2BGR_VNG</span>
<span class="n">COLOR_BAYER_RGGB2GRAY</span>
<span class="n">COLOR_BAYER_RGGB2RGB</span>
<span class="n">COLOR_BAYER_RGGB2RGBA</span>
<span class="n">COLOR_BAYER_RGGB2RGB_EA</span>
<span class="n">COLOR_BAYER_RGGB2RGB_VNG</span>
<span class="n">COLOR_BGR2BGR555</span>
<span class="n">COLOR_BGR2BGR565</span>
<span class="n">COLOR_BGR2BGRA</span>
<span class="n">COLOR_BGR2GRAY</span>
<span class="n">COLOR_BGR2HLS</span>
<span class="n">COLOR_BGR2HLS_FULL</span>
<span class="n">COLOR_BGR2HSV</span>
<span class="n">COLOR_BGR2HSV_FULL</span>
<span class="n">COLOR_BGR2LAB</span>
<span class="n">COLOR_BGR2LUV</span>
<span class="n">COLOR_BGR2Lab</span>
<span class="n">COLOR_BGR2Luv</span>
<span class="n">COLOR_BGR2RGB</span>
<span class="n">COLOR_BGR2RGBA</span>
<span class="n">COLOR_BGR2XYZ</span>
<span class="n">COLOR_BGR2YCR_CB</span>
<span class="n">COLOR_BGR2YCrCb</span>
<span class="n">COLOR_BGR2YUV</span>
<span class="n">COLOR_BGR2YUV_I420</span>
<span class="n">COLOR_BGR2YUV_IYUV</span>
<span class="n">COLOR_BGR2YUV_YV12</span>
<span class="n">COLOR_BGR5552BGR</span>
<span class="n">COLOR_BGR5552BGRA</span>
<span class="n">COLOR_BGR5552GRAY</span>
<span class="n">COLOR_BGR5552RGB</span>
<span class="n">COLOR_BGR5552RGBA</span>
<span class="n">COLOR_BGR5652BGR</span>
<span class="n">COLOR_BGR5652BGRA</span>
<span class="n">COLOR_BGR5652GRAY</span>
<span class="n">COLOR_BGR5652RGB</span>
<span class="n">COLOR_BGR5652RGBA</span>
<span class="n">COLOR_BGRA2BGR</span>
<span class="n">COLOR_BGRA2BGR555</span>
<span class="n">COLOR_BGRA2BGR565</span>
<span class="n">COLOR_BGRA2GRAY</span>
<span class="n">COLOR_BGRA2RGB</span>
<span class="n">COLOR_BGRA2RGBA</span>
<span class="n">COLOR_BGRA2YUV_I420</span>
<span class="n">COLOR_BGRA2YUV_IYUV</span>
<span class="n">COLOR_BGRA2YUV_YV12</span>
<span class="n">COLOR_BayerBG2BGR</span>
<span class="n">COLOR_BayerBG2BGRA</span>
<span class="n">COLOR_BayerBG2BGR_EA</span>
<span class="n">COLOR_BayerBG2BGR_VNG</span>
<span class="n">COLOR_BayerBG2GRAY</span>
<span class="n">COLOR_BayerBG2RGB</span>
<span class="n">COLOR_BayerBG2RGBA</span>
<span class="n">COLOR_BayerBG2RGB_EA</span>
<span class="n">COLOR_BayerBG2RGB_VNG</span>
<span class="n">COLOR_BayerBGGR2BGR</span>
<span class="n">COLOR_BayerBGGR2BGRA</span>
<span class="n">COLOR_BayerBGGR2BGR_EA</span>
<span class="n">COLOR_BayerBGGR2BGR_VNG</span>
<span class="n">COLOR_BayerBGGR2GRAY</span>
<span class="n">COLOR_BayerBGGR2RGB</span>
<span class="n">COLOR_BayerBGGR2RGBA</span>
<span class="n">COLOR_BayerBGGR2RGB_EA</span>
<span class="n">COLOR_BayerBGGR2RGB_VNG</span>
<span class="n">COLOR_BayerGB2BGR</span>
<span class="n">COLOR_BayerGB2BGRA</span>
<span class="n">COLOR_BayerGB2BGR_EA</span>
<span class="n">COLOR_BayerGB2BGR_VNG</span>
<span class="n">COLOR_BayerGB2GRAY</span>
<span class="n">COLOR_BayerGB2RGB</span>
<span class="n">COLOR_BayerGB2RGBA</span>
<span class="n">COLOR_BayerGB2RGB_EA</span>
<span class="n">COLOR_BayerGB2RGB_VNG</span>
<span class="n">COLOR_BayerGBRG2BGR</span>
<span class="n">COLOR_BayerGBRG2BGRA</span>
<span class="n">COLOR_BayerGBRG2BGR_EA</span>
<span class="n">COLOR_BayerGBRG2BGR_VNG</span>
<span class="n">COLOR_BayerGBRG2GRAY</span>
<span class="n">COLOR_BayerGBRG2RGB</span>
<span class="n">COLOR_BayerGBRG2RGBA</span>
<span class="n">COLOR_BayerGBRG2RGB_EA</span>
<span class="n">COLOR_BayerGBRG2RGB_VNG</span>
<span class="n">COLOR_BayerGR2BGR</span>
<span class="n">COLOR_BayerGR2BGRA</span>
<span class="n">COLOR_BayerGR2BGR_EA</span>
<span class="n">COLOR_BayerGR2BGR_VNG</span>
<span class="n">COLOR_BayerGR2GRAY</span>
<span class="n">COLOR_BayerGR2RGB</span>
<span class="n">COLOR_BayerGR2RGBA</span>
<span class="n">COLOR_BayerGR2RGB_EA</span>
<span class="n">COLOR_BayerGR2RGB_VNG</span>
<span class="n">COLOR_BayerGRBG2BGR</span>
<span class="n">COLOR_BayerGRBG2BGRA</span>
<span class="n">COLOR_BayerGRBG2BGR_EA</span>
<span class="n">COLOR_BayerGRBG2BGR_VNG</span>
<span class="n">COLOR_BayerGRBG2GRAY</span>
<span class="n">COLOR_BayerGRBG2RGB</span>
<span class="n">COLOR_BayerGRBG2RGBA</span>
<span class="n">COLOR_BayerGRBG2RGB_EA</span>
<span class="n">COLOR_BayerGRBG2RGB_VNG</span>
<span class="n">COLOR_BayerRG2BGR</span>
<span class="n">COLOR_BayerRG2BGRA</span>
<span class="n">COLOR_BayerRG2BGR_EA</span>
<span class="n">COLOR_BayerRG2BGR_VNG</span>
<span class="n">COLOR_BayerRG2GRAY</span>
<span class="n">COLOR_BayerRG2RGB</span>
<span class="n">COLOR_BayerRG2RGBA</span>
<span class="n">COLOR_BayerRG2RGB_EA</span>
<span class="n">COLOR_BayerRG2RGB_VNG</span>
<span class="n">COLOR_BayerRGGB2BGR</span>
<span class="n">COLOR_BayerRGGB2BGRA</span>
<span class="n">COLOR_BayerRGGB2BGR_EA</span>
<span class="n">COLOR_BayerRGGB2BGR_VNG</span>
<span class="n">COLOR_BayerRGGB2GRAY</span>
<span class="n">COLOR_BayerRGGB2RGB</span>
<span class="n">COLOR_BayerRGGB2RGBA</span>
<span class="n">COLOR_BayerRGGB2RGB_EA</span>
<span class="n">COLOR_BayerRGGB2RGB_VNG</span>
<span class="n">COLOR_COLORCVT_MAX</span>
<span class="n">COLOR_GRAY2BGR</span>
<span class="n">COLOR_GRAY2BGR555</span>
<span class="n">COLOR_GRAY2BGR565</span>
<span class="n">COLOR_GRAY2BGRA</span>
<span class="n">COLOR_GRAY2RGB</span>
<span class="n">COLOR_GRAY2RGBA</span>
<span class="n">COLOR_HLS2BGR</span>
<span class="n">COLOR_HLS2BGR_FULL</span>
<span class="n">COLOR_HLS2RGB</span>
<span class="n">COLOR_HLS2RGB_FULL</span>
<span class="n">COLOR_HSV2BGR</span>
<span class="n">COLOR_HSV2BGR_FULL</span>
<span class="n">COLOR_HSV2RGB</span>
<span class="n">COLOR_HSV2RGB_FULL</span>
<span class="n">COLOR_LAB2BGR</span>
<span class="n">COLOR_LAB2LBGR</span>
<span class="n">COLOR_LAB2LRGB</span>
<span class="n">COLOR_LAB2RGB</span>
<span class="n">COLOR_LBGR2LAB</span>
<span class="n">COLOR_LBGR2LUV</span>
<span class="n">COLOR_LBGR2Lab</span>
<span class="n">COLOR_LBGR2Luv</span>
<span class="n">COLOR_LRGB2LAB</span>
<span class="n">COLOR_LRGB2LUV</span>
<span class="n">COLOR_LRGB2Lab</span>
<span class="n">COLOR_LRGB2Luv</span>
<span class="n">COLOR_LUV2BGR</span>
<span class="n">COLOR_LUV2LBGR</span>
<span class="n">COLOR_LUV2LRGB</span>
<span class="n">COLOR_LUV2RGB</span>
<span class="n">COLOR_Lab2BGR</span>
<span class="n">COLOR_Lab2LBGR</span>
<span class="n">COLOR_Lab2LRGB</span>
<span class="n">COLOR_Lab2RGB</span>
<span class="n">COLOR_Luv2BGR</span>
<span class="n">COLOR_Luv2LBGR</span>
<span class="n">COLOR_Luv2LRGB</span>
<span class="n">COLOR_Luv2RGB</span>
<span class="n">COLOR_M_RGBA2RGBA</span>
<span class="n">COLOR_RGB2BGR</span>
<span class="n">COLOR_RGB2BGR555</span>
<span class="n">COLOR_RGB2BGR565</span>
<span class="n">COLOR_RGB2BGRA</span>
<span class="n">COLOR_RGB2GRAY</span>
<span class="n">COLOR_RGB2HLS</span>
<span class="n">COLOR_RGB2HLS_FULL</span>
<span class="n">COLOR_RGB2HSV</span>
<span class="n">COLOR_RGB2HSV_FULL</span>
<span class="n">COLOR_RGB2LAB</span>
<span class="n">COLOR_RGB2LUV</span>
<span class="n">COLOR_RGB2Lab</span>
<span class="n">COLOR_RGB2Luv</span>
<span class="n">COLOR_RGB2RGBA</span>
<span class="n">COLOR_RGB2XYZ</span>
<span class="n">COLOR_RGB2YCR_CB</span>
<span class="n">COLOR_RGB2YCrCb</span>
<span class="n">COLOR_RGB2YUV</span>
<span class="n">COLOR_RGB2YUV_I420</span>
<span class="n">COLOR_RGB2YUV_IYUV</span>
<span class="n">COLOR_RGB2YUV_YV12</span>
<span class="n">COLOR_RGBA2BGR</span>
<span class="n">COLOR_RGBA2BGR555</span>
<span class="n">COLOR_RGBA2BGR565</span>
<span class="n">COLOR_RGBA2BGRA</span>
<span class="n">COLOR_RGBA2GRAY</span>
<span class="n">COLOR_RGBA2M_RGBA</span>
<span class="n">COLOR_RGBA2RGB</span>
<span class="n">COLOR_RGBA2YUV_I420</span>
<span class="n">COLOR_RGBA2YUV_IYUV</span>
<span class="n">COLOR_RGBA2YUV_YV12</span>
<span class="n">COLOR_RGBA2mRGBA</span>
<span class="n">COLOR_XYZ2BGR</span>
<span class="n">COLOR_XYZ2RGB</span>
<span class="n">COLOR_YCR_CB2BGR</span>
<span class="n">COLOR_YCR_CB2RGB</span>
<span class="n">COLOR_YCrCb2BGR</span>
<span class="n">COLOR_YCrCb2RGB</span>
<span class="n">COLOR_YUV2BGR</span>
<span class="n">COLOR_YUV2BGRA_I420</span>
<span class="n">COLOR_YUV2BGRA_IYUV</span>
<span class="n">COLOR_YUV2BGRA_NV12</span>
<span class="n">COLOR_YUV2BGRA_NV21</span>
<span class="n">COLOR_YUV2BGRA_UYNV</span>
<span class="n">COLOR_YUV2BGRA_UYVY</span>
<span class="n">COLOR_YUV2BGRA_Y422</span>
<span class="n">COLOR_YUV2BGRA_YUNV</span>
<span class="n">COLOR_YUV2BGRA_YUY2</span>
<span class="n">COLOR_YUV2BGRA_YUYV</span>
<span class="n">COLOR_YUV2BGRA_YV12</span>
<span class="n">COLOR_YUV2BGRA_YVYU</span>
<span class="n">COLOR_YUV2BGR_I420</span>
<span class="n">COLOR_YUV2BGR_IYUV</span>
<span class="n">COLOR_YUV2BGR_NV12</span>
<span class="n">COLOR_YUV2BGR_NV21</span>
<span class="n">COLOR_YUV2BGR_UYNV</span>
<span class="n">COLOR_YUV2BGR_UYVY</span>
<span class="n">COLOR_YUV2BGR_Y422</span>
<span class="n">COLOR_YUV2BGR_YUNV</span>
<span class="n">COLOR_YUV2BGR_YUY2</span>
<span class="n">COLOR_YUV2BGR_YUYV</span>
<span class="n">COLOR_YUV2BGR_YV12</span>
<span class="n">COLOR_YUV2BGR_YVYU</span>
<span class="n">COLOR_YUV2GRAY_420</span>
<span class="n">COLOR_YUV2GRAY_I420</span>
<span class="n">COLOR_YUV2GRAY_IYUV</span>
<span class="n">COLOR_YUV2GRAY_NV12</span>
<span class="n">COLOR_YUV2GRAY_NV21</span>
<span class="n">COLOR_YUV2GRAY_UYNV</span>
<span class="n">COLOR_YUV2GRAY_UYVY</span>
<span class="n">COLOR_YUV2GRAY_Y422</span>
<span class="n">COLOR_YUV2GRAY_YUNV</span>
<span class="n">COLOR_YUV2GRAY_YUY2</span>
<span class="n">COLOR_YUV2GRAY_YUYV</span>
<span class="n">COLOR_YUV2GRAY_YV12</span>
<span class="n">COLOR_YUV2GRAY_YVYU</span>
<span class="n">COLOR_YUV2RGB</span>
<span class="n">COLOR_YUV2RGBA_I420</span>
<span class="n">COLOR_YUV2RGBA_IYUV</span>
<span class="n">COLOR_YUV2RGBA_NV12</span>
<span class="n">COLOR_YUV2RGBA_NV21</span>
<span class="n">COLOR_YUV2RGBA_UYNV</span>
<span class="n">COLOR_YUV2RGBA_UYVY</span>
<span class="n">COLOR_YUV2RGBA_Y422</span>
<span class="n">COLOR_YUV2RGBA_YUNV</span>
<span class="n">COLOR_YUV2RGBA_YUY2</span>
<span class="n">COLOR_YUV2RGBA_YUYV</span>
<span class="n">COLOR_YUV2RGBA_YV12</span>
<span class="n">COLOR_YUV2RGBA_YVYU</span>
<span class="n">COLOR_YUV2RGB_I420</span>
<span class="n">COLOR_YUV2RGB_IYUV</span>
<span class="n">COLOR_YUV2RGB_NV12</span>
<span class="n">COLOR_YUV2RGB_NV21</span>
<span class="n">COLOR_YUV2RGB_UYNV</span>
<span class="n">COLOR_YUV2RGB_UYVY</span>
<span class="n">COLOR_YUV2RGB_Y422</span>
<span class="n">COLOR_YUV2RGB_YUNV</span>
<span class="n">COLOR_YUV2RGB_YUY2</span>
<span class="n">COLOR_YUV2RGB_YUYV</span>
<span class="n">COLOR_YUV2RGB_YV12</span>
<span class="n">COLOR_YUV2RGB_YVYU</span>
<span class="n">COLOR_YUV420P2BGR</span>
<span class="n">COLOR_YUV420P2BGRA</span>
<span class="n">COLOR_YUV420P2GRAY</span>
<span class="n">COLOR_YUV420P2RGB</span>
<span class="n">COLOR_YUV420P2RGBA</span>
<span class="n">COLOR_YUV420SP2BGRA</span>
<span class="n">COLOR_YUV420SP2GRAY</span>
<span class="n">COLOR_YUV420SP2RGB</span>
<span class="n">COLOR_YUV420SP2RGBA</span>
<span class="n">COLOR_YUV420p2BGR</span>
<span class="n">COLOR_YUV420p2BGRA</span>
<span class="n">COLOR_YUV420p2GRAY</span>
<span class="n">COLOR_YUV420p2RGB</span>
<span class="n">COLOR_YUV420p2RGBA</span>
<span class="n">COLOR_YUV420sp2BGR</span>
<span class="n">COLOR_YUV420sp2BGRA</span>
<span class="n">COLOR_YUV420sp2GRAY</span>
<span class="n">COLOR_YUV420sp2RGB</span>
<span class="n">COLOR_YUV420sp2RGBA</span>
<span class="n">COLOR_mRGBA2RGBA</span>
<span class="n">count</span> <span class="p">:</span> <span class="mi">347</span>
</code></pre></div></div>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-opencv)</span></p>
<ul>

    
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-mouse-event/">[OpenCV] 마우스이벤트</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-window-event/">[OpenCV] 윈도우 처리, 키이벤트</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-video-rw/">[OpenCV] 비디오/캠 불러오기, 저장하기</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-image-rw/">[OpenCV] 이미지 불러오기, 저장하기, 사이즈 변경</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-basic-draw/">[OpenCV] 기본 도형 그리기</a></li>
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="opencv" /><category term="cv2.putText" /><category term="cv2.line" /><category term="cv2.rectangle" /><category term="cv2.polylines" /><category term="cv2.circle" /><category term="lecture-opencv" /><summary type="html"><![CDATA[영상 또는 이미지 데이터 위에 Text, 선, 사각형, 다각형 등을 그리기. 하기 표시되는 color는 BGR 입니다. 참고 바랍니다.]]></summary></entry><entry><title type="html">[OpenCV] 비디오/캠 불러오기, 저장하기</title><link href="https://kimjaehyun.co.kr/python/python-opencv-video-rw/" rel="alternate" type="text/html" title="[OpenCV] 비디오/캠 불러오기, 저장하기" /><published>2022-06-20T00:00:00-05:00</published><updated>2022-06-20T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python-opencv-video-rw</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python-opencv-video-rw/"><![CDATA[<p>비디오 파일 재생하기와, Cam을 통한 영상을 저장하는 것을 진행해 보겠습니다.</p>

<h1 id="비디오-처리">비디오 처리</h1>

<h2 id="비디오-파일-불러오기">비디오 파일 불러오기</h2>
<p>영상을 읽어오기 위해서는 <code class="language-plaintext highlighter-rouge">cv2.VideoCapture</code> 메소드를 사용합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>

<span class="n">video_file</span> <span class="o">=</span><span class="s">'sample.avi'</span>

<span class="n">cap</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">VideoCapture</span><span class="p">(</span><span class="n">video_file</span><span class="p">)</span>
<span class="k">if</span> <span class="n">cap</span><span class="p">.</span><span class="n">isOpened</span><span class="p">():</span>
    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
        <span class="n">ret</span><span class="p">,</span> <span class="n">img</span> <span class="o">=</span> <span class="n">cap</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>       <span class="c1"># ret는 bool값으로 읽기가 성공일때 true를 반환
</span>        <span class="k">if</span> <span class="n">ret</span><span class="p">:</span>
            <span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">video_file</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">25</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>   <span class="c1">#25ms 단위로 키 입력을 대기함.
</span>                <span class="k">break</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">break</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'cant open video.'</span><span class="p">)</span>
<span class="n">cap</span><span class="p">.</span><span class="n">release</span><span class="p">()</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></div></div>
<p>위 소스에서 <code class="language-plaintext highlighter-rouge">cv2.waitKey(25)</code> 에서 25의 경우, 25ms을 의미하며,   <br />
<code class="language-plaintext highlighter-rouge">25 = 1000 / 40</code> 즉, 40fps 의 값을 의미합니다. <br />
동영상 파일이 40fps가 많아서 해당 값을 사용합니다.  <br />
30fps인 경우 <code class="language-plaintext highlighter-rouge">1000/30 = 33.333</code> 로 <code class="language-plaintext highlighter-rouge">cv2.waitKey(33)</code> 으로 사용하면 됩니다.</p>

<h2 id="캠-영상-불러오기">캠 영상 불러오기</h2>
<p>연결된 장치의 캠에서 영상을 불러옵니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>

<span class="n">cap</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">VideoCapture</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="c1">#연결된 장치의 순서에 따라서 번호는 다를수 있음 0,1,2....
</span><span class="k">if</span> <span class="n">cap</span><span class="p">.</span><span class="n">isOpened</span><span class="p">():</span>
    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
        <span class="n">ret</span><span class="p">,</span> <span class="n">img</span> <span class="o">=</span> <span class="n">cap</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>
        <span class="k">if</span> <span class="n">ret</span><span class="p">:</span>
            <span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'CAMERA Window'</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
                <span class="k">break</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">'프레임없음'</span><span class="p">)</span>
            <span class="k">break</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'카메라 열기 실패'</span><span class="p">)</span>
<span class="n">cap</span><span class="p">.</span><span class="n">release</span><span class="p">()</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="캠-영상-저장하기">캠 영상 저장하기</h2>
<p>카메라 오픈 후 개별 frame정보를 저장하는 방식으로 영상을 저장 합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>

<span class="n">cap</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">VideoCapture</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>

<span class="k">if</span> <span class="n">cap</span><span class="p">.</span><span class="n">isOpened</span><span class="p">():</span>
    <span class="n">file_path</span> <span class="o">=</span> <span class="s">'path/sample.avi'</span>
    <span class="n">fps</span> <span class="o">=</span> <span class="mf">25.40</span>
    <span class="n">fourcc</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">VideoWriter_fourcc</span><span class="p">(</span><span class="o">*</span><span class="s">'DIVX'</span><span class="p">)</span> 
    <span class="n">width</span> <span class="o">=</span> <span class="n">cap</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">cv2</span><span class="p">.</span><span class="n">CAP_PROP_FRAME_WIDTH</span><span class="p">)</span>
    <span class="n">height</span> <span class="o">=</span> <span class="n">cap</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">cv2</span><span class="p">.</span><span class="n">CAP_PROP_FRAME_HEIGHT</span><span class="p">)</span>
    <span class="n">size</span> <span class="o">=</span> <span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">width</span><span class="p">),</span> <span class="nb">int</span><span class="p">(</span><span class="n">height</span><span class="p">))</span>
    <span class="n">out</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">VideoWriter</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="n">fourcc</span><span class="p">,</span> <span class="n">fps</span><span class="p">,</span> <span class="n">size</span><span class="p">)</span>
    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
        <span class="n">ret</span><span class="p">,</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">cap</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>     <span class="c1">#비디오에 대한 영역만 읽어옴, Sound 미포함.
</span>        <span class="k">if</span> <span class="n">ret</span><span class="p">:</span>
            <span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'REC'</span><span class="p">,</span> <span class="n">frame</span><span class="p">)</span>
            <span class="n">out</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">frame</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="mi">1000</span> <span class="o">/</span> <span class="n">fps</span><span class="p">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
                <span class="k">break</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">'frame 정보 없음'</span><span class="p">)</span>
            <span class="k">break</span>
    <span class="n">out</span><span class="p">.</span><span class="n">release</span><span class="p">()</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'카메라 열기 실패'</span><span class="p">)</span>
<span class="n">cap</span><span class="p">.</span><span class="n">release</span><span class="p">()</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>

</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">fourcc = cv2.VideoWriter_fourcc(*'DIVX')</code> 부분은 저장 코덱을 선정하는 부분으로 다양한 코덱을 선정 할 수 있습니다.</p>
<ul>
  <li>(*‘DIVX’)DivxX mepg-4</li>
  <li>(*‘FMP4’)  FFMPEG</li>
  <li>(*‘WMV2’)  Window Media video8 코덱</li>
  <li>(*‘X264’)  H.264</li>
</ul>

<p>cap 객체를 통해서 아래 추가가 값을 조회(get)/설정(set) 할수 있습니다.</p>
<ul>
  <li>cv2.CAP_PROP_FRAME_WIDTH : 프레임 폭</li>
  <li>cv2.CAP_PROP_FRAME_HEIGHT : 프레임 높이</li>
  <li>cv2.CAP_PROP_FPS : 초당 프레임 수</li>
  <li>cv2/CAP_PROP_FOURCC : 동영상 파일의 코덱문자</li>
  <li>cv2.CAP_PROP_POS_MSEC : 동영상 파일의 프레임 위치(ms)</li>
  <li>cv2.CAP_PROP_POS_AVI_RATIO : 동영상 파일의 상대 위치(0:시작, 1:끝)</li>
  <li>cv2.CAP_PROP_AUTOFOCUS : 카메라 자동 초점 조절</li>
  <li>cv2.CAP_PROP_ZOOM : 카메라 줌</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fps</span> <span class="o">=</span> <span class="n">cap</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">cv2</span><span class="p">.</span><span class="n">CAP_PROP_FPS</span><span class="p">)</span>
<span class="n">delay</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="mi">1000</span><span class="o">/</span><span class="n">fps</span><span class="p">)</span> 
<span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="n">delay</span><span class="p">)</span>
</code></pre></div></div>
<h2 id="비디오-정지-화면-저장">비디오 정지 화면 저장</h2>
<p>비디오 소스에서 정지 화면 저장하기</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">cap</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">VideoCapture</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">cap</span><span class="p">.</span><span class="n">isOpened</span><span class="p">():</span>
        <span class="n">ret</span><span class="p">,</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">cap</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>
        <span class="k">print</span><span class="p">(</span><span class="n">ret</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="n">frame</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">ret</span> <span class="o">=</span> <span class="bp">False</span><span class="p">;</span>

    <span class="n">img1</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">frame</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">COLOR_BGR2RGB</span><span class="p">)</span>

    <span class="n">plt</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img1</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Color Image RGB'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">xticks</span><span class="p">([])</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">yticks</span><span class="p">([])</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>

    <span class="n">cap</span><span class="p">.</span><span class="n">release</span><span class="p">()</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>  

</code></pre></div></div>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-opencv)</span></p>
<ul>

    
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-mouse-event/">[OpenCV] 마우스이벤트</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-window-event/">[OpenCV] 윈도우 처리, 키이벤트</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-video-rw/">[OpenCV] 비디오/캠 불러오기, 저장하기</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-image-rw/">[OpenCV] 이미지 불러오기, 저장하기, 사이즈 변경</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-basic-draw/">[OpenCV] 기본 도형 그리기</a></li>
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="opencv" /><category term="cv2.VideoCapture" /><category term="cv2.VideoWriter_fourcc" /><category term="lecture-opencv" /><summary type="html"><![CDATA[비디오 파일 재생하기와, Cam을 통한 영상을 저장하는 것을 진행해 보겠습니다.]]></summary></entry><entry><title type="html">[OpenCV] 윈도우 처리, 키이벤트</title><link href="https://kimjaehyun.co.kr/python/python-opencv-window-event/" rel="alternate" type="text/html" title="[OpenCV] 윈도우 처리, 키이벤트" /><published>2022-06-20T00:00:00-05:00</published><updated>2022-06-20T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python-opencv-window-event</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python-opencv-window-event/"><![CDATA[<p>OpenCV 기본적인 window 관련 자주 쓰이는 함수들을 정리 합니다.</p>

<h1 id="윈도우-관리">윈도우 관리</h1>
<h2 id="cv2namedwindow이름--opt">cv2.namedWindow(‘이름’ [, opt])</h2>
<p>윈도의 이름을 설정합니다. <br />
 opt 옵션 값</p>
<ul>
  <li>cv2.WINDOW_NORMAL : 사용자 창 크기 조절 가능</li>
  <li>cv2.WINDOW_AUTOSIZE : 이미지와 같은 크기, 창 크기 재조정 불 가능</li>
</ul>

<h2 id="cv2movewindow이름-x--y">cv2.moveWindow(‘이름’, x , y)</h2>
<p>x, y의 좌표로 이름에 해당하는 창이 이동합니다.</p>

<h2 id="cv2destorywindow이름">cv2.destoryWindow(‘이름’)</h2>
<p>특정 이름의 윈도으를 닫습니다.</p>

<h2 id="cv2destoryallwindows">cv2.destoryAllWindows()</h2>
<p>모든 윈도의 창을 닫습니다.</p>

<h1 id="이벤트-관리">이벤트 관리</h1>
<p><code class="language-plaintext highlighter-rouge">waitKey</code>를 통해서 키 이벤트를 처리 할 수 있습니다.
<code class="language-plaintext highlighter-rouge">if cv2.waitKey(0) == ord('k')</code> 키보드 <code class="language-plaintext highlighter-rouge">k</code> 를 찾을 수 있습니다. <code class="language-plaintext highlighter-rouge">ord</code> 함수를 통해서 ascii 변환 처리를 진행함.  <br />
64bit 일부 환경에서 ascii 변환시 오류 방지를 위해서 8bit 마스크를 진행함.  <br />
<code class="language-plaintext highlighter-rouge">if (cv2.waitKey(0) &amp; 0xFF) == ord('k')</code></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">k</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xFF</span>
<span class="k">print</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">char</span><span class="p">(</span><span class="n">k</span><span class="p">))</span>
<span class="n">x</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">y</span> <span class="o">=</span> <span class="mi">0</span>

<span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s">'d'</span><span class="p">)</span>
    <span class="n">x</span> <span class="o">=+</span> <span class="mi">100</span>
<span class="k">elif</span> <span class="n">k</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s">'w'</span><span class="p">)</span>
    <span class="n">y</span> <span class="o">=+</span> <span class="mi">100</span>
<span class="k">elif</span> <span class="n">k</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s">'x'</span><span class="p">)</span>
    <span class="n">y</span> <span class="o">=-</span> <span class="mi">100</span>
<span class="k">elif</span> <span class="n">k</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s">'a'</span><span class="p">)</span>
    <span class="n">x</span> <span class="o">=-</span> <span class="mi">100</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">moveWindow</span><span class="p">(</span><span class="s">'win'</span><span class="p">,</span><span class="n">x</span> <span class="p">,</span><span class="n">y</span><span class="p">)</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">상하좌우</code> 키보드를 통해서 하려면…  <br />
키값을 16진수로 입력 받아야 됩니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># key = cv2.waitKey(0) &amp; 0xFF
</span><span class="n">key</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">waitKeyEx</span><span class="p">()</span> <span class="c1"># 16진수 키캆
</span>
<span class="k">if</span> <span class="n">key</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s">'j'</span><span class="p">)</span> <span class="ow">or</span> <span class="n">key</span> <span class="o">==</span> <span class="mh">0x250000</span><span class="p">:</span>
    <span class="n">x</span> <span class="o">-=</span> <span class="mi">10</span>
<span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s">'l'</span><span class="p">)</span> <span class="ow">or</span> <span class="n">key</span> <span class="o">==</span> <span class="mh">0x270000</span><span class="p">:</span>
    <span class="n">x</span> <span class="o">+=</span> <span class="mi">10</span>
<span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s">'o'</span><span class="p">)</span> <span class="ow">or</span> <span class="n">key</span> <span class="o">==</span> <span class="mh">0x260000</span><span class="p">:</span>
    <span class="n">y</span> <span class="o">-=</span> <span class="mi">10</span>
<span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s">'k'</span><span class="p">)</span> <span class="ow">or</span> <span class="n">key</span> <span class="o">==</span> <span class="mh">0x280000</span><span class="p">:</span>
    <span class="n">y</span> <span class="o">+=</span> <span class="mi">10</span>
<span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s">'q'</span><span class="p">)</span> <span class="ow">or</span> <span class="n">key</span> <span class="o">==</span> <span class="mi">27</span><span class="p">:</span>
    <span class="k">break</span>
</code></pre></div></div>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-opencv)</span></p>
<ul>

    
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-mouse-event/">[OpenCV] 마우스이벤트</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-window-event/">[OpenCV] 윈도우 처리, 키이벤트</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-video-rw/">[OpenCV] 비디오/캠 불러오기, 저장하기</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-image-rw/">[OpenCV] 이미지 불러오기, 저장하기, 사이즈 변경</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-basic-draw/">[OpenCV] 기본 도형 그리기</a></li>
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="opencv" /><category term="WINDOW_AUTOSIZE" /><category term="WINDOW_NORMAL" /><category term="waitKey" /><category term="key event" /><category term="lecture-opencv" /><summary type="html"><![CDATA[OpenCV 기본적인 window 관련 자주 쓰이는 함수들을 정리 합니다.]]></summary></entry><entry><title type="html">[OpenCV] 이미지 불러오기, 저장하기, 사이즈 변경</title><link href="https://kimjaehyun.co.kr/python/python-opencv-image-rw/" rel="alternate" type="text/html" title="[OpenCV] 이미지 불러오기, 저장하기, 사이즈 변경" /><published>2022-06-20T00:00:00-05:00</published><updated>2022-06-20T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python-opencv-image-rw</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python-opencv-image-rw/"><![CDATA[<p>OpenCV는 오픈소스컴퓨터 비전 라이브러리(Open Source Computer Vision Library)로 영상 처리와 관련된 대표적인 오픈소스라이프로리 입니다.</p>
<ul>
  <li>1999년 1월 IPL(Image Process Library)를 기반 C언어로 시작함</li>
  <li>2000년 알파 버전 공개</li>
  <li>2005년 베타 버전 공개</li>
  <li>2006년 10월 v1.0 정식 버전 공개</li>
  <li>2009년 9월 v2.0 공개</li>
  <li>2010년 12월 v2.2 공개</li>
  <li>2011년 7월 v2.3 공개(안드로이드 지원, cv-&gt; cv2변경)</li>
  <li>2015년 6월 v3.0 공개</li>
  <li>2019년 1월 v4.0 공개</li>
</ul>

<p><a href="http://www.opencv.org" target="_blank">opencv.org 홈페이지</a></p>

<h1 id="설치">설치</h1>
<h2 id="python-설치">Python 설치</h2>
<p><a href="/python/python_study_01/" target="_blank">Python 설치</a></p>

<h2 id="opencv-설치">OpenCV 설치</h2>
<p><code class="language-plaintext highlighter-rouge">pip install opencv-python</code> 명령어를 통해서 설치 진행.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pip</span> <span class="n">install</span> <span class="n">opencv</span><span class="o">-</span><span class="n">python</span>
<span class="n">Collecting</span> <span class="n">opencv</span><span class="o">-</span><span class="n">python</span>
  <span class="n">Downloading</span> <span class="n">opencv_python</span><span class="o">-</span><span class="mf">4.6</span><span class="p">.</span><span class="mf">0.66</span><span class="o">-</span><span class="n">cp36</span><span class="o">-</span><span class="n">abi3</span><span class="o">-</span><span class="n">win_amd64</span><span class="p">.</span><span class="n">whl</span> <span class="p">(</span><span class="mf">35.6</span> <span class="n">MB</span><span class="p">)</span>
     <span class="o">|</span><span class="err">████████████████████████████████</span><span class="o">|</span> <span class="mf">35.6</span> <span class="n">MB</span> <span class="mi">43</span> <span class="n">kB</span><span class="o">/</span><span class="n">s</span>
<span class="n">Requirement</span> <span class="n">already</span> <span class="n">satisfied</span><span class="p">:</span> <span class="n">numpy</span><span class="o">&gt;=</span><span class="mf">1.14</span><span class="p">.</span><span class="mi">5</span><span class="p">;</span> <span class="n">python_version</span> <span class="o">&gt;=</span> <span class="s">"3.7"</span> <span class="ow">in</span> 

<span class="c1">#numpy, pandas matplotlib도 함께 설치를 권장
</span><span class="n">pip</span> <span class="n">install</span> <span class="n">numpy</span> <span class="n">pandas</span> <span class="n">matplotlib</span>
</code></pre></div></div>

<h1 id="이미지-처리">이미지 처리</h1>
<p>OpenCV 공부하다보면 나오는 <code class="language-plaintext highlighter-rouge">레나</code> 이미지.  <br />
레나(Lenna 또는 Lena)는 플레이보이 잡지 1972년 11월자의 센터폴드에 
실린 스웨덴의 모델인 레나 포르센(1951년 3월 31일 - )의 사진의 일부분을 말한다. - 위키백과</p>

<h2 id="이미지-불러오기">이미지 불러오기</h2>
<p>이미지를 읽어오기 위해서는 <code class="language-plaintext highlighter-rouge">cv2.imread</code> 메소드를 사용합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>

<span class="n">img_file</span> <span class="o">=</span> <span class="s">'path/lena.jpg'</span>
<span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="n">img_file</span><span class="p">)</span>
<span class="c1"># img = cv2.imread(img_file, cv2.IMREAD_GRAYSCALE)  #cv2.IMREAD_GRAYSCALE을 통해서 Gray모드로 읽기 가능
</span>
<span class="k">print</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>              <span class="c1">#이미지 배열 출력
</span><span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">img</span><span class="p">))</span>        <span class="c1">#&lt;class 'numpy.ndarray'&gt;
</span><span class="k">print</span><span class="p">(</span><span class="n">img</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>        <span class="c1">#(512, 512, 3)  resolution  512x512 3ch(R,G,B)
</span><span class="k">print</span><span class="p">(</span><span class="n">img</span><span class="p">.</span><span class="n">ndim</span><span class="p">)</span>         <span class="c1"># 3 ch      (gray인 경우 2ch로 출력됨)
</span><span class="k">print</span><span class="p">(</span><span class="n">img</span><span class="p">.</span><span class="n">size</span><span class="p">)</span>         <span class="c1"># 786432    = 512x512x3
</span>
<span class="k">if</span> <span class="n">img</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'IMG'</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">()</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">destoryAllWindow</span><span class="p">()</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'No Image'</span><span class="p">)</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">cv2.imread(file_name[, mode_flag])</code> 로 이미지를 로드할때 두번째 인자로 옵션을 줄수 있습니다. <br />
<code class="language-plaintext highlighter-rouge">mode_flag</code>에 올수 있는 옵션 종류</p>
<ul>
  <li>cv2.IMREAD_COLOR : 컬러(BGR) 로 읽기, 기본값</li>
  <li>cv2.IMREAD_UNCHANGE : 파일 그대로 읽기</li>
  <li>cv2.IMREAD_GRAYSCALE : 흑백으로 읽기</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">cv2.imshow(title, img)</code>  이미지에 title의 윈도우를 표시합니다.  <br />
<code class="language-plaintext highlighter-rouge">cv2.waitKey([delay])</code> 는 키보드의 입력을 대기합니다.</p>
<ul>
  <li>delay의 기본값은 0으로 무한대로 대기 합니다.</li>
  <li>값의 입력 단위는 ms  입니다.
<code class="language-plaintext highlighter-rouge">v = cv2.waitKey([delay])</code> 반환값은 키 코드 또는 아무 값도 입력되지 않은 경우 <code class="language-plaintext highlighter-rouge">-1</code>을 반환 합니다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span>
<span class="kn">import</span> <span class="nn">cv2</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="n">cv2</span><span class="p">.</span><span class="n">__version__</span><span class="p">)</span>

    <span class="n">imgpath</span> <span class="o">=</span><span class="s">"path\lena_color_512.tif"</span>
    <span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="n">imgpath</span><span class="p">)</span>

    <span class="n">cv2</span><span class="p">.</span><span class="n">namedWindow</span><span class="p">(</span><span class="s">'Lena'</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">WINDOW_AUTOSIZE</span><span class="p">)</span>    <span class="c1">#창에 이름을 할당
</span>    <span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'Lena'</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">(</span><span class="s">'Lena'</span><span class="p">)</span>      <span class="c1">#창 이름으로 닫기
</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="웹-이미지-불러오기">웹 이미지 불러오기</h2>
<p><code class="language-plaintext highlighter-rouge">req.urlretrieve</code> 를 통해서 이미지를 웹에서 읽어옵니다. 
웹에 이미지를  test.png로 저장후 로드하는 예제 입니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">urllib.request</span> <span class="k">as</span> <span class="n">req</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">'http://xxxxx.png'</span>
<span class="n">req</span><span class="p">.</span><span class="n">urlretrieve</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="s">'path/test.png'</span><span class="p">)</span>
<span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="s">'path/test.png'</span><span class="p">)</span>

<span class="k">if</span> <span class="n">img</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'IMG'</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">()</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">destoryAllWindow</span><span class="p">()</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'not found Image'</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="이미지-저장하기">이미지 저장하기</h2>
<p>이미지를 새로 저장하는 방법</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">img_file</span> <span class="o">=</span> <span class="s">'path/lena.jpg'</span>
<span class="n">new_file</span> <span class="o">=</span> <span class="s">'path/lena_gray.jpg'</span>

<span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="n">img_file</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">IMREAD_GRAYSCALE</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img_file</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">imwrite</span><span class="p">(</span><span class="n">new_file</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">()</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="이미지-사이즈-변경-하기">이미지 사이즈 변경 하기</h2>
<p><code class="language-plaintext highlighter-rouge">cv2.resize</code> 를 통해서 이미지의 사이즈를 변경 할수 있읍니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>

<span class="n">originImg</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="s">'origin.jpg'</span><span class="p">)</span>
<span class="n">newImg</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">originImg</span><span class="p">,</span> <span class="p">(</span><span class="mi">600</span><span class="p">,</span> <span class="mi">300</span><span class="p">))</span>

<span class="n">cv2</span><span class="p">.</span><span class="n">imwrite</span><span class="p">(</span><span class="s">'path/resize.jpg'</span><span class="p">,</span> <span class="n">newImg</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'IMG'</span><span class="p">,</span> <span class="n">newImg</span><span class="p">)</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">()</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">destroyAllWindows</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="이미지-특정-영역-크롭하기">이미지 특정 영역 크롭하기</h2>
<p><code class="language-plaintext highlighter-rouge">cv2.imread</code>의 반환값은 <code class="language-plaintext highlighter-rouge">&lt;class 'numpy.ndarray'&gt;</code>로 배열 자체를 슬라이싱하여 크롭을 구현할 수 있습니다.  <br />
OpenCV는 <code class="language-plaintext highlighter-rouge">RGB</code> 체계의 값을 사용하지 않고 <code class="language-plaintext highlighter-rouge">BGR</code> 값 체계를 사용하여, <code class="language-plaintext highlighter-rouge">RGB</code> 정상적인 사용을 위해서 변환을 처리해야 합니다.
<code class="language-plaintext highlighter-rouge">cv2.COLOR_BGR2RGB</code>를 통해서 변환을 진행 합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">cv2</span>

<span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="s">'sample.jpg'</span><span class="p">)</span>
<span class="n">im2</span> <span class="o">=</span> <span class="n">img</span><span class="p">[</span><span class="mi">100</span><span class="p">:</span><span class="mi">300</span><span class="p">,</span> <span class="mi">100</span><span class="p">:</span><span class="mi">500</span><span class="p">]</span>     <span class="c1">#이미지를 Crop영역을 선택합니다.
</span><span class="n">im2</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">im2</span><span class="p">,</span> <span class="p">(</span><span class="mi">400</span><span class="p">,</span> <span class="mi">400</span><span class="p">))</span>
<span class="n">cv2</span><span class="p">.</span><span class="n">imwrite</span><span class="p">(</span><span class="s">'resize.png'</span><span class="p">,</span> <span class="n">im2</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">cv2</span><span class="p">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">im2</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">COLOR_BGR2RGB</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><span class="nav__sub-title">관련된 글 (python &gt; lecture-opencv)</span></p>
<ul>

    
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-mouse-event/">[OpenCV] 마우스이벤트</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-window-event/">[OpenCV] 윈도우 처리, 키이벤트</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-video-rw/">[OpenCV] 비디오/캠 불러오기, 저장하기</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-image-rw/">[OpenCV] 이미지 불러오기, 저장하기, 사이즈 변경</a></li>
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
             
        
              
                <li><a href="/python/python-opencv-basic-draw/">[OpenCV] 기본 도형 그리기</a></li>
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
      

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
        
             
        
             
        
             
        
             
        
      

    
        
             
        
             
        
             
        
             
        
      

    

    

    

    

</ul>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="python" /><category term="opencv" /><category term="cv2.imread" /><category term="cv2.imwrite" /><category term="cv2.COLOR_BGR2RGB" /><category term="lecture-opencv" /><summary type="html"><![CDATA[OpenCV는 오픈소스컴퓨터 비전 라이브러리(Open Source Computer Vision Library)로 영상 처리와 관련된 대표적인 오픈소스라이프로리 입니다. 1999년 1월 IPL(Image Process Library)를 기반 C언어로 시작함 2000년 알파 버전 공개 2005년 베타 버전 공개 2006년 10월 v1.0 정식 버전 공개 2009년 9월 v2.0 공개 2010년 12월 v2.2 공개 2011년 7월 v2.3 공개(안드로이드 지원, cv-&gt; cv2변경) 2015년 6월 v3.0 공개 2019년 1월 v4.0 공개]]></summary></entry><entry><title type="html">[문제 유형 분석]문자열 구문 분석을 통한 반복 출력 문제</title><link href="https://kimjaehyun.co.kr/codingtest/Qtype-string-loop-cmd/" rel="alternate" type="text/html" title="[문제 유형 분석]문자열 구문 분석을 통한 반복 출력 문제" /><published>2022-06-16T00:00:00-05:00</published><updated>2022-06-16T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/codingtest/Qtype-string-loop-cmd</id><content type="html" xml:base="https://kimjaehyun.co.kr/codingtest/Qtype-string-loop-cmd/"><![CDATA[<h1 id="문제-유형">문제 유형</h1>

<ul>
  <li><code class="language-plaintext highlighter-rouge">()</code> 묶여진 구문에서 첫번째 숫자 (0~9)까지의 숫자 만큼 <code class="language-plaintext highlighter-rouge">()</code>로 묶여진 글자를 출력해라.</li>
  <li><code class="language-plaintext highlighter-rouge">()</code> 는 여러 단계로 묶일수 있다. <code class="language-plaintext highlighter-rouge">(()())</code></li>
  <li>가장 밖에는 하나의 <code class="language-plaintext highlighter-rouge">()</code>로 묶여있다.</li>
</ul>

<p>예)  <br />
<code class="language-plaintext highlighter-rouge">(4k)</code> -&gt; <code class="language-plaintext highlighter-rouge">kkkk</code>   <br />
<code class="language-plaintext highlighter-rouge">(3a(2b)c)</code> -&gt; <code class="language-plaintext highlighter-rouge">abbcabbcabbc</code></p>

<h1 id="접근-방법">접근 방법</h1>
<ol>
  <li>문제의 입력 조건 문자열을 char 로 분리함.</li>
  <li>위치 변수를 <code class="language-plaintext highlighter-rouge">_p</code> 초기화 하여, 문자열을 처음부터 순회함</li>
  <li>순회중 ‘(‘를 만나면 다시 시작의 의미 이므로 재귀호출을 진행</li>
</ol>

<p>위치값을 재귀 함수에 전달하여 유지하며 검색하는 것이 착안점</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kt">char</span><span class="o">[]</span> <span class="n">loop</span><span class="o">;</span>
<span class="n">loop</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">next</span><span class="o">().</span><span class="na">toCharArray</span><span class="o">();</span>	<span class="c1">// `(3a(2b)c)` </span>

<span class="n">solve</span><span class="o">(</span> <span class="n">loop</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>


<span class="kt">int</span> <span class="nf">solve</span><span class="o">(</span><span class="kt">char</span><span class="o">[]</span> <span class="n">loop</span><span class="o">,</span> <span class="kt">int</span> <span class="n">idx</span><span class="o">){</span>

	<span class="kt">int</span> <span class="n">_p</span> <span class="o">=</span> <span class="n">idx</span><span class="o">;</span> <span class="c1">//</span>

			<span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="n">loop</span><span class="o">[</span><span class="n">_p</span> <span class="o">+</span> <span class="mi">1</span><span class="o">]</span> <span class="o">-</span> <span class="sc">'0'</span><span class="o">;</span> <span class="c1">//반복 횟수 찾기</span>
			
			<span class="k">while</span><span class="o">(</span> <span class="n">cnt</span><span class="o">--</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">){</span> 	<span class="c1">// 반복 횟수를 줄여가며, 반복 조건을 찾음</span>
				<span class="n">_p</span> <span class="o">=</span> <span class="n">idx</span> <span class="o">+</span> <span class="mi">2</span><span class="o">;</span>		<span class="c1">// 검색 포인터를 +2 ( `(` + `숫자` 2자리 의미 ) 자리 만큼 이동</span>
				<span class="k">while</span><span class="o">(</span> <span class="n">loop</span><span class="o">[</span><span class="n">_p</span><span class="o">]</span> <span class="o">!=</span> <span class="sc">')'</span> <span class="o">){</span> <span class="c1">// 종료 전까지</span>
					<span class="k">if</span><span class="o">(</span> <span class="n">loop</span><span class="o">[</span><span class="n">_p</span><span class="o">]</span> <span class="o">==</span> <span class="err">'</span><span class="o">(&lt;)</span><span class="err">'</span> <span class="o">){</span>
						<span class="n">_p</span> <span class="o">=</span> <span class="n">solve</span><span class="o">(</span><span class="n">loop</span><span class="o">,</span><span class="n">_p</span><span class="o">);</span>	<span class="c1">//다시 `(` 시작 조건이 나온다면 재귀 호출</span>
					<span class="o">}</span><span class="k">else</span><span class="o">{</span>
						<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">loop</span><span class="o">[</span><span class="n">_p</span><span class="o">]);</span> <span class="c1">//출력</span>
					<span class="o">}</span>
					<span class="n">_p</span><span class="o">++;</span> <span class="c1">// 위치를 한칸씩 이동시키며 문자를 출력하는 일을 함</span>
				<span class="o">}</span>
				
			<span class="o">}</span><span class="c1">// while				</span>
	<span class="k">return</span> <span class="n">_p</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="codingtest" /><category term="문자열 구문 분석" /><category term="반복 출력" /><category term="재귀함수" /><summary type="html"><![CDATA[문제 유형]]></summary></entry><entry><title type="html">[문제 유형 분석]숫자 목록 중 특정 숫자 패턴 검색</title><link href="https://kimjaehyun.co.kr/codingtest/Qtype-numeric-pattern-search/" rel="alternate" type="text/html" title="[문제 유형 분석]숫자 목록 중 특정 숫자 패턴 검색" /><published>2022-06-16T00:00:00-05:00</published><updated>2022-06-16T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/codingtest/Qtype-numeric-pattern-search</id><content type="html" xml:base="https://kimjaehyun.co.kr/codingtest/Qtype-numeric-pattern-search/"><![CDATA[<h1 id="문제-유형">문제 유형</h1>

<p>아래와 같은 랜덤한 숫자 목록 중 특정 조건의 패턴 찾기.  <br />
<code class="language-plaintext highlighter-rouge">1 2 4 6 4 6 7 8 2 1 2 5 4 7 2 8 9 0 8 2 7 0 6 4 2 3</code></p>

<p>특정 제공된 숫자 <code class="language-plaintext highlighter-rouge">7 8 2</code> 의 변경된 조건을 찾을때</p>
<ul>
  <li>원본 <code class="language-plaintext highlighter-rouge">7 8 2</code> 를 찾을때</li>
  <li>원본의 순서가 변경된 조건을 찾을때 <code class="language-plaintext highlighter-rouge">8 7 2</code> 또는 <code class="language-plaintext highlighter-rouge">8 2 7</code>, <code class="language-plaintext highlighter-rouge">2 7 8</code> 등</li>
  <li>원본의 값의 위상이 동일한 수준으로 변경될때, 모두 +1한 경우 <code class="language-plaintext highlighter-rouge">8 9 3</code>, -2한 경우 <code class="language-plaintext highlighter-rouge">5 6 0</code>과 같은 경우</li>
  <li>순서와 위상이 동시에 적용된 경우</li>
</ul>

<p>위 조건의 패턴이 몇번 있는지를 찾을 때.</p>

<h1 id="접근-방법">접근 방법</h1>

<ol>
  <li>
    <p>제공된 값을 배열화 한다.  <br />
<code class="language-plaintext highlighter-rouge">arr = [1, 7, 4, 6, 4, 6, 7, 8, 2, 1, 2, 5, 4, 7, 2, 8, 9, 0, 8, 2, 7, 0, 6, 4, 2, 3]</code></p>
  </li>
  <li>찾을 <code class="language-plaintext highlighter-rouge">7 8 2</code>의 길이를 제외한 만큼 for문으로 순회한다.
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span> <span class="c1">// `7 8 2` 의 길이</span>
 <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="c1">// 패턴수</span>
 <span class="k">for</span> <span class="o">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">arr</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="n">len</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
     <span class="n">count</span> <span class="o">+=</span> <span class="nc">Search</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
 <span class="o">}</span>

 <span class="kt">int</span> <span class="nf">Search</span><span class="o">(</span><span class="kt">int</span> <span class="n">start</span><span class="o">){</span>
     <span class="c1">// arr의 i 위치에서 len 만큼을 복사</span>
      <span class="mi">1</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">4</span>
      	<span class="mi">7</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">6</span>
            <span class="mi">4</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">4</span>

     <span class="kt">int</span><span class="o">[]</span> <span class="n">asort</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">len</span><span class="o">];</span>
     <span class="nc">System</span><span class="o">.</span><span class="na">arraycopy</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span><span class="n">start</span><span class="o">,</span><span class="n">asort</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="n">len</span><span class="o">);</span>
     <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">asort</span><span class="o">);</span>
     <span class="c1">// arr 의 갯수를 복사하고, 오름차순 정렬 `1, 7, 4` -&gt; `1, 4, 7`</span>
     <span class="c1">// 비고 대상도 복사하여, 오름 차순 정렬  `7 8 2` -&gt; `2 7 8`</span>

     <span class="c1">// 위상을 조정함</span>
     <span class="c1">// `1, 7, 4` -&gt; `1, 4, 7` -&gt; `0, 3, 6` 최소값 1을 0기준의 위상으로 조정, 모두 -1을 진행</span>
     <span class="c1">// `7 8 2` -&gt; `2 7 8` -&gt; `0 5 6` 최소값 2를 기준으로 0으로 이동, 모두 -2를 진행</span>

     <span class="c1">// 위상 이동까지 완료하여 비교를 진행함.</span>
 <span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>비교할 값을 정렬하고, 비교할 범위의 최소값을 0 기준으로 위상을 조정한다.
<code class="language-plaintext highlighter-rouge">7 8 2</code> 에 순서는 오름차순 정렬에 의해서 비교 조건으로 변경가능하며, 
위상차이는 최소값 기준으로 이동시켜 각 값의 Gap을 비교하여 같은 조건의 값인지를 판단 가능함.</li>
</ol>]]></content><author><name>devjaedol</name></author><category term="codingtest" /><category term="숫자찾기" /><category term="배열정렬" /><category term="위상이동" /><summary type="html"><![CDATA[문제 유형]]></summary></entry><entry><title type="html">[Java] Union-Find, 두개의 노드 연결 여부 확인</title><link href="https://kimjaehyun.co.kr/algorithm/java/java-Union-Find/" rel="alternate" type="text/html" title="[Java] Union-Find, 두개의 노드 연결 여부 확인" /><published>2022-06-15T00:00:00-05:00</published><updated>2022-06-15T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/java/java-Union-Find</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/java/java-Union-Find/"><![CDATA[<p>여러개의 노드에서 임의의 두개의 노드가 연결되어 있는지를 판단할때 사용합니다.</p>

<ul>
  <li>서로 연결되어 있는지?</li>
</ul>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UnionFind</span> <span class="o">{</span>

	<span class="cm">/**
	 * 재귀 호출로 최종 부모 번호를 반환
	 */</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getParent</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">parent</span><span class="o">,</span> <span class="kt">int</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">parent</span><span class="o">[</span><span class="n">x</span><span class="o">]</span> <span class="o">==</span> <span class="n">x</span> <span class="o">)</span> <span class="k">return</span> <span class="n">x</span><span class="o">;</span>
		<span class="n">parent</span><span class="o">[</span><span class="n">x</span><span class="o">]</span> <span class="o">=</span> <span class="n">getParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="n">parent</span><span class="o">[</span><span class="n">x</span><span class="o">]);</span>		
		<span class="k">return</span> <span class="n">parent</span><span class="o">[</span><span class="n">x</span><span class="o">];</span>
	<span class="o">}</span>
	
	
	<span class="cm">/**
	 * 두 노드에서서 작은 부모의 값으로 병합함.
	 */</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">unionParent</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">parent</span><span class="o">,</span> <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">a</span> <span class="o">=</span> <span class="n">getParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="n">a</span><span class="o">);</span>
		<span class="n">b</span> <span class="o">=</span> <span class="n">getParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="n">b</span><span class="o">);</span>
		<span class="c1">//더 작은 값으로 부모를 통일함.</span>
		<span class="k">if</span><span class="o">(</span> <span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span><span class="o">)</span> <span class="n">parent</span><span class="o">[</span><span class="n">b</span><span class="o">]</span> <span class="o">=</span> <span class="n">a</span><span class="o">;</span>
		<span class="k">else</span> <span class="n">parent</span><span class="o">[</span><span class="n">a</span><span class="o">]</span> <span class="o">=</span> <span class="n">b</span><span class="o">;</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d-%d  : %s \n"</span><span class="o">,</span> <span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">,</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">parent</span><span class="o">));</span>
	<span class="o">}</span>
	
	
	<span class="cm">/**
	 * a, b가 같은 부모인지 확인
	 * 0 다른 부모, 1 같은 부모
	 */</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">findParent</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">parent</span><span class="o">,</span> <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">a</span> <span class="o">=</span> <span class="n">getParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="n">a</span><span class="o">);</span>
		<span class="n">b</span> <span class="o">=</span> <span class="n">getParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="n">b</span><span class="o">);</span>
		<span class="k">if</span><span class="o">(</span> <span class="n">a</span> <span class="o">==</span> <span class="n">b</span><span class="o">)</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
		<span class="k">else</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">parent</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">11</span><span class="o">];</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">parent</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">parent</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"Init : %s \n"</span><span class="o">,</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">parent</span><span class="o">));</span>
		
		<span class="n">unionParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span> <span class="c1">//1-2  연결 의미</span>
		<span class="n">unionParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
		<span class="n">unionParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">);</span>
		<span class="n">unionParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">);</span>
		<span class="n">unionParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">7</span><span class="o">);</span>
		<span class="n">unionParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">8</span><span class="o">);</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"1과 5는 연결 여부 확인? %d\n"</span><span class="o">,</span> <span class="n">findParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">));</span>
		<span class="n">unionParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"1과 5는 연결 여부 확인? %d\n"</span><span class="o">,</span> <span class="n">findParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">));</span>
		
	<span class="o">}</span>

<span class="o">}</span>
<span class="c1">//출력</span>
<span class="nc">Init</span> <span class="o">:</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">]</span> 
<span class="mi">1</span><span class="o">-</span><span class="mi">2</span>  <span class="o">:</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">]</span> 
<span class="mi">1</span><span class="o">-</span><span class="mi">3</span>  <span class="o">:</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">]</span> 
<span class="mi">1</span><span class="o">-</span><span class="mi">4</span>  <span class="o">:</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">]</span> 
<span class="mi">5</span><span class="o">-</span><span class="mi">6</span>  <span class="o">:</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">]</span> 
<span class="mi">5</span><span class="o">-</span><span class="mi">7</span>  <span class="o">:</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">]</span> 
<span class="mi">5</span><span class="o">-</span><span class="mi">8</span>  <span class="o">:</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">]</span> 

<span class="mi">1</span><span class="n">과</span> <span class="mi">5</span><span class="n">는</span> <span class="n">연결</span> <span class="n">여부</span> <span class="n">확인</span><span class="o">?</span> <span class="mi">0</span>
<span class="mi">1</span><span class="o">-</span><span class="mi">5</span>  <span class="o">:</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">]</span> 
<span class="mi">1</span><span class="n">과</span> <span class="mi">5</span><span class="n">는</span> <span class="n">연결</span> <span class="n">여부</span> <span class="n">확인</span><span class="o">?</span> <span class="mi">1</span>


</code></pre></div></div>

<p><a href="https://blog.naver.com/ndb796/221230967614" target="_blank">참고 문헌 : 안경잡개발자 블로그</a></p>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="java" /><category term="Union-Find" /><category term="합집합" /><category term="소로소" /><summary type="html"><![CDATA[여러개의 노드에서 임의의 두개의 노드가 연결되어 있는지를 판단할때 사용합니다.]]></summary></entry><entry><title type="html">[Java] Fibonacci, DP</title><link href="https://kimjaehyun.co.kr/algorithm/java/java-dp-fibonacci/" rel="alternate" type="text/html" title="[Java] Fibonacci, DP" /><published>2022-06-15T00:00:00-05:00</published><updated>2022-06-15T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/java/java-dp-fibonacci</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/java/java-dp-fibonacci/"><![CDATA[<p>피보나치 수열을 만드는 함수를 만들어보기. <br />
<code class="language-plaintext highlighter-rouge">1, 1, 2, 3, 5, 8, 13, 21, 34, 55 </code>  <br />
이전 2개의 값을 더해서 현재 값이 되는 패턴.  <br />
<code class="language-plaintext highlighter-rouge">점화식: D[i] = D[i - 1] + D[i - 2]</code></p>

<ul>
  <li>재귀 호출에서 성능을 개선 할수 있는지?</li>
</ul>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fibonacci</span><span class="o">{</span>
	<span class="kd">static</span> <span class="kt">double</span><span class="o">[]</span> <span class="n">storedValue</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">double</span><span class="o">[</span><span class="mi">100</span><span class="o">];</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">double</span> <span class="nf">dp</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">)</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>

		<span class="c1">//한번 구한 값을 저장하여 반환함</span>
		<span class="k">if</span><span class="o">(</span><span class="n">storedValue</span><span class="o">[</span><span class="n">x</span><span class="o">]</span> <span class="o">!=</span> <span class="mi">0</span> <span class="o">)</span> 
			<span class="k">return</span> <span class="n">storedValue</span><span class="o">[</span><span class="n">x</span><span class="o">];</span>
		
		<span class="c1">//새로 구하는 수는 계산 후 재 사용을 위해서 저장해놓음</span>
		<span class="n">storedValue</span><span class="o">[</span><span class="n">x</span><span class="o">]</span> <span class="o">=</span> <span class="n">dp</span><span class="o">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="n">dp</span><span class="o">(</span><span class="n">x</span><span class="o">-</span><span class="mi">2</span><span class="o">);</span>
		<span class="k">return</span> <span class="n">storedValue</span><span class="o">[</span><span class="n">x</span><span class="o">];</span>
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">dp</span><span class="o">(</span><span class="mi">50</span><span class="o">));</span> 
	<span class="o">}</span>	
<span class="o">}</span>
</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="java" /><category term="Fibonacci" /><category term="DP" /><category term="다이나믹 프로그래밍" /><category term="Dynamic Programming" /><summary type="html"><![CDATA[피보나치 수열을 만드는 함수를 만들어보기. 1, 1, 2, 3, 5, 8, 13, 21, 34, 55 이전 2개의 값을 더해서 현재 값이 되는 패턴. 점화식: D[i] = D[i - 1] + D[i - 2]]]></summary></entry><entry><title type="html">[Java] Kruskal, 최소 비용 신장 트리</title><link href="https://kimjaehyun.co.kr/algorithm/java/java-Kruskal/" rel="alternate" type="text/html" title="[Java] Kruskal, 최소 비용 신장 트리" /><published>2022-06-15T00:00:00-05:00</published><updated>2022-06-15T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/java/java-Kruskal</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/java/java-Kruskal/"><![CDATA[<p>최소 비용으로 모든 노드를 연결하기 위해서 사용함.(최소 비용 신장 트리) <br />
두 노드의 거리를 오름차순으로 정렬하여, 노드 리스트를 순회하며, 최소 거리 노드를 연결함.  <br />
연결시 사이틀이 발생되지 않는지를 점검함.</p>

<ul>
  <li>연결된 선의 합이 최소 비용인가?</li>
</ul>

<h2 id="mstminimum-spanning-tree">MST(Minimum Spanning Tree)</h2>
<p><code class="language-plaintext highlighter-rouge">MST</code>란 최소의 비용으로 모든 노드가 연결된 트리를 의미함. <br />
<code class="language-plaintext highlighter-rouge">Spanning Tree</code> 란 모든 노드가 연결된 트리를 의미함.</p>

<p>최소 비용 신장 트리 검색 알고리즘</p>
<ul>
  <li>크루스칼 알고리즘(Kruskal) : 전체 간선 중 작은것 부터 연결(Union-Find사용)</li>
  <li>프림 알고리즘 (Prim) : 현재 연결된 트리에 이어진 간선중 가장 작은것을 추가(Heap사용)  <br />
Prim 관련 문제 최소 스패닝 트리 <a href="https://www.acmicpc.net/problem/1197" target="_blank">백준 Q1197</a></li>
</ul>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>

<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Vector</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">KruskalAlgorithm</span> <span class="o">{</span>
	<span class="cm">/**
	 * 재귀 호출로 최종 부모 번호를 반환
	 */</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getParent</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">parent</span><span class="o">,</span> <span class="kt">int</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">parent</span><span class="o">[</span><span class="n">x</span><span class="o">]</span> <span class="o">==</span> <span class="n">x</span> <span class="o">)</span> <span class="k">return</span> <span class="n">x</span><span class="o">;</span>
		<span class="n">parent</span><span class="o">[</span><span class="n">x</span><span class="o">]</span> <span class="o">=</span> <span class="n">getParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="n">parent</span><span class="o">[</span><span class="n">x</span><span class="o">]);</span>		
		<span class="k">return</span> <span class="n">parent</span><span class="o">[</span><span class="n">x</span><span class="o">];</span>
	<span class="o">}</span>

	<span class="cm">/**
	 * 두 노드에서서 작은 부모의 값으로 병합함.
	 */</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">unionParent</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">parent</span><span class="o">,</span> <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">a</span> <span class="o">=</span> <span class="n">getParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="n">a</span><span class="o">);</span>
		<span class="n">b</span> <span class="o">=</span> <span class="n">getParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="n">b</span><span class="o">);</span>
		<span class="k">if</span><span class="o">(</span> <span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span><span class="o">)</span> <span class="n">parent</span><span class="o">[</span><span class="n">b</span><span class="o">]</span> <span class="o">=</span> <span class="n">a</span><span class="o">;</span>
		<span class="k">else</span> <span class="n">parent</span><span class="o">[</span><span class="n">a</span><span class="o">]</span> <span class="o">=</span> <span class="n">b</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="cm">/**
	 * a, b가 같은 부모인지 확인
	 * 0 다른 부모, 1 같은 부모
	 */</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">findParent</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">parent</span><span class="o">,</span> <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">a</span> <span class="o">=</span> <span class="n">getParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="n">a</span><span class="o">);</span>
		<span class="n">b</span> <span class="o">=</span> <span class="n">getParent</span><span class="o">(</span><span class="n">parent</span><span class="o">,</span> <span class="n">b</span><span class="o">);</span>
		<span class="k">if</span><span class="o">(</span> <span class="n">a</span> <span class="o">==</span> <span class="n">b</span><span class="o">)</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
		<span class="k">else</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="c1">//	간선을 거리가 짧은 순서대로 그래프에 포함</span>
		<span class="c1">//	사이클발생시 포함 시키지 않음</span>
		<span class="c1">// 	최소 비용 신장 트리</span>
		<span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">7</span><span class="o">;</span> <span class="c1">// node수</span>
		<span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="mi">11</span><span class="o">;</span> <span class="c1">// 간선 수</span>
		
		<span class="nc">Vector</span><span class="o">&lt;</span><span class="nc">Edge</span><span class="o">&gt;</span> <span class="n">v</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Vector</span><span class="o">&lt;</span><span class="nc">Edge</span><span class="o">&gt;();</span>
		<span class="n">v</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Edge</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">12</span><span class="o">));</span>
		<span class="n">v</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Edge</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">28</span><span class="o">));</span>
		<span class="n">v</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Edge</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">67</span><span class="o">));</span>
		<span class="n">v</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Edge</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">17</span><span class="o">));</span>
		<span class="n">v</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Edge</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">24</span><span class="o">));</span>
		<span class="n">v</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Edge</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">62</span><span class="o">));</span>
		<span class="n">v</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Edge</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">20</span><span class="o">));</span>
		<span class="n">v</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Edge</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">37</span><span class="o">));</span>
		<span class="n">v</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Edge</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">13</span><span class="o">));</span>
		<span class="n">v</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Edge</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">45</span><span class="o">));</span>
		<span class="n">v</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Edge</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="mi">7</span><span class="o">,</span> <span class="mi">73</span><span class="o">));</span>
		
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"==[정렬전]============"</span><span class="o">);</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">v</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="nc">Edge</span> <span class="n">e</span> <span class="o">=</span> <span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">distance</span><span class="o">);</span>
		<span class="o">}</span>
		
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"==[정렬후]============"</span><span class="o">);</span>
		<span class="c1">// 간선의 비용으로 오름차순 정렬 </span>
		<span class="nc">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">v</span><span class="o">,</span> <span class="k">new</span> <span class="nc">Comparator</span><span class="o">&lt;</span><span class="nc">Edge</span><span class="o">&gt;()</span> <span class="o">{</span>
			<span class="nd">@Override</span>
			<span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="nc">Edge</span> <span class="n">o1</span><span class="o">,</span> <span class="nc">Edge</span> <span class="n">o2</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">return</span> <span class="o">(</span><span class="n">o1</span><span class="o">.</span><span class="na">distance</span> <span class="o">-</span> <span class="n">o2</span><span class="o">.</span><span class="na">distance</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">});</span>		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">v</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="nc">Edge</span> <span class="n">e</span> <span class="o">=</span> <span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">distance</span><span class="o">);</span>
		<span class="o">}</span>
		
		
		<span class="c1">// 각 정점이 포함된 그래프가 어디인지 저장 (부모 초기화, 자기가 자신이 부모로 설정함)</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">set</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">v</span><span class="o">.</span><span class="na">size</span><span class="o">()+</span><span class="mi">1</span><span class="o">];</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">v</span><span class="o">.</span><span class="na">size</span><span class="o">()+</span><span class="mi">1</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">set</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
		<span class="o">}</span>
		
		
		<span class="c1">// 거리의 합을 0으로 초기화</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"==[로직]============"</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">v</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++</span> <span class="o">)</span> <span class="o">{</span>
			<span class="c1">// 동일한 부모를 가르키지 않는 경우(이미 연결됨)</span>
			<span class="c1">// 즉, 사이클이 발생하지 않을 때만 선택 </span>
			
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%5d %5d (%5d)"</span><span class="o">,</span><span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">node</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">node</span><span class="o">[</span><span class="mi">1</span><span class="o">],</span>  <span class="n">findParent</span><span class="o">(</span><span class="n">set</span><span class="o">,</span> <span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">node</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">node</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">);</span>
			
			<span class="k">if</span><span class="o">(</span> <span class="n">findParent</span><span class="o">(</span><span class="n">set</span><span class="o">,</span> <span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">node</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">node</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">)</span> <span class="o">{</span> <span class="c1">//다른 부모일 경우</span>
				<span class="n">sum</span> <span class="o">+=</span> <span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">distance</span><span class="o">;</span> 
				<span class="n">unionParent</span><span class="o">(</span><span class="n">set</span><span class="o">,</span> <span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">node</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">node</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
				
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">" uinion %d-%d %s"</span><span class="o">,</span><span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">node</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">node</span><span class="o">[</span><span class="mi">1</span><span class="o">],</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">set</span><span class="o">));</span>
			<span class="o">}</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
			
<span class="c1">//			if( findParent(set, v.get(i).node[0], v.get(i).node[1]) == 0 ) {</span>
<span class="c1">//				sum += v.get(i).distance; </span>
<span class="c1">//				unionParent(set, v.get(i).node[0], v.get(i).node[1]);</span>
<span class="c1">//			}</span>
		<span class="o">}</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"==[결과]============"</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%s \n"</span><span class="o">,</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">set</span><span class="o">));</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"최소 비용 : %d \n"</span><span class="o">,</span> <span class="n">sum</span><span class="o">);</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">v</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"[%2d] Node : %d , Parent : %d \n"</span><span class="o">,</span><span class="n">i</span> <span class="o">,</span> <span class="n">v</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">node</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">set</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
		<span class="o">}</span>
		
		
	<span class="o">}</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">Edge</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">node</span><span class="o">;</span>
	<span class="kd">public</span> <span class="kt">int</span> <span class="n">distance</span><span class="o">;</span>
	<span class="kd">public</span> <span class="nf">Edge</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">,</span> <span class="kt">int</span> <span class="n">distance</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">this</span><span class="o">.</span><span class="na">node</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>
		<span class="k">this</span><span class="o">.</span><span class="na">node</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">a</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">node</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">b</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">distance</span> <span class="o">=</span> <span class="n">distance</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getDistance</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">distance</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>

<span class="c1">//출력</span>
<span class="o">==[</span><span class="n">정렬전</span><span class="o">]============</span>
<span class="mi">12</span>
<span class="mi">28</span>
<span class="mi">67</span>
<span class="mi">17</span>
<span class="mi">24</span>
<span class="mi">62</span>
<span class="mi">20</span>
<span class="mi">37</span>
<span class="mi">13</span>
<span class="mi">45</span>
<span class="mi">73</span>
<span class="o">==[</span><span class="n">정렬후</span><span class="o">]============</span>
<span class="mi">12</span>
<span class="mi">13</span>
<span class="mi">17</span>
<span class="mi">20</span>
<span class="mi">24</span>
<span class="mi">28</span>
<span class="mi">37</span>
<span class="mi">45</span>
<span class="mi">62</span>
<span class="mi">67</span>
<span class="mi">73</span>
<span class="o">==[</span><span class="n">로직</span><span class="o">]============</span>
    <span class="mi">1</span>     <span class="mi">7</span> <span class="o">(</span>    <span class="mi">0</span><span class="o">)</span> <span class="n">uinion</span> <span class="mi">1</span><span class="o">-</span><span class="mi">7</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">11</span><span class="o">]</span>
    <span class="mi">4</span>     <span class="mi">7</span> <span class="o">(</span>    <span class="mi">0</span><span class="o">)</span> <span class="n">uinion</span> <span class="mi">4</span><span class="o">-</span><span class="mi">7</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">11</span><span class="o">]</span>
    <span class="mi">1</span>     <span class="mi">5</span> <span class="o">(</span>    <span class="mi">0</span><span class="o">)</span> <span class="n">uinion</span> <span class="mi">1</span><span class="o">-</span><span class="mi">5</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">11</span><span class="o">]</span>
    <span class="mi">3</span>     <span class="mi">5</span> <span class="o">(</span>    <span class="mi">0</span><span class="o">)</span> <span class="n">uinion</span> <span class="mi">3</span><span class="o">-</span><span class="mi">5</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">11</span><span class="o">]</span>
    <span class="mi">2</span>     <span class="mi">4</span> <span class="o">(</span>    <span class="mi">0</span><span class="o">)</span> <span class="n">uinion</span> <span class="mi">2</span><span class="o">-</span><span class="mi">4</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">11</span><span class="o">]</span>
    <span class="mi">1</span>     <span class="mi">4</span> <span class="o">(</span>    <span class="mi">1</span><span class="o">)</span>
    <span class="mi">3</span>     <span class="mi">6</span> <span class="o">(</span>    <span class="mi">0</span><span class="o">)</span> <span class="n">uinion</span> <span class="mi">3</span><span class="o">-</span><span class="mi">6</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">11</span><span class="o">]</span>
    <span class="mi">5</span>     <span class="mi">6</span> <span class="o">(</span>    <span class="mi">1</span><span class="o">)</span>
    <span class="mi">2</span>     <span class="mi">5</span> <span class="o">(</span>    <span class="mi">1</span><span class="o">)</span>
    <span class="mi">1</span>     <span class="mi">2</span> <span class="o">(</span>    <span class="mi">1</span><span class="o">)</span>
    <span class="mi">5</span>     <span class="mi">7</span> <span class="o">(</span>    <span class="mi">1</span><span class="o">)</span>
<span class="o">==[</span><span class="n">결과</span><span class="o">]============</span>
<span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">11</span><span class="o">]</span> 
<span class="n">최소</span> <span class="n">비용</span> <span class="o">:</span> <span class="mi">123</span> 
<span class="o">[</span> <span class="mi">0</span><span class="o">]</span> <span class="nc">Node</span> <span class="o">:</span> <span class="mi">1</span> <span class="o">,</span> <span class="nc">Parent</span> <span class="o">:</span> <span class="mi">0</span> 
<span class="o">[</span> <span class="mi">1</span><span class="o">]</span> <span class="nc">Node</span> <span class="o">:</span> <span class="mi">4</span> <span class="o">,</span> <span class="nc">Parent</span> <span class="o">:</span> <span class="mi">1</span> 
<span class="o">[</span> <span class="mi">2</span><span class="o">]</span> <span class="nc">Node</span> <span class="o">:</span> <span class="mi">1</span> <span class="o">,</span> <span class="nc">Parent</span> <span class="o">:</span> <span class="mi">1</span> 
<span class="o">[</span> <span class="mi">3</span><span class="o">]</span> <span class="nc">Node</span> <span class="o">:</span> <span class="mi">3</span> <span class="o">,</span> <span class="nc">Parent</span> <span class="o">:</span> <span class="mi">1</span> 
<span class="o">[</span> <span class="mi">4</span><span class="o">]</span> <span class="nc">Node</span> <span class="o">:</span> <span class="mi">2</span> <span class="o">,</span> <span class="nc">Parent</span> <span class="o">:</span> <span class="mi">1</span> 
<span class="o">[</span> <span class="mi">5</span><span class="o">]</span> <span class="nc">Node</span> <span class="o">:</span> <span class="mi">1</span> <span class="o">,</span> <span class="nc">Parent</span> <span class="o">:</span> <span class="mi">1</span> 
<span class="o">[</span> <span class="mi">6</span><span class="o">]</span> <span class="nc">Node</span> <span class="o">:</span> <span class="mi">3</span> <span class="o">,</span> <span class="nc">Parent</span> <span class="o">:</span> <span class="mi">1</span> 
<span class="o">[</span> <span class="mi">7</span><span class="o">]</span> <span class="nc">Node</span> <span class="o">:</span> <span class="mi">5</span> <span class="o">,</span> <span class="nc">Parent</span> <span class="o">:</span> <span class="mi">1</span> 
<span class="o">[</span> <span class="mi">8</span><span class="o">]</span> <span class="nc">Node</span> <span class="o">:</span> <span class="mi">2</span> <span class="o">,</span> <span class="nc">Parent</span> <span class="o">:</span> <span class="mi">8</span> 
<span class="o">[</span> <span class="mi">9</span><span class="o">]</span> <span class="nc">Node</span> <span class="o">:</span> <span class="mi">1</span> <span class="o">,</span> <span class="nc">Parent</span> <span class="o">:</span> <span class="mi">9</span> 
<span class="o">[</span><span class="mi">10</span><span class="o">]</span> <span class="nc">Node</span> <span class="o">:</span> <span class="mi">5</span> <span class="o">,</span> <span class="nc">Parent</span> <span class="o">:</span> <span class="mi">10</span> 


</code></pre></div></div>
<p><a href="https://blog.naver.com/ndb796/221230994142" target="_blank">참고 문헌 : 안경잡개발자 블로그</a></p>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="java" /><category term="Kruskal Algorithm" /><category term="Union-Find" /><category term="MST" /><category term="Spannig Tree" /><summary type="html"><![CDATA[최소 비용으로 모든 노드를 연결하기 위해서 사용함.(최소 비용 신장 트리) 두 노드의 거리를 오름차순으로 정렬하여, 노드 리스트를 순회하며, 최소 거리 노드를 연결함. 연결시 사이틀이 발생되지 않는지를 점검함.]]></summary></entry></feed>