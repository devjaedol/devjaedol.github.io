<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://kimjaehyun.co.kr/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kimjaehyun.co.kr/" rel="alternate" type="text/html" /><updated>2022-06-04T02:36:02-05:00</updated><id>https://kimjaehyun.co.kr/feed.xml</id><title type="html">꿰보노트</title><subtitle>프로그래밍과 소프트웨어 정보 및 클라우드 개발에 대한 정보를 공유하는 블로그 입니다. 꿰보노트 / 꿰보Note / 꿰어야 보배</subtitle><author><name>devjaedol</name></author><entry><title type="html">[백준 1948]임계경로, Topology Sort</title><link href="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1948-topology/" rel="alternate" type="text/html" title="[백준 1948]임계경로, Topology Sort" /><published>2022-06-04T00:00:00-05:00</published><updated>2022-06-04T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1948-topology</id><content type="html" xml:base="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1948-topology/"><![CDATA[<p>토플로지 관련 줄세우기 문제.   <br />
원리 알고리즘은 알고리즘 내용 참조.</p>

<p>임계경로를 구하는 문제로, 임계 경로란 A에서 B지점 까지 가는 최대 소요 시간이 걸리는 경로를 임계경로라고 한다.(최대값이 소모되는 길)</p>

<p><a href="https://www.acmicpc.net/problem/1948" target="_blank">백준 Q1948</a></p>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Queue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">try</span> <span class="o">{</span>
			<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
			<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
			
			<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			<span class="kt">int</span> <span class="no">M</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			
			<span class="kt">int</span><span class="o">[]</span> <span class="n">line</span> 		<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			<span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">q</span><span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">();</span>
			<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;[]</span> <span class="n">al</span>	<span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span>
				<span class="n">al</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">();</span>
			
			<span class="c1">//System.out.format("N: %d M: %d \n",N,M);</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="no">M</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">st</span> 	<span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
				<span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="c1">//System.out.format("%d %d \n",s,e);</span>
				<span class="n">al</span><span class="o">[</span><span class="n">s</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
				<span class="n">line</span><span class="o">[</span><span class="n">e</span><span class="o">]++;</span> 
			<span class="o">}</span>
			
			<span class="c1">//line 이 0인 item을 q에 넣는다.</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">line</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
					<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			
			<span class="k">while</span><span class="o">(!</span><span class="n">q</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
				<span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>
				
				<span class="c1">//연결 선을 빼면서 line을 제거, 제거후에 0인경우 q에 입력</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">al</span><span class="o">[</span><span class="n">t</span><span class="o">].</span><span class="na">size</span><span class="o">()</span> <span class="o">;</span> <span class="n">i</span><span class="o">++</span> <span class="o">)</span> <span class="o">{</span>
					<span class="kt">int</span> <span class="n">sub</span> <span class="o">=</span> <span class="n">al</span><span class="o">[</span><span class="n">t</span><span class="o">].</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">intValue</span><span class="o">();</span>
					<span class="k">if</span><span class="o">(--</span><span class="n">line</span><span class="o">[</span><span class="n">sub</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">){</span>
						<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">sub</span><span class="o">);</span>
					<span class="o">}</span>
				<span class="o">}</span>				
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d "</span><span class="o">,</span> <span class="n">t</span><span class="o">);</span>
			<span class="o">}</span>
			
			<span class="c1">//System.out.println(Arrays.toString(line));</span>
			<span class="c1">//System.out.println("End");</span>
			
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>	
	
	
	<span class="o">}</span>
<span class="o">}</span>

<span class="cm">/*
입력
4 2
4 2
3 1

출력
3 4 1 2 

*/</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="baekjoon" /><category term="java" /><category term="Topology" /><category term="위상정렬" /><category term="줄세우기" /><category term="임계 경로" /><category term="Q1948" /><category term="백준2252" /><category term="백준1516" /><category term="백준1948" /><summary type="html"><![CDATA[토플로지 관련 줄세우기 문제. 원리 알고리즘은 알고리즘 내용 참조.]]></summary></entry><entry><title type="html">[백준 1926]그림, BFS</title><link href="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1926-bfs/" rel="alternate" type="text/html" title="[백준 1926]그림, BFS" /><published>2022-06-04T00:00:00-05:00</published><updated>2022-06-04T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1926-bfs</id><content type="html" xml:base="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1926-bfs/"><![CDATA[<p>Map이 주어지고, 탐색을 통해서 넓이나 길을 찾는 문제 유형.</p>

<p><a href="https://www.acmicpc.net/problem/1926" target="_blank">백준 Q1926</a></p>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Queue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="k">try</span> <span class="o">{</span>
			<span class="c1">// 입력 처리</span>
			<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
			<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
			
			<span class="kt">int</span> <span class="no">R</span> 	<span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			<span class="kt">int</span> <span class="no">C</span> 	<span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			
			<span class="kt">int</span><span class="o">[][]</span> <span class="n">map</span>	<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">R</span><span class="o">+</span><span class="mi">1</span><span class="o">][</span><span class="no">C</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			<span class="kt">int</span><span class="o">[][]</span> <span class="n">ck</span>	<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">R</span><span class="o">+</span><span class="mi">1</span><span class="o">][</span><span class="no">C</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">R</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="no">C</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
					<span class="n">map</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="o">}</span>
			<span class="o">}</span>
			
			<span class="kt">int</span><span class="o">[]</span> <span class="n">dx</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">0</span><span class="o">,-</span><span class="mi">1</span><span class="o">,</span><span class="mi">0</span><span class="o">};</span>
			<span class="kt">int</span><span class="o">[]</span> <span class="n">dy</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">0</span><span class="o">,-</span><span class="mi">1</span><span class="o">};</span>
			
			
			<span class="kt">int</span> <span class="n">max_zone</span> 	<span class="o">=</span> <span class="mi">0</span><span class="o">;</span><span class="c1">//영역의 갯수</span>
			<span class="kt">int</span> <span class="n">max_count</span>	<span class="o">=</span> <span class="mi">0</span><span class="o">;</span><span class="c1">//최대 영역의 수</span>
			
			<span class="nc">Queue</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">[]&gt;</span> <span class="n">q</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">();</span>
			
			
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">R</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="no">C</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
					
					<span class="kt">int</span> <span class="n">temp_count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
					
					<span class="k">if</span><span class="o">(</span> <span class="n">map</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">ck</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="mi">0</span><span class="o">){</span>
						<span class="n">ck</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
						<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span><span class="n">i</span><span class="o">,</span><span class="n">j</span><span class="o">});</span> <span class="c1">// 행, 열</span>
						<span class="n">max_zone</span><span class="o">++;</span>
						<span class="n">temp_count</span><span class="o">++;</span>
					<span class="o">}</span><span class="c1">//end if</span>
					
					<span class="k">while</span><span class="o">(!</span> <span class="n">q</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">)</span> <span class="o">{</span>
						<span class="kt">int</span><span class="o">[]</span> <span class="n">cur</span>  	<span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
						<span class="kt">int</span> <span class="n">r</span> 		<span class="o">=</span> <span class="n">cur</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
						<span class="kt">int</span> <span class="n">c</span> 		<span class="o">=</span> <span class="n">cur</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
						
						<span class="c1">//현재 방문 처리</span>
						<span class="c1">//ck[r][c] 	= 1;</span>
						
						<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="o">;</span><span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
							<span class="kt">int</span> <span class="n">new_r</span> <span class="o">=</span> <span class="n">r</span> <span class="o">+</span> <span class="n">dy</span><span class="o">[</span><span class="n">k</span><span class="o">];</span>
							<span class="kt">int</span> <span class="n">new_c</span> <span class="o">=</span> <span class="n">c</span> <span class="o">+</span> <span class="n">dx</span><span class="o">[</span><span class="n">k</span><span class="o">];</span>
							
							<span class="k">if</span><span class="o">(</span> <span class="n">new_c</span> <span class="o">&gt;</span> <span class="no">C</span> <span class="o">||</span> <span class="n">new_c</span> <span class="o">&lt;</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">new_r</span> <span class="o">&gt;</span> <span class="no">R</span> <span class="o">||</span> <span class="n">new_r</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
							
							<span class="c1">//System.out.format("%d, %d\n",new_c,new_r);</span>
							
							<span class="k">if</span><span class="o">(</span> <span class="n">map</span><span class="o">[</span><span class="n">new_r</span><span class="o">][</span><span class="n">new_c</span><span class="o">]</span> <span class="o">==</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">ck</span><span class="o">[</span><span class="n">new_r</span><span class="o">][</span><span class="n">new_c</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">){</span> <span class="c1">//ck[행][열]</span>
								<span class="n">ck</span><span class="o">[</span><span class="n">new_r</span><span class="o">][</span><span class="n">new_c</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
								<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span><span class="n">new_r</span><span class="o">,</span><span class="n">new_c</span><span class="o">});</span>
								<span class="n">temp_count</span><span class="o">++;</span>
							<span class="o">}</span>
						<span class="o">}</span>
						
						<span class="n">max_count</span>	<span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">max_count</span><span class="o">,</span> <span class="n">temp_count</span><span class="o">);</span>
					<span class="o">}</span><span class="c1">//while</span>
					
					
				<span class="o">}</span><span class="c1">//end for</span>
			<span class="o">}</span><span class="c1">//end for</span>
			
			
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">max_zone</span><span class="o">);</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">max_count</span><span class="o">);</span>
			
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>
	
	
	<span class="o">}</span>
<span class="o">}</span>
<span class="cm">/*
입력
6 5
1 1 0 1 1
0 1 1 0 0
0 0 0 0 0
1 0 1 1 1
0 0 1 1 1
0 0 1 1 1

출력
4
9

*/</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="baekjoon" /><category term="java" /><category term="BFS" /><category term="넓이탐색" /><category term="Q1926" /><category term="백준1926" /><summary type="html"><![CDATA[Map이 주어지고, 탐색을 통해서 넓이나 길을 찾는 문제 유형.]]></summary></entry><entry><title type="html">[백준 2252]줄세우기, Topology Sort</title><link href="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q2252-topology/" rel="alternate" type="text/html" title="[백준 2252]줄세우기, Topology Sort" /><published>2022-06-02T00:00:00-05:00</published><updated>2022-06-02T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q2252-topology</id><content type="html" xml:base="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q2252-topology/"><![CDATA[<p>토플로지 관련 줄세우기 문제.   <br />
원리 알고리즘은 알고리즘 내용 참조.</p>

<p><a href="https://www.acmicpc.net/problem/2252" target="_blank">백준 Q2252</a></p>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Queue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">try</span> <span class="o">{</span>
			<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
			<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
			
			<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			<span class="kt">int</span> <span class="no">M</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			
			<span class="kt">int</span><span class="o">[]</span> <span class="n">line</span> 		<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			<span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">q</span><span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">();</span>
			<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;[]</span> <span class="n">al</span>	<span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span>
				<span class="n">al</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">();</span>
			
			<span class="c1">//System.out.format("N: %d M: %d \n",N,M);</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="no">M</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">st</span> 	<span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
				<span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="c1">//System.out.format("%d %d \n",s,e);</span>
				<span class="n">al</span><span class="o">[</span><span class="n">s</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
				<span class="n">line</span><span class="o">[</span><span class="n">e</span><span class="o">]++;</span> 
			<span class="o">}</span>
			
			<span class="c1">//line 이 0인 item을 q에 넣는다.</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">line</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
					<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			
			<span class="k">while</span><span class="o">(!</span><span class="n">q</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
				<span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>
				
				<span class="c1">//연결 선을 빼면서 line을 제거, 제거후에 0인경우 q에 입력</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">al</span><span class="o">[</span><span class="n">t</span><span class="o">].</span><span class="na">size</span><span class="o">()</span> <span class="o">;</span> <span class="n">i</span><span class="o">++</span> <span class="o">)</span> <span class="o">{</span>
					<span class="kt">int</span> <span class="n">sub</span> <span class="o">=</span> <span class="n">al</span><span class="o">[</span><span class="n">t</span><span class="o">].</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">intValue</span><span class="o">();</span>
					<span class="k">if</span><span class="o">(--</span><span class="n">line</span><span class="o">[</span><span class="n">sub</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">){</span>
						<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">sub</span><span class="o">);</span>
					<span class="o">}</span>
				<span class="o">}</span>				
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d "</span><span class="o">,</span> <span class="n">t</span><span class="o">);</span>
			<span class="o">}</span>
			
			<span class="c1">//System.out.println(Arrays.toString(line));</span>
			<span class="c1">//System.out.println("End");</span>
			
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>	
	
	
	<span class="o">}</span>
<span class="o">}</span>

<span class="cm">/*
입력
4 2
4 2
3 1

출력
3 4 1 2 

*/</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="baekjoon" /><category term="java" /><category term="Topology" /><category term="위상정렬" /><category term="줄세우기" /><category term="Q2252" /><category term="백준2252" /><category term="백준1516" /><category term="백준1948" /><summary type="html"><![CDATA[토플로지 관련 줄세우기 문제. 원리 알고리즘은 알고리즘 내용 참조.]]></summary></entry><entry><title type="html">[백준 1516]게임 개발, Topology Sort</title><link href="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1516-topology/" rel="alternate" type="text/html" title="[백준 1516]게임 개발, Topology Sort" /><published>2022-06-02T00:00:00-05:00</published><updated>2022-06-02T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1516-topology</id><content type="html" xml:base="https://kimjaehyun.co.kr/baekjoon/java/baekjoon-Q1516-topology/"><![CDATA[<p>토플로지 관련 누적 비용 최대값 계산.       <br />
원리 알고리즘은 알고리즘 내용 참조.</p>

<p><a href="https://www.acmicpc.net/problem/1516" target="_blank">백준 Q1516</a></p>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Queue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="k">try</span> <span class="o">{</span>
			<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
			<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
			
			<span class="c1">// N(1 ≤ N ≤ 500)</span>
			<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>	<span class="c1">//line수 </span>
			
			
			
			<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;[]</span> <span class="n">al</span>	<span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span> <span class="c1">//(연결 건물) </span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">al</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">();</span>
			<span class="o">}</span>
			
			<span class="kt">int</span><span class="o">[]</span> <span class="n">result</span>	<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>	<span class="c1">// 위상순서를 저장하기</span>
			
			<span class="kt">int</span><span class="o">[]</span> <span class="n">time</span>		<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span> <span class="c1">//누적 해당 건물을 짓는 시간</span>
			<span class="kt">int</span><span class="o">[]</span> <span class="n">time_sum</span>	<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span> <span class="c1">//누적 해당 건물을 짓는 시간</span>
			<span class="kt">int</span><span class="o">[]</span> <span class="n">line</span>		<span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span> <span class="c1">//나를 의존하는 line</span>
			<span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">q</span><span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">();</span>
		
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">st</span> 			<span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
				
				<span class="kt">int</span> <span class="n">t</span> 		<span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>	
				<span class="n">time</span><span class="o">[</span><span class="n">i</span><span class="o">]</span>		<span class="o">=</span> <span class="n">t</span><span class="o">;</span>
				
				<span class="c1">//필요 건물이 여러개 나올수 있음.				</span>
				<span class="k">for</span><span class="o">(;;)</span> <span class="o">{</span>
					<span class="kt">int</span> <span class="n">s</span> 		<span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
					<span class="k">if</span><span class="o">(</span><span class="n">s</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
						<span class="k">break</span><span class="o">;</span>
					<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
						<span class="n">al</span><span class="o">[</span><span class="n">s</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
						<span class="n">line</span><span class="o">[</span><span class="n">i</span><span class="o">]++;</span>
					<span class="o">}</span>					
				<span class="o">}</span>				
				<span class="c1">//System.out.format("%d %d \n",s,e);</span>
			<span class="o">}</span>
			
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">line</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
					<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>	
					<span class="n">time_sum</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">time</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
				<span class="o">}</span>
			<span class="o">}</span>
			
			
			
			<span class="c1">//System.out.println("L : "+Arrays.toString(line));</span>
			
			<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
			<span class="k">while</span><span class="o">(!</span> <span class="n">q</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">){</span>
				<span class="kt">int</span> <span class="n">parent</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>
				<span class="n">result</span><span class="o">[</span><span class="n">x</span><span class="o">++]</span> <span class="o">=</span> <span class="n">parent</span><span class="o">;</span>
				
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">al</span><span class="o">[</span><span class="n">parent</span><span class="o">].</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
					<span class="kt">int</span> <span class="n">child</span> <span class="o">=</span> <span class="n">al</span><span class="o">[</span><span class="n">parent</span><span class="o">].</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">intValue</span><span class="o">();</span>

					<span class="n">time_sum</span><span class="o">[</span><span class="n">child</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">time_sum</span><span class="o">[</span><span class="n">child</span><span class="o">],</span> <span class="n">time_sum</span><span class="o">[</span><span class="n">parent</span><span class="o">]</span> <span class="o">+</span> <span class="n">time</span><span class="o">[</span><span class="n">child</span><span class="o">]);</span>
					
					<span class="k">if</span><span class="o">(--</span><span class="n">line</span><span class="o">[</span><span class="n">child</span><span class="o">]==</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
						<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">child</span><span class="o">);</span>
					<span class="o">}</span>
				<span class="o">}</span>
				<span class="c1">//total을 Sum처리함.</span>
				<span class="c1">//System.out.format("%d -&gt;", parent);</span>
			<span class="o">}</span>

			<span class="c1">//순서</span>
<span class="c1">//			for(int i=0;i&lt;result.length-1;i++) {</span>
<span class="c1">//				System.out.format("%d -&gt;", result[i]);				</span>
<span class="c1">//			}</span>
<span class="c1">//			System.out.println("");</span>
<span class="c1">//			</span>
<span class="c1">//			System.out.println("Line : "+Arrays.toString(line));</span>
<span class="c1">//			System.out.println("Time : "+Arrays.toString(time));</span>
<span class="c1">//			System.out.println("TimeS : "+Arrays.toString(time_sum));</span>

			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">time_sum</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d\n"</span><span class="o">,</span> <span class="n">time_sum</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>				
			<span class="o">}</span>
			<span class="c1">//System.out.println("End");</span>
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>
	
	
	<span class="o">}</span>
<span class="o">}</span>

<span class="cm">/*
입력
5
10 -1
10 1 -1
4 1 -1
4 3 1 -1
3 3 -1

출력
10
20
14
18
17

*/</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="baekjoon" /><category term="java" /><category term="Topology" /><category term="위상정렬" /><category term="줄세우기" /><category term="Q1516" /><category term="백준1516" /><category term="백준1516" /><category term="백준1948" /><summary type="html"><![CDATA[토플로지 관련 누적 비용 최대값 계산. 원리 알고리즘은 알고리즘 내용 참조.]]></summary></entry><entry><title type="html">[Java] 위상정렬, 줄세우기, Topology Sort</title><link href="https://kimjaehyun.co.kr/algorithm/java/java-topology-sort/" rel="alternate" type="text/html" title="[Java] 위상정렬, 줄세우기, Topology Sort" /><published>2022-06-01T00:00:00-05:00</published><updated>2022-06-01T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/java/java-topology-sort</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/java/java-topology-sort/"><![CDATA[<p>데이터의 주어진 조건만으로 특정 순서를 정렬시키는 문제들에서 사용되는 알고리즘.  <br />
예를 들면 다음 조건이 제공될때, 주어진 조건을 조합하여 조건을 만들어 보면,</p>

<ul>
  <li>줄을 세워서 정렬이 가능한지? 불가능한지?</li>
  <li>가능하면 정렬을 하는 미션</li>
</ul>

<p><a href="https://www.acmicpc.net/problem/2252" target="_blank">백준 2252</a></p>

<p>Queue 를 사용하여 정렬하며, 정렬하는 방법  <br />
<img src="\assets/images_post/java/topology_sort_01.png" alt="Topology순서" /></p>

<p>![topology]</p>
<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TopologySort</span> <span class="o">{</span>

	<span class="kd">static</span> <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
	<span class="kd">static</span> <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">max</span><span class="o">;</span>
	
	<span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">inputline</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span> <span class="c1">// 진입하는 선의 수를 만듬</span>
	<span class="kd">static</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">[</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">topologySort</span><span class="o">()</span> <span class="o">{</span>
		
		<span class="kt">int</span><span class="o">[]</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
		
		<span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">q</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">();</span>
		
		<span class="c1">// 나를 향하는 input 선이 0개인 노드를 큐에 삽입합니다. </span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">inputline</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span>
				<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
		<span class="o">}</span>
		
		<span class="c1">// 정렬이 완전히 수행되려면 정확히 n개의 노드를 방문합니다.		</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="c1">// n개를 방문하기 전에 큐가 비어버리면 사이클이 발생한 상황</span>
			<span class="k">if</span><span class="o">(</span> <span class="n">q</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">)</span> <span class="o">{</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"사이클이 발생"</span><span class="o">);</span>
				<span class="k">return</span><span class="o">;</span>
			<span class="o">}</span>
			
			<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">().</span><span class="na">intValue</span><span class="o">();</span>

			<span class="n">result</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>
			
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">arr</span><span class="o">[</span><span class="n">x</span><span class="o">].</span><span class="na">size</span><span class="o">();</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
				
				<span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="n">x</span><span class="o">].</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">).</span><span class="na">intValue</span><span class="o">();</span>

				<span class="c1">// 나를 향하는 input 선을 제거하고 남은 수량이 0이 된 정점을 큐에 삽입합니다. </span>
				<span class="k">if</span><span class="o">(--</span><span class="n">inputline</span><span class="o">[</span><span class="n">y</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span>
					<span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">y</span><span class="o">);</span>
			<span class="o">}</span>
			
		<span class="o">}</span><span class="c1">//end for</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%d "</span><span class="o">,</span> <span class="n">result</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		
		<span class="n">n</span> <span class="o">=</span> <span class="mi">5</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="c1">//arr 초기화</span>
			<span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">();</span>
		<span class="o">}</span>
		
		<span class="n">arr</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>		<span class="n">inputline</span><span class="o">[</span><span class="mi">2</span><span class="o">]++;</span>
		<span class="n">arr</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="mi">4</span><span class="o">);</span>		<span class="n">inputline</span><span class="o">[</span><span class="mi">4</span><span class="o">]++;</span>
		<span class="n">arr</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>		<span class="n">inputline</span><span class="o">[</span><span class="mi">5</span><span class="o">]++;</span>

		<span class="n">arr</span><span class="o">[</span><span class="mi">2</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>		<span class="n">inputline</span><span class="o">[</span><span class="mi">3</span><span class="o">]++;</span>
		<span class="n">arr</span><span class="o">[</span><span class="mi">2</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="mi">4</span><span class="o">);</span>		<span class="n">inputline</span><span class="o">[</span><span class="mi">4</span><span class="o">]++;</span>
	
		<span class="n">arr</span><span class="o">[</span><span class="mi">3</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>		<span class="n">inputline</span><span class="o">[</span><span class="mi">5</span><span class="o">]++;</span>
		
		<span class="n">topologySort</span><span class="o">();</span>
		
	<span class="o">}</span>

<span class="o">}</span>

<span class="c1">//출력</span>
<span class="c1">//arr[2].add(3);		inputline[3]++;</span>
<span class="c1">//arr[2].add(4);		inputline[4]++;</span>
<span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> 

<span class="c1">//출력(순서를 변경하여 등록할 경우)</span>
<span class="c1">//arr[2].add(4);		inputline[4]++;</span>
<span class="c1">//arr[2].add(3);		inputline[3]++;</span>
<span class="mi">1</span> <span class="mi">2</span> <span class="mi">4</span> <span class="mi">3</span> <span class="mi">5</span> 

</code></pre></div></div>

<p><a href="https://blog.naver.com/ndb796/221236874984" target="_blank">참고 문헌 : 안경잡개발자 블로그</a></p>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="java" /><category term="Topology" /><category term="위상정렬" /><category term="줄세우기" /><category term="백준2252" /><category term="백준1516" /><category term="백준1948" /><summary type="html"><![CDATA[데이터의 주어진 조건만으로 특정 순서를 정렬시키는 문제들에서 사용되는 알고리즘. 예를 들면 다음 조건이 제공될때, 주어진 조건을 조합하여 조건을 만들어 보면,]]></summary></entry><entry><title type="html">[Java] Input값 처리</title><link href="https://kimjaehyun.co.kr/java/codingtest/java-input-test/" rel="alternate" type="text/html" title="[Java] Input값 처리" /><published>2022-06-01T00:00:00-05:00</published><updated>2022-06-01T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/java/codingtest/java-input-test</id><content type="html" xml:base="https://kimjaehyun.co.kr/java/codingtest/java-input-test/"><![CDATA[<p>백준 사이트와 같은 온라인저지 사이트에서 Input 처리시 <code class="language-plaintext highlighter-rouge">Scanner</code>를 사용하는데, <code class="language-plaintext highlighter-rouge">BufferedReader</code>를 사용할때와 성능 차이가 나는 것으로 생각됩니다.  <br />
특히 대량 데이트 Row 전달시 성능저하 현상이 발생하것으로 판단되네요.</p>

<h2 id="sample-source-code">Sample Source Code</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">InputTest</span> <span class="o">{</span>

	<span class="kd">static</span> <span class="kt">void</span> <span class="nf">inputType1</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
		<span class="k">try</span> <span class="o">{</span>
			<span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
			
			<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="kt">int</span> <span class="no">M</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"N: %d M: %d \n"</span><span class="o">,</span><span class="no">N</span><span class="o">,</span><span class="no">M</span><span class="o">);</span>
			
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="no">M</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				
				<span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
				<span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
				<span class="c1">//System.out.format("%d %d \n",s,e);</span>
			<span class="o">}</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"End"</span><span class="o">);</span>
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>	
		
	<span class="o">}</span>
	
	<span class="kd">static</span> <span class="kt">void</span> <span class="nf">inputType2</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
		<span class="k">try</span> <span class="o">{</span>
			<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
			<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
			
			<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			<span class="kt">int</span> <span class="no">M</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"N: %d M: %d \n"</span><span class="o">,</span><span class="no">N</span><span class="o">,</span><span class="no">M</span><span class="o">);</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="no">M</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">st</span> 	<span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
				<span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
				<span class="c1">//System.out.format("%d %d \n",s,e);</span>
			<span class="o">}</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"End"</span><span class="o">);</span>
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>	
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

		<span class="k">try</span> <span class="o">{</span>
			<span class="c1">// inputType2();</span>
			<span class="c1">// inputType2();</span>
			
		<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
		<span class="o">}</span>	
		
		
	<span class="o">}</span>

<span class="o">}</span>


<span class="cm">/*

4 2
4 2
3 1

*/</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="java" /><category term="codingtest" /><category term="Input값" /><category term="백준" /><category term="코딩테스트" /><category term="Scanner" /><category term="BufferedReader" /><summary type="html"><![CDATA[백준 사이트와 같은 온라인저지 사이트에서 Input 처리시 Scanner를 사용하는데, BufferedReader를 사용할때와 성능 차이가 나는 것으로 생각됩니다. 특히 대량 데이트 Row 전달시 성능저하 현상이 발생하것으로 판단되네요.]]></summary></entry><entry><title type="html">[Java][Python] 범위 줄이기</title><link href="https://kimjaehyun.co.kr/algorithm/codingtest/algorithm-binary_range_search/" rel="alternate" type="text/html" title="[Java][Python] 범위 줄이기" /><published>2022-06-01T00:00:00-05:00</published><updated>2022-06-01T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/codingtest/algorithm-binary_range_search</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/codingtest/algorithm-binary_range_search/"><![CDATA[<p>이진 검색 알고리즘 (Binary search algorithm)또는 슬라이딩 윈도우 방법을 활용하여, 시작과 끝 범위를 좁히는 알고리즘 입니다.  <br />
다음은 중간 값을 비교해서 이상, 이하로 검색 범위를 좁히는 방식(이진 검색)에서 착한한 문제 풀이 패턴 입니다.</p>

<h1 id="범위-검색-패턴">범위 검색 패턴</h1>
<p>시작 범위, 종료 범위 중 조건을 검사하여 좁히는 문제에 사용하는 방식,
이중 For문 출제 문제에서 O(N^2) 을 O(N) 수준으로 복잡도를 졸이기 위해서 사용됩니다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="mi">10000</span><span class="o">;</span> <span class="c1">// 종료 지점</span>

<span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span> 

<span class="k">while</span> <span class="o">(</span> <span class="n">s</span> <span class="o">&lt;=</span> <span class="n">e</span> <span class="o">){</span>
    <span class="n">m</span> <span class="o">=</span> <span class="o">(</span><span class="n">s</span><span class="o">+</span><span class="mi">2</span><span class="o">)/</span><span class="mi">2</span><span class="o">;</span> <span class="c1">// 중간 값</span>
    <span class="k">if</span><span class="o">(</span> <span class="n">check_function</span><span class="o">(</span><span class="n">m</span><span class="o">)</span> <span class="o">){</span>
        <span class="n">s</span> <span class="o">=</span> <span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span><span class="k">else</span><span class="o">{</span>
        <span class="n">e</span> <span class="o">=</span> <span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// check_function </span>
<span class="c1">//s 값을 조정할지, e 값을 조정할지 판단하는 함수를 구현</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">s</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">e</span> <span class="o">=</span> <span class="mi">10000</span>

<span class="k">while</span>  <span class="n">s</span> <span class="o">&lt;=</span> <span class="n">e</span> <span class="p">:</span>
    <span class="n">m</span> <span class="o">=</span> <span class="p">(</span><span class="n">s</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span><span class="p">;</span> 
    <span class="k">if</span> <span class="n">check_function</span><span class="p">(</span><span class="n">m</span><span class="p">):</span>
        <span class="n">s</span> <span class="o">=</span> <span class="n">m</span><span class="o">+</span><span class="mi">1</span>
    <span class="k">else</span>
        <span class="n">e</span> <span class="o">=</span> <span class="n">m</span><span class="o">-</span><span class="mi">1</span>
    
<span class="c1"># check_function 
#s 값을 조정할지, e 값을 조정할지 판단하는 함수를 구현
</span></code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="codingtest" /><category term="Binary" /><category term="슬라이딩 윈도우" /><summary type="html"><![CDATA[이진 검색 알고리즘 (Binary search algorithm)또는 슬라이딩 윈도우 방법을 활용하여, 시작과 끝 범위를 좁히는 알고리즘 입니다. 다음은 중간 값을 비교해서 이상, 이하로 검색 범위를 좁히는 방식(이진 검색)에서 착한한 문제 풀이 패턴 입니다.]]></summary></entry><entry><title type="html">[알고리즘] 자료 구조의 종류</title><link href="https://kimjaehyun.co.kr/algorithm/algorithm-datastructure/" rel="alternate" type="text/html" title="[알고리즘] 자료 구조의 종류" /><published>2022-05-31T00:00:00-05:00</published><updated>2022-05-31T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/algorithm/algorithm-datastructure</id><content type="html" xml:base="https://kimjaehyun.co.kr/algorithm/algorithm-datastructure/"><![CDATA[<p>몇몇은 자주 사용하지만, 알고 있으면 편리한 자료구조 목차.  <br />
자세한 샘플들은 CodingTest 메뉴에서 확인 필수.</p>

<h1 id="단순-구조">단순 구조</h1>
<ul>
  <li>정수</li>
  <li>실수</li>
  <li>문자</li>
  <li>문자열</li>
</ul>

<h1 id="선형-구조">선형 구조</h1>
<ul>
  <li>(선형/순차) 리스트
    <ul>
      <li>배열 (Array)</li>
      <li>레코드</li>
    </ul>
  </li>
  <li>연결 리스트 (Linked List)
    <ul>
      <li>단순 연결 리스트</li>
      <li>이중 연결 리스트</li>
      <li>원형 연결 리스트</li>
    </ul>
  </li>
  <li>스택 (Stack)</li>
  <li>큐 (Queue)</li>
  <li>데크 (Deque)</li>
</ul>

<h1 id="비선형-구조">비선형 구조</h1>
<ul>
  <li>트리 (Tree)
    <ul>
      <li>일반 트리</li>
      <li>이진 트리</li>
    </ul>
  </li>
  <li>그래프 (Graph)
    <ul>
      <li>방향 그래프</li>
      <li>무방향 그래프</li>
    </ul>
  </li>
</ul>

<h1 id="파일구조">파일구조</h1>
<ul>
  <li>순차 파일</li>
  <li>색인 파일</li>
  <li>직접 파일</li>
</ul>]]></content><author><name>devjaedol</name></author><category term="algorithm" /><category term="정수" /><category term="실수" /><category term="문자" /><category term="문자열" /><category term="리스트" /><category term="배열" /><category term="연결리스트" /><category term="스택" /><category term="큐" /><category term="데크" /><category term="트리" /><category term="그래프" /><category term="순차파일" /><category term="색인파일" /><category term="직접파일" /><summary type="html"><![CDATA[몇몇은 자주 사용하지만, 알고 있으면 편리한 자료구조 목차. 자세한 샘플들은 CodingTest 메뉴에서 확인 필수.]]></summary></entry><entry><title type="html">Python - for, enumerate</title><link href="https://kimjaehyun.co.kr/python/python_enumerate/" rel="alternate" type="text/html" title="Python - for, enumerate" /><published>2022-05-29T00:00:00-05:00</published><updated>2022-05-29T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_enumerate</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_enumerate/"><![CDATA[<p>반복문의 for와 enumerate 사용 정리</p>

<h1 id="for문을-통한-list-순회">for문을 통한 list 순회</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">arr</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>

<span class="c1">#출력
</span><span class="n">a</span>
<span class="n">b</span>
<span class="n">c</span>
<span class="n">d</span>
<span class="n">e</span>
</code></pre></div></div>
<p>위 조건에서 index를 함께 출력하고 싶을때?</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">arr</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">c</span> <span class="p">)</span>
    <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="c1">#출력
</span><span class="mi">0</span> <span class="n">a</span>
<span class="mi">1</span> <span class="n">b</span>
<span class="mi">2</span> <span class="n">c</span>
<span class="mi">3</span> <span class="n">d</span>
<span class="mi">4</span> <span class="n">e</span>
</code></pre></div></div>
<p>위 i의 변수가 for 종료 이후에도 메모리에 남는 문제가 있습니다.  <br />
아래 <code class="language-plaintext highlighter-rouge">len</code>을 사용하지만, 이부분도 최적의 해결안은 아닙니다.  <br />
index를 순회하면 되지만, 전체 len을 구해야되는 문제가 존재합니다</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">arr</span><span class="p">)):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">)</span>

<span class="c1">#출력
</span><span class="mi">0</span> <span class="n">a</span>
<span class="mi">1</span> <span class="n">b</span>
<span class="mi">2</span> <span class="n">c</span>
<span class="mi">3</span> <span class="n">d</span>
<span class="mi">4</span> <span class="n">e</span>
</code></pre></div></div>

<h1 id="enumerate을-통한-list-순회">enumerate을 통한 list 순회</h1>
<p>enumerate(순회데이터[,시작 인덱스])</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">data</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">idx</span><span class="p">,</span> <span class="n">data</span> <span class="p">)</span>

<span class="c1">#출력
</span><span class="mi">0</span> <span class="n">a</span>
<span class="mi">1</span> <span class="n">b</span>
<span class="mi">2</span> <span class="n">c</span>
<span class="mi">3</span> <span class="n">d</span>
<span class="mi">4</span> <span class="n">e</span>
</code></pre></div></div>
<p>시작 인자를 변경한다면, 다음과 같이 출력됩니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">data</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span><span class="mi">50</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">idx</span><span class="p">,</span> <span class="n">data</span> <span class="p">)</span>

<span class="c1">#출력
</span><span class="mi">50</span> <span class="n">a</span>
<span class="mi">51</span> <span class="n">b</span>
<span class="mi">52</span> <span class="n">c</span>
<span class="mi">53</span> <span class="n">d</span>
<span class="mi">54</span> <span class="n">e</span>
</code></pre></div></div>

<h1 id="enumerate-vs-iter">enumerate vs iter</h1>
<p><code class="language-plaintext highlighter-rouge">iter</code> 함수는 <code class="language-plaintext highlighter-rouge">next</code>를 통해 item을 접근하는 enumerate와 동일한 방식을 제공합니다.
그러나 다른점은 index 를 반환 하는 여부가 차이가 존재합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="n">iter_data</span> <span class="o">=</span> <span class="nb">iter</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="s">'a'</span>
<span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="s">'b'</span>
<span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="s">'c'</span>
<span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="s">'d'</span>
<span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="s">'e'</span>
<span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
<span class="o">----------------------------</span>
<span class="n">StopIterationTraceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">)</span>
<span class="n">Input</span> <span class="n">In</span> <span class="p">[</span><span class="mi">49</span><span class="p">],</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">cell</span> <span class="n">line</span><span class="p">:</span> <span class="mi">1</span><span class="o">&gt;</span><span class="p">()</span>
<span class="o">----&gt;</span> <span class="mi">1</span> <span class="nb">next</span><span class="p">(</span><span class="n">iter_data</span><span class="p">)</span>
</code></pre></div></div>
<p>동일 기능을 enumerate를 사용할 경우</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="n">enum_data</span> <span class="o">=</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">'a'</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">'b'</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">'c'</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="s">'d'</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="s">'e'</span><span class="p">)</span>
<span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
<span class="o">----------------------------</span>
<span class="n">StopIterationTraceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">)</span>
<span class="n">Input</span> <span class="n">In</span> <span class="p">[</span><span class="mi">56</span><span class="p">],</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">cell</span> <span class="n">line</span><span class="p">:</span> <span class="mi">1</span><span class="o">&gt;</span><span class="p">()</span>
<span class="o">----&gt;</span> <span class="mi">1</span> <span class="nb">next</span><span class="p">(</span><span class="n">enum_data</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="enumerate을-사용-예">enumerate을 사용 예</h1>

<h2 id="2중-탐색-예제-on2">2중 탐색 예제 O(n^2)</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">data1</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">j</span><span class="p">,</span> <span class="n">data2</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">:],</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="n">data2</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">' '</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">''</span><span class="p">)</span>

<span class="c1">#출력
</span><span class="n">a</span> <span class="n">b</span> <span class="n">c</span> <span class="n">d</span> <span class="n">e</span> 
<span class="n">b</span> <span class="n">c</span> <span class="n">d</span> <span class="n">e</span> 
<span class="n">c</span> <span class="n">d</span> <span class="n">e</span> 
<span class="n">d</span> <span class="n">e</span> 
<span class="n">e</span> 
</code></pre></div></div>

<h2 id="리스트-형-변환">리스트 형 변환</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">,</span><span class="s">'e'</span><span class="p">]</span>
<span class="nb">list</span><span class="p">(</span><span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">))</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="p">[(</span><span class="mi">0</span><span class="p">,</span> <span class="s">'a'</span><span class="p">),</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">'b'</span><span class="p">),</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">'c'</span><span class="p">),</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="s">'d'</span><span class="p">),</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="s">'e'</span><span class="p">)]</span>
</code></pre></div></div>

<h2 id="2차원-배열-쉽게-접근">2차원 배열 쉽게 접근</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">],[</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">],[</span><span class="s">'e'</span><span class="p">,</span><span class="s">'f'</span><span class="p">]]</span>
<span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">arr</span><span class="p">)):</span>
    <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">r</span><span class="p">])):</span>
        <span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">arr</span><span class="p">[</span><span class="n">r</span><span class="p">][</span><span class="n">c</span><span class="p">])</span>
<span class="c1">#출력
</span><span class="mi">0</span> <span class="mi">0</span> <span class="n">a</span>
<span class="mi">0</span> <span class="mi">1</span> <span class="n">b</span>
<span class="mi">1</span> <span class="mi">0</span> <span class="n">c</span>
<span class="mi">1</span> <span class="mi">1</span> <span class="n">d</span>
<span class="mi">2</span> <span class="mi">0</span> <span class="n">e</span>
<span class="mi">2</span> <span class="mi">1</span> <span class="n">f</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">],[</span><span class="s">'c'</span><span class="p">,</span><span class="s">'d'</span><span class="p">],[</span><span class="s">'e'</span><span class="p">,</span><span class="s">'f'</span><span class="p">]]</span>
<span class="k">for</span> <span class="n">r</span><span class="p">,</span> <span class="n">row</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">arr</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">c</span><span class="p">,</span> <span class="n">data</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">row</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
<span class="c1">#출력
</span><span class="mi">0</span> <span class="mi">0</span> <span class="n">a</span>
<span class="mi">0</span> <span class="mi">1</span> <span class="n">b</span>
<span class="mi">1</span> <span class="mi">0</span> <span class="n">c</span>
<span class="mi">1</span> <span class="mi">1</span> <span class="n">d</span>
<span class="mi">2</span> <span class="mi">0</span> <span class="n">e</span>
<span class="mi">2</span> <span class="mi">1</span> <span class="n">f</span>
</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="enumerate" /><category term="for" /><summary type="html"><![CDATA[반복문의 for와 enumerate 사용 정리]]></summary></entry><entry><title type="html">Python - PriorityQueue, Heapq</title><link href="https://kimjaehyun.co.kr/python/python_PriorityQueue/" rel="alternate" type="text/html" title="Python - PriorityQueue, Heapq" /><published>2022-05-29T00:00:00-05:00</published><updated>2022-05-29T00:00:00-05:00</updated><id>https://kimjaehyun.co.kr/python/python_PriorityQueue</id><content type="html" xml:base="https://kimjaehyun.co.kr/python/python_PriorityQueue/"><![CDATA[<p>FIFO에서 우선순위 가중치를 주어 출력시키는 자료 구조 입니다. <br />
Java에서도 동일한 형태의 자료 구조가 존재 합니다.</p>

<h1 id="priorityqueue-사용예">PriorityQueue 사용예</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">from</span> <span class="nn">queue</span> <span class="kn">import</span> <span class="n">PriorityQueue</span>
<span class="n">pq</span> <span class="o">=</span> <span class="n">PriorityQueue</span><span class="p">()</span>        
<span class="c1">#pq = PriorityQueue(maxsie=10)   #초기; 사이즈 정의 가능함.
</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span>

<span class="k">while</span> <span class="n">pq</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">==</span> <span class="bp">False</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">pq</span><span class="p">.</span><span class="n">get</span><span class="p">())</span>

<span class="c1">#출력
</span><span class="mi">1</span>
<span class="mi">2</span>
<span class="mi">4</span>
<span class="mi">6</span>
<span class="mi">7</span>
<span class="mi">9</span>
</code></pre></div></div>

<h1 id="tuble-을-통한-정렬-순서-변경">Tuble 을 통한 정렬 순서 변경</h1>
<p><code class="language-plaintext highlighter-rouge">(우선순위, 값)</code> 의 튜플 형태로, 우선순위를 튜플의 첫번째로 입력처리하 하면 됩니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">queue</span> <span class="kn">import</span> <span class="n">PriorityQueue</span>
<span class="n">pq</span> <span class="o">=</span> <span class="n">PriorityQueue</span><span class="p">()</span>        

<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">((</span><span class="mi">9</span><span class="p">,</span><span class="s">'이승환'</span><span class="p">))</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span><span class="s">'이미자'</span><span class="p">))</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">((</span><span class="mi">4</span><span class="p">,</span><span class="s">'조용필'</span><span class="p">))</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">((</span><span class="mi">7</span><span class="p">,</span><span class="s">'아이유'</span><span class="p">))</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">((</span><span class="mi">1</span><span class="p">,</span><span class="s">'배철수'</span><span class="p">))</span>
<span class="n">pq</span><span class="p">.</span><span class="n">put</span><span class="p">((</span><span class="mi">6</span><span class="p">,</span><span class="s">'이승철'</span><span class="p">))</span>

<span class="k">while</span> <span class="n">pq</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">==</span> <span class="bp">False</span> <span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">pq</span><span class="p">.</span><span class="n">get</span><span class="p">()[</span><span class="mi">0</span><span class="p">],</span> <span class="n">pq</span><span class="p">.</span><span class="n">get</span><span class="p">()[</span><span class="mi">1</span><span class="p">])</span>

<span class="c1">#출력
</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">'배철수'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">'이미자'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="s">'조용필'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="s">'이승철'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">7</span><span class="p">,</span> <span class="s">'아이유'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">9</span><span class="p">,</span> <span class="s">'이승환'</span><span class="p">)</span>

</code></pre></div></div>

<h1 id="리스트를-통한-정렬-사용예">리스트를 통한 정렬 사용예</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 리스트 을 통한 정렬 순서 변경
</span>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">1</span><span class="p">,</span> <span class="s">"배철수"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">4</span><span class="p">,</span> <span class="s">"이미자"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span> <span class="s">"조용필"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="s">"아이유"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">9</span><span class="p">,</span> <span class="s">"이승환"</span><span class="p">))</span>

<span class="n">arr</span><span class="p">.</span><span class="n">sort</span><span class="p">(</span><span class="n">reverse</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>

<span class="k">while</span> <span class="n">arr</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>

<span class="c1">#출력
</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">'배철수'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">'아이유'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="s">'조용필'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="s">'이미자'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">9</span><span class="p">,</span> <span class="s">'이승환'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 리스트 을 통한 정렬 순서 변경
</span>
<span class="n">arr</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">1</span><span class="p">,</span> <span class="s">"배철수"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">4</span><span class="p">,</span> <span class="s">"이미자"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span> <span class="s">"조용필"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="s">"아이유"</span><span class="p">))</span>
<span class="n">arr</span><span class="p">.</span><span class="n">append</span><span class="p">((</span><span class="mi">9</span><span class="p">,</span> <span class="s">"이승환"</span><span class="p">))</span>

<span class="n">arr</span><span class="p">.</span><span class="n">sort</span><span class="p">(</span><span class="n">reverse</span> <span class="o">=</span> <span class="bp">False</span><span class="p">)</span>

<span class="k">while</span> <span class="n">arr</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>

<span class="c1">#출력
</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span> <span class="s">'이승환'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="s">'이미자'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="s">'조용필'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">'아이유'</span><span class="p">)</span>
<span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">'배철수'</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="heapq">Heapq</h1>
<p>힙에 대해서 알아야 알아야 되는데 완전 이진트리로 최상위 부모를 최대값(max heap), 최소값(min heap) 형태로 구성하는 자료 구조 형태를 사용한다.</p>

<p>주요 사용 메소드는</p>
<ul>
  <li>heapq.heappush(heap, item): item 추가</li>
  <li>heapq.heappop(heap): heap에서 최소값 pop return</li>
  <li>heapq.heapify(x): 리스트 x를 즉각적으로 heap으로 변환</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">heapq</span>

<span class="n">pq</span> <span class="o">=</span> <span class="p">[]</span>

<span class="n">heapq</span><span class="p">.</span><span class="n">heappush</span><span class="p">(</span><span class="n">pq</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">heapq</span><span class="p">.</span><span class="n">heappush</span><span class="p">(</span><span class="n">pq</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
<span class="n">heapq</span><span class="p">.</span><span class="n">heappush</span><span class="p">(</span><span class="n">pq</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
<span class="n">heapq</span><span class="p">.</span><span class="n">heappush</span><span class="p">(</span><span class="n">pq</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="n">heapq</span><span class="p">.</span><span class="n">heappush</span><span class="p">(</span><span class="n">pq</span><span class="p">,</span> <span class="mi">9</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">pq</span><span class="p">)</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">pq</span><span class="p">.)</span>
</code></pre></div></div>

<p>사전 list를 통해서 정렬하는 방식 <code class="language-plaintext highlighter-rouge">heapify</code></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">heapq</span>
<span class="n">d</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">]</span>
<span class="n">heapq</span><span class="p">.</span><span class="n">heapify</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
<span class="c1">#출력
</span><span class="o">&gt;</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>

<span class="k">while</span> <span class="n">pq</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">pq</span><span class="p">.</span><span class="n">pop</span><span class="p">())</span>

<span class="c1">#출력
</span><span class="mi">9</span>
<span class="mi">4</span>
<span class="mi">3</span>
<span class="mi">2</span>
<span class="mi">1</span>

</code></pre></div></div>]]></content><author><name>devjaedol</name></author><category term="python" /><category term="PriorityQueue" /><category term="queue" /><category term="FIFO" /><category term="우선순위큐" /><category term="자료구조" /><category term="Heapq" /><summary type="html"><![CDATA[FIFO에서 우선순위 가중치를 주어 출력시키는 자료 구조 입니다. Java에서도 동일한 형태의 자료 구조가 존재 합니다.]]></summary></entry></feed>